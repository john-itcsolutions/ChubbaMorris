module
{
    importlib("Elastos.CoreLibrary");       // import dependent libraries


    
    // interface ICH
    interface ICH {


   SetProperty.PropertyId(
     [in] String CProperty.property.propertyId);

    GetProperty.PropertyId(
     [out] String* CProperty.property.propertyId);


   SetProperty.PropertyAddressString(
     [in] String CProperty.property.propertyAddressString);

    GetProperty.PropertyAddressString(
     [out] String* CProperty.property.propertyAddressString);


   SetProperty.UnitNumber(
     [in] String CProperty.property.unitNumber);

    GetProperty.UnitNumber(
     [out] String* CProperty.property.unitNumber);


   SetProperty.StreetNumber(
     [in] String CProperty.property.streetNumber);

    GetProperty.StreetNumber(
     [out] String* CProperty.property.streetNumber);


   SetProperty.StreetName(
     [in] String CProperty.property.streetName);

    GetProperty.StreetName(
     [out] String* CProperty.property.streetName);


   SetProperty.SuburbTown(
     [in] String CProperty.property.suburbTown);

    GetProperty.SuburbTown(
     [out] String* CProperty.property.suburbTown);


   SetProperty.Postcode(
     [in] Int32 CProperty.property.postcode);

    GetProperty.Postcode(
     [out] Int32* CProperty.property.postcode);


   SetProperty.State(
     [in] CHelper.ausState CProperty.property.state);

    GetProperty.State(
     [out] CHelper.ausState* CProperty.property.state);


   SetProperty.EnvelopeGreetings(
     [in] String CProperty.property.envelopeGreetings);

    GetProperty.EnvelopeGreetings(
     [out] String* CProperty.property.envelopeGreetings);


   SetProperty.CorrespondenceFolderDocRef(
     [in] String CProperty.property.correspondenceFolderDocRef);

    GetProperty.CorrespondenceFolderDocRef(
     [out] String* CProperty.property.correspondenceFolderDocRef);


   SetProperty.StartDateLatestLease(
     [in] String CProperty.property.startDateLatestLease);

    GetProperty.StartDateLatestLease(
     [out] String* CProperty.property.startDateLatestLease);


   SetProperty.EndDateLatestLease(
     [in] String CProperty.property.endDateLatestLease);

    GetProperty.EndDateLatestLease(
     [out] String* CProperty.property.endDateLatestLease);


   SetProperty.Occupied(
     [in] Boolean CProperty.property.occupied);

    GetProperty.Occupied(
     [out] Boolean* CProperty.property.occupied);


   SetProperty.LocalGovArea(
     [in] String CProperty.property.localGovArea);

    GetProperty.LocalGovArea(
     [out] String* CProperty.property.localGovArea);


   SetProperty.Zoning(
     [in] String CProperty.property.zoning);

    GetProperty.Zoning(
     [out] String* CProperty.property.zoning);


   SetProperty.Lot(
     [in] String CProperty.property.lot);

    GetProperty.Lot(
     [out] String* CProperty.property.lot);


   SetProperty.DP(
     [in] String CProperty.property.dP);

    GetProperty.DP(
     [out] String* CProperty.property.dP);


   SetProperty.SP(
     [in] String CProperty.property.sP);

    GetProperty.SP(
     [out] String* CProperty.property.sP);


   SetProperty.DCPNum(
     [in] String CProperty.property.dCPNum);

    GetProperty.DCPNum(
     [out] String* CProperty.property.dCPNum);


   SetProperty.Parish(
     [in] String CProperty.property.parish);

    GetProperty.Parish(
     [out] String* CProperty.property.parish);


   SetProperty.Description(
     [in] String CProperty.property.description);

    GetProperty.Description(
     [out] String* CProperty.property.description);


   SetProperty.Lon(
     [in] Double CProperty.property.lon);

    GetProperty.Lon(
     [out] Double* CProperty.property.lon);


   SetProperty.Lat(
     [in] Double CProperty.property.lat);

    GetProperty.Lat(
     [out] Double* CProperty.property.lat);


   SetProperty.Elevation(
     [in] Double CProperty.property.elevation);

    GetProperty.Elevation(
     [out] Double* CProperty.property.elevation);


   SetProperty.Liens(
     [in] Boolean CProperty.property.liens);

    GetProperty.Liens(
     [out] Boolean* CProperty.property.liens);


   SetProperty.NumBedrooms(
     [in] Int32 CProperty.property.numBedrooms);

    GetProperty.NumBedrooms(
     [out] Int32* CProperty.property.numBedrooms);


   SetProperty.NumEnsuites(
     [in] Int32 CProperty.property.numEnsuites);

    GetProperty.NumEnsuites(
     [out] Int32* CProperty.property.numEnsuites);


   SetProperty.NumBathrooms(
     [in] Int32 CProperty.property.numBathrooms);

    GetProperty.NumBathrooms(
     [out] Int32* CProperty.property.numBathrooms);


   SetProperty.NumStoreys(
     [in] Int32 CProperty.property.numStoreys);

    GetProperty.NumStoreys(
     [out] Int32* CProperty.property.numStoreys);


   SetProperty.Furnished(
     [in] Boolean CProperty.property.furnished);

    GetProperty.Furnished(
     [out] Boolean* CProperty.property.furnished);


   SetProperty.ConstructionTypeName(
     [in] String CProperty.property.constructionTypeName);

    GetProperty.ConstructionTypeName(
     [out] String* CProperty.property.constructionTypeName);


   SetProperty.FolioCertCopyDocRef(
     [in] String CProperty.property.folioCertCopyDocRef);

    GetProperty.FolioCertCopyDocRef(
     [out] String* CProperty.property.folioCertCopyDocRef);


   SetProperty.CopyOfDepositedPlanDocRef(
     [in] String CProperty.property.copyOfDepositedPlanDocRef);

    GetProperty.CopyOfDepositedPlanDocRef(
     [out] String* CProperty.property.copyOfDepositedPlanDocRef);


   SetProperty.CopiesOfLiensDocrefs(
     [in] ArrayOf<String> CProperty.property.copiesOfLiensDocrefs);

    GetProperty.CopiesOfLiensDocrefs(
     [out, callee] ArrayOf<String>* CProperty.property.copiesOfLiensDocrefs);


   SetProperty.CopyOfBuildingCertDocRef(
     [in] String CProperty.property.copyOfBuildingCertDocRef);

    GetProperty.CopyOfBuildingCertDocRef(
     [out] String* CProperty.property.copyOfBuildingCertDocRef);


   SetProperty.CopyOfInsuranceCertDocRef(
     [in] String CProperty.property.copyOfInsuranceCertDocRef);

    GetProperty.CopyOfInsuranceCertDocRef(
     [out] String* CProperty.property.copyOfInsuranceCertDocRef);


   SetProperty.FolderContainingWarrantiesDocRef(
     [in] String CProperty.property.folderContainingWarrantiesDocRef);

    GetProperty.FolderContainingWarrantiesDocRef(
     [out] String* CProperty.property.folderContainingWarrantiesDocRef);


   SetProperty.CopyOfPlanningCertSection149DEPADocRef(
     [in] String CProperty.property.copyOfPlanningCertSection149DEPADocRef);

    GetProperty.CopyOfPlanningCertSection149DEPADocRef(
     [out] String* CProperty.property.copyOfPlanningCertSection149DEPADocRef);


   SetProperty.CopyOfSection88GCertDocRef(
     [in] String CProperty.property.copyOfSection88GCertDocRef);

    GetProperty.CopyOfSection88GCertDocRef(
     [out] String* CProperty.property.copyOfSection88GCertDocRef);


   SetProperty.FolderContainingAdditionalAnnexuresDocRef(
     [in] String CProperty.property.folderContainingAdditionalAnnexuresDocRef);

    GetProperty.FolderContainingAdditionalAnnexuresDocRef(
     [out] String* CProperty.property.folderContainingAdditionalAnnexuresDocRef);


   SetProperty.FolderContainingAdditionalDisclosuresDocRef(
     [in] String CProperty.property.folderContainingAdditionalDisclosuresDocRef);

    GetProperty.FolderContainingAdditionalDisclosuresDocRef(
     [out] String* CProperty.property.folderContainingAdditionalDisclosuresDocRef);


   SetProperty.CopyOfSurveyReportsDocRefs(
     [in] ArrayOf<String> CProperty.property.copyOfSurveyReportsDocRefs);

    GetProperty.CopyOfSurveyReportsDocRefs(
     [out, callee] ArrayOf<String>* CProperty.property.copyOfSurveyReportsDocRefs);


   SetProperty.DrainageDiagsSewerRefSheetsDocRefs(
     [in] ArrayOf<String> CProperty.property.drainageDiagsSewerRefSheetsDocRefs);

    GetProperty.DrainageDiagsSewerRefSheetsDocRefs(
     [out, callee] ArrayOf<String>* CProperty.property.drainageDiagsSewerRefSheetsDocRefs);


   SetProperty.BuildingInspectionDocRefs(
     [in] ArrayOf<String> CProperty.property.buildingInspectionDocRefs);

    GetProperty.BuildingInspectionDocRefs(
     [out, callee] ArrayOf<String>* CProperty.property.buildingInspectionDocRefs);


   SetProperty.PestInspectionDocRefs(
     [in] ArrayOf<String> CProperty.property.pestInspectionDocRefs);

    GetProperty.PestInspectionDocRefs(
     [out, callee] ArrayOf<String>* CProperty.property.pestInspectionDocRefs);


   SetProperty.ProblemsWithPropertyDocRefs(
     [in] ArrayOf<String> CProperty.property.problemsWithPropertyDocRefs);

    GetProperty.ProblemsWithPropertyDocRefs(
     [out, callee] ArrayOf<String>* CProperty.property.problemsWithPropertyDocRefs);


   SetProperty.PropertyOwnerSharePercents(
     [in] ArrayOf<Double> CProperty.property.propertyOwnerSharePercents);

    GetProperty.PropertyOwnerSharePercents(
     [out, callee] ArrayOf<Double>* CProperty.property.propertyOwnerSharePercents);


   SetProperty.CapitalValue(
     [in] Double CProperty.property.capitalValue);

    GetProperty.CapitalValue(
     [out] Double* CProperty.property.capitalValue);


   SetProperty.FloorPrice(
     [in] Double CProperty.property.floorPrice);

    GetProperty.FloorPrice(
     [out] Double* CProperty.property.floorPrice);


   SetProperty.LatestBuyOfferPrice(
     [in] Double CProperty.property.latestBuyOfferPrice);

    GetProperty.LatestBuyOfferPrice(
     [out] Double* CProperty.property.latestBuyOfferPrice);


   SetProperty.LatestBuyOfferDateTime(
     [in] String CProperty.property.latestBuyOfferDateTime);

    GetProperty.LatestBuyOfferDateTime(
     [out] String* CProperty.property.latestBuyOfferDateTime);


   SetProperty.LatestBuyOfferPriceAccepted(
     [in] Boolean CProperty.property.latestBuyOfferPriceAccepted);

    GetProperty.LatestBuyOfferPriceAccepted(
     [out] Boolean* CProperty.property.latestBuyOfferPriceAccepted);


   SetProperty.LatestBuyOfferNotes(
     [in] ArrayOf<String> CProperty.property.latestBuyOfferNotes);

    GetProperty.LatestBuyOfferNotes(
     [out, callee] ArrayOf<String>* CProperty.property.latestBuyOfferNotes);


   SetProperty.RentalValue(
     [in] Double CProperty.property.rentalValue);

    GetProperty.RentalValue(
     [out] Double* CProperty.property.rentalValue);


   SetProperty.LandTotalSquareMetres(
     [in] Double CProperty.property.landTotalSquareMetres);

    GetProperty.LandTotalSquareMetres(
     [out] Double* CProperty.property.landTotalSquareMetres);


   SetProperty.LandTotalHectares(
     [in] Double CProperty.property.landTotalHectares);

    GetProperty.LandTotalHectares(
     [out] Double* CProperty.property.landTotalHectares);


   SetProperty.BuildingTotalSquareMetres(
     [in] Double CProperty.property.buildingTotalSquareMetres);

    GetProperty.BuildingTotalSquareMetres(
     [out] Double* CProperty.property.buildingTotalSquareMetres);


   SetProperty.Amenities(
     [in] ArrayOf<String> CProperty.property.amenities);

    GetProperty.Amenities(
     [out, callee] ArrayOf<String>* CProperty.property.amenities);


   SetProperty.PropertyTradingBasis(
     [in] CHelper.propertyTradingBasis CProperty.property.propertyTradingBasis);

    GetProperty.PropertyTradingBasis(
     [out] CHelper.propertyTradingBasis* CProperty.property.propertyTradingBasis);


   SetProperty.PropertyType(
     [in] CHelper.propertyType CProperty.property.propertyType);

    GetProperty.PropertyType(
     [out] CHelper.propertyType* CProperty.property.propertyType);


   SetProperty.LeaseType(
     [in] CHelper.leaseType CProperty.property.leaseType);

    GetProperty.LeaseType(
     [out] CHelper.leaseType* CProperty.property.leaseType);


   SetProperty.LeaseArrangement(
     [in] CHelper.leaseArrangement CProperty.property.leaseArrangement);

    GetProperty.LeaseArrangement(
     [out] CHelper.leaseArrangement* CProperty.property.leaseArrangement);


   SetProperty.LeasingTerm(
     [in] CHelper.leasingTerm CProperty.property.leasingTerm);

    GetProperty.LeasingTerm(
     [out] CHelper.leasingTerm* CProperty.property.leasingTerm);


   SetProperty.RentalPaymentInterval(
     [in] CHelper.billingInterval CProperty.property.rentalPaymentInterval);

    GetProperty.RentalPaymentInterval(
     [out] CHelper.billingInterval* CProperty.property.rentalPaymentInterval);


   SetProperty.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.property.businessChannelOwnerId);

    GetProperty.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.property.businessChannelOwnerId);


   SetProperty.BranchId(
     [in] CAdministration.branch CProperty.property.branchId);

    GetProperty.BranchId(
     [out] CAdministration.branch* CProperty.property.branchId);


   SetProperty.DeptId(
     [in] CAdministration.department CProperty.property.deptId);

    GetProperty.DeptId(
     [out] CAdministration.department* CProperty.property.deptId);


   SetProperty.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CProperty.property.propertyOwnerIds);

    GetProperty.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CProperty.property.propertyOwnerIds);


   SetProperty.PropertyConstructionTypeId(
     [in] CProperty.propertyConstructionType CProperty.property.propertyConstructionTypeId);

    GetProperty.PropertyConstructionTypeId(
     [out] CProperty.propertyConstructionType* CProperty.property.propertyConstructionTypeId);


   SetProperty.TenancyId(
     [in] CProperty.tenant CProperty.property.tenancyId);

    GetProperty.TenancyId(
     [out] CProperty.tenant* CProperty.property.tenancyId);


   SetProperty.DocRefs(
     [in] ArrayOf<CAdministration.documents> CProperty.property.docRefs);

    GetProperty.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.property.docRefs);


   SetProperty.ImageRefs(
     [in] ArrayOf<CAdministration.images> CProperty.property.imageRefs);

    GetProperty.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.property.imageRefs);


   SetProperty.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CProperty.property.audioRefIds);

    GetProperty.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CProperty.property.audioRefIds);


   SetProperty.VideoRefs(
     [in] ArrayOf<CAdministration.video> CProperty.property.videoRefs);

    GetProperty.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CProperty.property.videoRefs);





   SetPropertyConstructionType.PropertyConstructionTypeId(
     [in] String CProperty.propertyConstructionType.propertyConstructionTypeId);

    GetPropertyConstructionType.PropertyConstructionTypeId(
     [out] String* CProperty.propertyConstructionType.propertyConstructionTypeId);


   SetPropertyConstructionType.ConstructionTypeName(
     [in] String CProperty.propertyConstructionType.constructionTypeName);

    GetPropertyConstructionType.ConstructionTypeName(
     [out] String* CProperty.propertyConstructionType.constructionTypeName);


   SetPropertyConstructionType.Description(
     [in] String CProperty.propertyConstructionType.description);

    GetPropertyConstructionType.Description(
     [out] String* CProperty.propertyConstructionType.description);


   SetPropertyConstructionType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.propertyConstructionType.docRefIds);

    GetPropertyConstructionType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.propertyConstructionType.docRefIds);


   SetPropertyConstructionType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.propertyConstructionType.imageRefIds);

    GetPropertyConstructionType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.propertyConstructionType.imageRefIds);


   SetPropertyConstructionType.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CProperty.propertyConstructionType.audioRefIds);

    GetPropertyConstructionType.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CProperty.propertyConstructionType.audioRefIds);


   SetPropertyConstructionType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CProperty.propertyConstructionType.videoRefIds);

    GetPropertyConstructionType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CProperty.propertyConstructionType.videoRefIds);


   SetPropertyConstructionType.RiskIds(
     [in] ArrayOf<CAdministration.riskRegister> CProperty.propertyConstructionType.riskIds);

    GetPropertyConstructionType.RiskIds(
     [out, callee] ArrayOf<CAdministration.riskRegister>* CProperty.propertyConstructionType.riskIds);


   SetPropertyConstructionType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.propertyConstructionType.businessChannelOwnerId);

    GetPropertyConstructionType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.propertyConstructionType.businessChannelOwnerId);





   SetPropertyOwner.PropertyOwnerId(
     [in] String CProperty.propertyOwner.propertyOwnerId);

    GetPropertyOwner.PropertyOwnerId(
     [out] String* CProperty.propertyOwner.propertyOwnerId);


   SetPropertyOwner.LinkedToThisCustomerId(
     [in] String CProperty.propertyOwner.linkedToThisCustomerId);

    GetPropertyOwner.LinkedToThisCustomerId(
     [out] String* CProperty.propertyOwner.linkedToThisCustomerId);


   SetPropertyOwner.LinkedToThisSupplierId(
     [in] String CProperty.propertyOwner.linkedToThisSupplierId);

    GetPropertyOwner.LinkedToThisSupplierId(
     [out] String* CProperty.propertyOwner.linkedToThisSupplierId);


   SetPropertyOwner.FirstName(
     [in] String CProperty.propertyOwner.firstName);

    GetPropertyOwner.FirstName(
     [out] String* CProperty.propertyOwner.firstName);


   SetPropertyOwner.LastName(
     [in] String CProperty.propertyOwner.lastName);

    GetPropertyOwner.LastName(
     [out] String* CProperty.propertyOwner.lastName);


   SetPropertyOwner.ResidentialAddress(
     [in] String CProperty.propertyOwner.residentialAddress);

    GetPropertyOwner.ResidentialAddress(
     [out] String* CProperty.propertyOwner.residentialAddress);


   SetPropertyOwner.PostalAddress(
     [in] String CProperty.propertyOwner.postalAddress);

    GetPropertyOwner.PostalAddress(
     [out] String* CProperty.propertyOwner.postalAddress);


   SetPropertyOwner.Email(
     [in] String CProperty.propertyOwner.email);

    GetPropertyOwner.Email(
     [out] String* CProperty.propertyOwner.email);


   SetPropertyOwner.HomePhone(
     [in] Int32 CProperty.propertyOwner.homePhone);

    GetPropertyOwner.HomePhone(
     [out] Int32* CProperty.propertyOwner.homePhone);


   SetPropertyOwner.MobilePhone(
     [in] Int32 CProperty.propertyOwner.mobilePhone);

    GetPropertyOwner.MobilePhone(
     [out] Int32* CProperty.propertyOwner.mobilePhone);


   SetPropertyOwner.WorkPhone(
     [in] Int32 CProperty.propertyOwner.workPhone);

    GetPropertyOwner.WorkPhone(
     [out] Int32* CProperty.propertyOwner.workPhone);


   SetPropertyOwner.BankName(
     [in] String CProperty.propertyOwner.bankName);

    GetPropertyOwner.BankName(
     [out] String* CProperty.propertyOwner.bankName);


   SetPropertyOwner.BankBSB(
     [in] Int32 CProperty.propertyOwner.bankBSB);

    GetPropertyOwner.BankBSB(
     [out] Int32* CProperty.propertyOwner.bankBSB);


   SetPropertyOwner.BankAccountNumber(
     [in] Int32 CProperty.propertyOwner.bankAccountNumber);

    GetPropertyOwner.BankAccountNumber(
     [out] Int32* CProperty.propertyOwner.bankAccountNumber);


   SetPropertyOwner.ContactedWithDetails(
     [in] ArrayOf<String> CProperty.propertyOwner.contactedWithDetails);

    GetPropertyOwner.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CProperty.propertyOwner.contactedWithDetails);


   SetPropertyOwner.SharesPercents(
     [in] ArrayOf<Double> CProperty.propertyOwner.sharesPercents);

    GetPropertyOwner.SharesPercents(
     [out, callee] ArrayOf<Double>* CProperty.propertyOwner.sharesPercents);


   SetPropertyOwner.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.propertyOwner.businessChannelOwnerId);

    GetPropertyOwner.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.propertyOwner.businessChannelOwnerId);


   SetPropertyOwner.BranchId(
     [in] CAdministration.branch CProperty.propertyOwner.branchId);

    GetPropertyOwner.BranchId(
     [out] CAdministration.branch* CProperty.propertyOwner.branchId);


   SetPropertyOwner.PropertyIds(
     [in] ArrayOf<CProperty.property> CProperty.propertyOwner.propertyIds);

    GetPropertyOwner.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CProperty.propertyOwner.propertyIds);


   SetPropertyOwner.CustomerId(
     [in] CCustomer.customer CProperty.propertyOwner.customerId);

    GetPropertyOwner.CustomerId(
     [out] CCustomer.customer* CProperty.propertyOwner.customerId);


   SetPropertyOwner.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.propertyOwner.docRefIds);

    GetPropertyOwner.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.propertyOwner.docRefIds);


   SetPropertyOwner.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.propertyOwner.imageRefIds);

    GetPropertyOwner.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.propertyOwner.imageRefIds);





   SetProgram.ProgramId(
     [in] String CProperty.program.programId);

    GetProgram.ProgramId(
     [out] String* CProperty.program.programId);


   SetProgram.ProgramName(
     [in] String CProperty.program.programName);

    GetProgram.ProgramName(
     [out] String* CProperty.program.programName);


   SetProgram.Description(
     [in] String CProperty.program.description);

    GetProgram.Description(
     [out] String* CProperty.program.description);


   SetProgram.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.program.docRefIds);

    GetProgram.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.program.docRefIds);


   SetProgram.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.program.imageRefIds);

    GetProgram.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.program.imageRefIds);


   SetProgram.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.program.businessChannelOwnerId);

    GetProgram.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.program.businessChannelOwnerId);


   SetProgram.BranchId(
     [in] CAdministration.branch CProperty.program.branchId);

    GetProgram.BranchId(
     [out] CAdministration.branch* CProperty.program.branchId);


   SetProgram.DeptId(
     [in] CAdministration.department CProperty.program.deptId);

    GetProgram.DeptId(
     [out] CAdministration.department* CProperty.program.deptId);





   SetProject.ProjectId(
     [in] String CProperty.project.projectId);

    GetProject.ProjectId(
     [out] String* CProperty.project.projectId);


   SetProject.ProjectName(
     [in] String CProperty.project.projectName);

    GetProject.ProjectName(
     [out] String* CProperty.project.projectName);


   SetProject.Description(
     [in] String CProperty.project.description);

    GetProject.Description(
     [out] String* CProperty.project.description);


   SetProject.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.project.docRefIds);

    GetProject.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.project.docRefIds);


   SetProject.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.project.imageRefIds);

    GetProject.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.project.imageRefIds);


   SetProject.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.project.businessChannelOwnerId);

    GetProject.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.project.businessChannelOwnerId);


   SetProject.BranchId(
     [in] CAdministration.branch CProperty.project.branchId);

    GetProject.BranchId(
     [out] CAdministration.branch* CProperty.project.branchId);


   SetProject.DeptId(
     [in] CAdministration.department CProperty.project.deptId);

    GetProject.DeptId(
     [out] CAdministration.department* CProperty.project.deptId);





   SetAdvertisingBudgetSchedule.AdvertScheduleId(
     [in] String CProperty.advertisingBudgetSchedule.advertScheduleId);

    GetAdvertisingBudgetSchedule.AdvertScheduleId(
     [out] String* CProperty.advertisingBudgetSchedule.advertScheduleId);


   SetAdvertisingBudgetSchedule.AdvertisingMedium(
     [in] CHelper.advertisingMedium CProperty.advertisingBudgetSchedule.AdvertisingMedium);

    GetAdvertisingBudgetSchedule.AdvertisingMedium(
     [out] CHelper.advertisingMedium* CProperty.advertisingBudgetSchedule.AdvertisingMedium);


   SetAdvertisingBudgetSchedule.PreviousSchedId(
     [in] String CProperty.advertisingBudgetSchedule.previousSchedId);

    GetAdvertisingBudgetSchedule.PreviousSchedId(
     [out] String* CProperty.advertisingBudgetSchedule.previousSchedId);


   SetAdvertisingBudgetSchedule.month(
     [in] CHelper.month CProperty.advertisingBudgetSchedule.month);

    GetAdvertisingBudgetSchedule.month(
     [out] CHelper.month* CProperty.advertisingBudgetSchedule.month);


   SetAdvertisingBudgetSchedule.BudgetedAmount(
     [in] Double CProperty.advertisingBudgetSchedule.budgetedAmount);

    GetAdvertisingBudgetSchedule.BudgetedAmount(
     [out] Double* CProperty.advertisingBudgetSchedule.budgetedAmount);


   SetAdvertisingBudgetSchedule.RunDateTimes(
     [in] ArrayOf<String> CProperty.advertisingBudgetSchedule.runDateTimes);

    GetAdvertisingBudgetSchedule.RunDateTimes(
     [out, callee] ArrayOf<String>* CProperty.advertisingBudgetSchedule.runDateTimes);


   SetAdvertisingBudgetSchedule.PropertyId(
     [in] CProperty.property CProperty.advertisingBudgetSchedule.propertyId);

    GetAdvertisingBudgetSchedule.PropertyId(
     [out] CProperty.property* CProperty.advertisingBudgetSchedule.propertyId);


   SetAdvertisingBudgetSchedule.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CProperty.advertisingBudgetSchedule.propertyOwnerIds);

    GetAdvertisingBudgetSchedule.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CProperty.advertisingBudgetSchedule.propertyOwnerIds);


   SetAdvertisingBudgetSchedule.AdvertDesignIds(
     [in] ArrayOf<CAdministration.advertisingTemplatesPlans> CProperty.advertisingBudgetSchedule.advertDesignIds);

    GetAdvertisingBudgetSchedule.AdvertDesignIds(
     [out, callee] ArrayOf<CAdministration.advertisingTemplatesPlans>* CProperty.advertisingBudgetSchedule.advertDesignIds);


   SetAdvertisingBudgetSchedule.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.advertisingBudgetSchedule.businessChannelOwnerId);

    GetAdvertisingBudgetSchedule.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.advertisingBudgetSchedule.businessChannelOwnerId);


   SetAdvertisingBudgetSchedule.BranchId(
     [in] CAdministration.branch CProperty.advertisingBudgetSchedule.branchId);

    GetAdvertisingBudgetSchedule.BranchId(
     [out] CAdministration.branch* CProperty.advertisingBudgetSchedule.branchId);


   SetAdvertisingBudgetSchedule.DeptId(
     [in] CAdministration.department CProperty.advertisingBudgetSchedule.deptId);

    GetAdvertisingBudgetSchedule.DeptId(
     [out] CAdministration.department* CProperty.advertisingBudgetSchedule.deptId);





   SetAllocation.AllocationId(
     [in] String CProperty.allocation.allocationId);

    GetAllocation.AllocationId(
     [out] String* CProperty.allocation.allocationId);


   SetAllocation.ApplicationIds(
     [in] ArrayOf<String> CProperty.allocation.applicationIds);

    GetAllocation.ApplicationIds(
     [out, callee] ArrayOf<String>* CProperty.allocation.applicationIds);


   SetAllocation.DocRefs(
     [in] ArrayOf<String> CProperty.allocation.docRefs);

    GetAllocation.DocRefs(
     [out, callee] ArrayOf<String>* CProperty.allocation.docRefs);


   SetAllocation.Notes(
     [in] ArrayOf<String> CProperty.allocation.notes);

    GetAllocation.Notes(
     [out, callee] ArrayOf<String>* CProperty.allocation.notes);


   SetAllocation.DateOfEffect(
     [in] String CProperty.allocation.dateOfEffect);

    GetAllocation.DateOfEffect(
     [out] String* CProperty.allocation.dateOfEffect);


   SetAllocation.PropertyId(
     [in] CProperty.property CProperty.allocation.propertyId);

    GetAllocation.PropertyId(
     [out] CProperty.property* CProperty.allocation.propertyId);


   SetAllocation.SuccessfulApplicationId(
     [in] CCustomer.application CProperty.allocation.successfulApplicationId);

    GetAllocation.SuccessfulApplicationId(
     [out] CCustomer.application* CProperty.allocation.successfulApplicationId);


   SetAllocation.SuccessfulTenancyId(
     [in] CProperty.tenant CProperty.allocation.successfulTenancyId);

    GetAllocation.SuccessfulTenancyId(
     [out] CProperty.tenant* CProperty.allocation.successfulTenancyId);


   SetAllocation.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.allocation.businessChannelOwnerId);

    GetAllocation.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.allocation.businessChannelOwnerId);


   SetAllocation.BranchId(
     [in] CAdministration.branch CProperty.allocation.branchId);

    GetAllocation.BranchId(
     [out] CAdministration.branch* CProperty.allocation.branchId);


   SetAllocation.DeptId(
     [in] CAdministration.department CProperty.allocation.deptId);

    GetAllocation.DeptId(
     [out] CAdministration.department* CProperty.allocation.deptId);





   SetTenant.TenancyId(
     [in] String CProperty.tenant.tenancyId);

    GetTenant.TenancyId(
     [out] String* CProperty.tenant.tenancyId);


   SetTenant.ABN(
     [in] String CProperty.tenant.aBN);

    GetTenant.ABN(
     [out] String* CProperty.tenant.aBN);


   SetTenant.BusinessName(
     [in] String CProperty.tenant.businessName);

    GetTenant.BusinessName(
     [out] String* CProperty.tenant.businessName);


   SetTenant.FirstName(
     [in] String CProperty.tenant.firstName);

    GetTenant.FirstName(
     [out] String* CProperty.tenant.firstName);


   SetTenant.LastName(
     [in] String CProperty.tenant.lastName);

    GetTenant.LastName(
     [out] String* CProperty.tenant.lastName);


   SetTenant.ResidentialAddress(
     [in] String CProperty.tenant.residentialAddress);

    GetTenant.ResidentialAddress(
     [out] String* CProperty.tenant.residentialAddress);


   SetTenant.PostalAddress(
     [in] String CProperty.tenant.postalAddress);

    GetTenant.PostalAddress(
     [out] String* CProperty.tenant.postalAddress);


   SetTenant.Email(
     [in] String CProperty.tenant.email);

    GetTenant.Email(
     [out] String* CProperty.tenant.email);


   SetTenant.HomePhone(
     [in] Int32 CProperty.tenant.homePhone);

    GetTenant.HomePhone(
     [out] Int32* CProperty.tenant.homePhone);


   SetTenant.MobilePhone(
     [in] Int32 CProperty.tenant.mobilePhone);

    GetTenant.MobilePhone(
     [out] Int32* CProperty.tenant.mobilePhone);


   SetTenant.WorkPhone(
     [in] Int32 CProperty.tenant.workPhone);

    GetTenant.WorkPhone(
     [out] Int32* CProperty.tenant.workPhone);


   SetTenant.ContactedWithDetails(
     [in] ArrayOf<String> CProperty.tenant.contactedWithDetails);

    GetTenant.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CProperty.tenant.contactedWithDetails);


   SetTenant.AllocationId(
     [in] CProperty.allocation CProperty.tenant.allocationId);

    GetTenant.AllocationId(
     [out] CProperty.allocation* CProperty.tenant.allocationId);


   SetTenant.ApplicantIds(
     [in] ArrayOf<CCustomer.applicant> CProperty.tenant.applicantIds);

    GetTenant.ApplicantIds(
     [out, callee] ArrayOf<CCustomer.applicant>* CProperty.tenant.applicantIds);


   SetTenant.CustomerId(
     [in] CCustomer.customer CProperty.tenant.customerId);

    GetTenant.CustomerId(
     [out] CCustomer.customer* CProperty.tenant.customerId);


   SetTenant.PropertyId(
     [in] CProperty.property CProperty.tenant.propertyId);

    GetTenant.PropertyId(
     [out] CProperty.property* CProperty.tenant.propertyId);


   SetTenant.BranchId(
     [in] CAdministration.branch CProperty.tenant.branchId);

    GetTenant.BranchId(
     [out] CAdministration.branch* CProperty.tenant.branchId);


   SetTenant.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CProperty.tenant.chartOfAccountsId);

    GetTenant.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CProperty.tenant.chartOfAccountsId);


   SetTenant.ChartOfClassesId(
     [in] CFinance.chartOfClasses CProperty.tenant.chartOfClassesId);

    GetTenant.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CProperty.tenant.chartOfClassesId);


   SetTenant.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.tenant.docRefIds);

    GetTenant.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.tenant.docRefIds);


   SetTenant.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.tenant.imageRefIds);

    GetTenant.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.tenant.imageRefIds);


   SetTenant.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.tenant.businessChannelOwnerId);

    GetTenant.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.tenant.businessChannelOwnerId);





   SetPropertyOwnerPropertyJoin.PropOwnerPropJoinId(
     [in] String CProperty.propertyOwnerPropertyJoin.propOwnerPropJoinId);

    GetPropertyOwnerPropertyJoin.PropOwnerPropJoinId(
     [out] String* CProperty.propertyOwnerPropertyJoin.propOwnerPropJoinId);


   SetPropertyOwnerPropertyJoin.OwnershipPercentage(
     [in] Double CProperty.propertyOwnerPropertyJoin.ownershipPercentage);

    GetPropertyOwnerPropertyJoin.OwnershipPercentage(
     [out] Double* CProperty.propertyOwnerPropertyJoin.ownershipPercentage);


   SetPropertyOwnerPropertyJoin.PropertyId(
     [in] CProperty.property CProperty.propertyOwnerPropertyJoin.propertyId);

    GetPropertyOwnerPropertyJoin.PropertyId(
     [out] CProperty.property* CProperty.propertyOwnerPropertyJoin.propertyId);


   SetPropertyOwnerPropertyJoin.PropertyOwnerId(
     [in] CProperty.propertyOwner CProperty.propertyOwnerPropertyJoin.propertyOwnerId);

    GetPropertyOwnerPropertyJoin.PropertyOwnerId(
     [out] CProperty.propertyOwner* CProperty.propertyOwnerPropertyJoin.propertyOwnerId);


   SetPropertyOwnerPropertyJoin.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.propertyOwnerPropertyJoin.businessChannelOwnerId);

    GetPropertyOwnerPropertyJoin.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.propertyOwnerPropertyJoin.businessChannelOwnerId);





   SetCustomerPropertyJoin.CustPropJoinId(
     [in] String CProperty.customerpropertyJoin.custPropJoinId);

    GetCustomerPropertyJoin.CustPropJoinId(
     [out] String* CProperty.customerpropertyJoin.custPropJoinId);


   SetCustomerPropertyJoin.Relationship(
     [in] CHelper.relationship CProperty.customerpropertyJoin.relationship);

    GetCustomerPropertyJoin.Relationship(
     [out] CHelper.relationship* CProperty.customerpropertyJoin.relationship);


   SetCustomerPropertyJoin.CustomerId(
     [in] CCustomer.customer CProperty.customerpropertyJoin.customerId);

    GetCustomerPropertyJoin.CustomerId(
     [out] CCustomer.customer* CProperty.customerpropertyJoin.customerId);


   SetCustomerPropertyJoin.PropertyId(
     [in] CProperty.property CProperty.customerpropertyJoin.propertyId);

    GetCustomerPropertyJoin.PropertyId(
     [out] CProperty.property* CProperty.customerpropertyJoin.propertyId);


   SetCustomerPropertyJoin.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.customerpropertyJoin.businessChannelOwnerId);

    GetCustomerPropertyJoin.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.customerpropertyJoin.businessChannelOwnerId);





   SetCustomerPropertyOwnerJoin.CustPropOwnerJoinId(
     [in] String CProperty.customerPropertyOwnerJoin.custPropOwnerJoinId);

    GetCustomerPropertyOwnerJoin.CustPropOwnerJoinId(
     [out] String* CProperty.customerPropertyOwnerJoin.custPropOwnerJoinId);


   SetCustomerPropertyOwnerJoin.CustomerId(
     [in] CCustomer.customer CProperty.customerPropertyOwnerJoin.customerId);

    GetCustomerPropertyOwnerJoin.CustomerId(
     [out] CCustomer.customer* CProperty.customerPropertyOwnerJoin.customerId);


   SetCustomerPropertyOwnerJoin.PropertyOwnerId(
     [in] CProperty.propertyOwner CProperty.customerPropertyOwnerJoin.propertyOwnerId);

    GetCustomerPropertyOwnerJoin.PropertyOwnerId(
     [out] CProperty.propertyOwner* CProperty.customerPropertyOwnerJoin.propertyOwnerId);


   SetCustomerPropertyOwnerJoin.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.customerPropertyOwnerJoin.businessChannelOwnerId);

    GetCustomerPropertyOwnerJoin.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.customerPropertyOwnerJoin.businessChannelOwnerId);





   SetPropertyInspectionResidential.PropertyInspectionResId(
     [in] String CProperty.propertyInspectionResidential.propertyInspectionResId);

    GetPropertyInspectionResidential.PropertyInspectionResId(
     [out] String* CProperty.propertyInspectionResidential.propertyInspectionResId);


   SetPropertyInspectionResidential.InspectionDates(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.inspectionDates);

    GetPropertyInspectionResidential.InspectionDates(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.inspectionDates);


   SetPropertyInspectionResidential.PropertyAddressString(
     [in] String CProperty.propertyInspectionResidential.propertyAddressString);

    GetPropertyInspectionResidential.PropertyAddressString(
     [out] String* CProperty.propertyInspectionResidential.propertyAddressString);


   SetPropertyInspectionResidential.UnitNumber(
     [in] String CProperty.propertyInspectionResidential.unitNumber);

    GetPropertyInspectionResidential.UnitNumber(
     [out] String* CProperty.propertyInspectionResidential.unitNumber);


   SetPropertyInspectionResidential.Bathroom(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.bathroom);

    GetPropertyInspectionResidential.Bathroom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.bathroom);


   SetPropertyInspectionResidential.Bedroom(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.bedroom);

    GetPropertyInspectionResidential.Bedroom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.bedroom);


   SetPropertyInspectionResidential.DiningRoom(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.diningRoom);

    GetPropertyInspectionResidential.DiningRoom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.diningRoom);


   SetPropertyInspectionResidential.InternalDoorways(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.internalDoorways);

    GetPropertyInspectionResidential.InternalDoorways(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.internalDoorways);


   SetPropertyInspectionResidential.Driveways(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.driveways);

    GetPropertyInspectionResidential.Driveways(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.driveways);


   SetPropertyInspectionResidential.Ensuite(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.ensuite);

    GetPropertyInspectionResidential.Ensuite(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.ensuite);


   SetPropertyInspectionResidential.Entrance(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.entrance);

    GetPropertyInspectionResidential.Entrance(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.entrance);


   SetPropertyInspectionResidential.ExternalAreas(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.externalAreas);

    GetPropertyInspectionResidential.ExternalAreas(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.externalAreas);


   SetPropertyInspectionResidential.ExternalDoors(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.externalDoors);

    GetPropertyInspectionResidential.ExternalDoors(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.externalDoors);


   SetPropertyInspectionResidential.FamilyRoom(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.familyRoom);

    GetPropertyInspectionResidential.FamilyRoom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.familyRoom);


   SetPropertyInspectionResidential.Fences(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.fences);

    GetPropertyInspectionResidential.Fences(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.fences);


   SetPropertyInspectionResidential.GarageCarport(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.garageCarport);

    GetPropertyInspectionResidential.GarageCarport(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.garageCarport);


   SetPropertyInspectionResidential.Gates(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.gates);

    GetPropertyInspectionResidential.Gates(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.gates);


   SetPropertyInspectionResidential.Gutterings(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.gutterings);

    GetPropertyInspectionResidential.Gutterings(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.gutterings);


   SetPropertyInspectionResidential.Hallway(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.hallway);

    GetPropertyInspectionResidential.Hallway(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.hallway);


   SetPropertyInspectionResidential.HotWater(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.hotWater);

    GetPropertyInspectionResidential.HotWater(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.hotWater);


   SetPropertyInspectionResidential.Kitchen(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.kitchen);

    GetPropertyInspectionResidential.Kitchen(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.kitchen);


   SetPropertyInspectionResidential.Laundry(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.laundry);

    GetPropertyInspectionResidential.Laundry(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.laundry);


   SetPropertyInspectionResidential.LetterBox(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.letterBox);

    GetPropertyInspectionResidential.LetterBox(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.letterBox);


   SetPropertyInspectionResidential.LivingRoom(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.livingRoom);

    GetPropertyInspectionResidential.LivingRoom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.livingRoom);


   SetPropertyInspectionResidential.Notes(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.notes);

    GetPropertyInspectionResidential.Notes(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.notes);


   SetPropertyInspectionResidential.OtherItems(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.otherItems);

    GetPropertyInspectionResidential.OtherItems(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.otherItems);


   SetPropertyInspectionResidential.Pests(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.pests);

    GetPropertyInspectionResidential.Pests(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.pests);


   SetPropertyInspectionResidential.PetIssues(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.petIssues);

    GetPropertyInspectionResidential.PetIssues(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.petIssues);


   SetPropertyInspectionResidential.Plumbing(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.plumbing);

    GetPropertyInspectionResidential.Plumbing(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.plumbing);


   SetPropertyInspectionResidential.Pool(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.pool);

    GetPropertyInspectionResidential.Pool(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.pool);


   SetPropertyInspectionResidential.RecreationRoom(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.recreationRoom);

    GetPropertyInspectionResidential.RecreationRoom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.recreationRoom);


   SetPropertyInspectionResidential.Roof(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.roof);

    GetPropertyInspectionResidential.Roof(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.roof);


   SetPropertyInspectionResidential.ScreenDoors(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.screenDoors);

    GetPropertyInspectionResidential.ScreenDoors(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.screenDoors);


   SetPropertyInspectionResidential.StructuralIntegrity(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.structuralIntegrity);

    GetPropertyInspectionResidential.StructuralIntegrity(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.structuralIntegrity);


   SetPropertyInspectionResidential.TennisCourt(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.tennisCourt);

    GetPropertyInspectionResidential.TennisCourt(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.tennisCourt);


   SetPropertyInspectionResidential.Toilet(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.toilet);

    GetPropertyInspectionResidential.Toilet(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.toilet);


   SetPropertyInspectionResidential.WiringElectrical(
     [in] ArrayOf<String> CProperty.propertyInspectionResidential.wiringElectrical);

    GetPropertyInspectionResidential.WiringElectrical(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionResidential.wiringElectrical);


   SetPropertyInspectionResidential.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.propertyInspectionResidential.businessChannelOwnerId);

    GetPropertyInspectionResidential.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.propertyInspectionResidential.businessChannelOwnerId);


   SetPropertyInspectionResidential.BranchId(
     [in] CAdministration.branch CProperty.propertyInspectionResidential.branchId);

    GetPropertyInspectionResidential.BranchId(
     [out] CAdministration.branch* CProperty.propertyInspectionResidential.branchId);


   SetPropertyInspectionResidential.DeptId(
     [in] CAdministration.department CProperty.propertyInspectionResidential.deptId);

    GetPropertyInspectionResidential.DeptId(
     [out] CAdministration.department* CProperty.propertyInspectionResidential.deptId);


   SetPropertyInspectionResidential.PropertyId(
     [in] CProperty.property CProperty.propertyInspectionResidential.propertyId);

    GetPropertyInspectionResidential.PropertyId(
     [out] CProperty.property* CProperty.propertyInspectionResidential.propertyId);


   SetPropertyInspectionResidential.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.propertyInspectionResidential.docRefIds);

    GetPropertyInspectionResidential.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.propertyInspectionResidential.docRefIds);


   SetPropertyInspectionResidential.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.propertyInspectionResidential.imageRefIds);

    GetPropertyInspectionResidential.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.propertyInspectionResidential.imageRefIds);


   SetPropertyInspectionResidential.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CProperty.propertyInspectionResidential.audioRefIds);

    GetPropertyInspectionResidential.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CProperty.propertyInspectionResidential.audioRefIds);


   SetPropertyInspectionResidential.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CProperty.propertyInspectionResidential.videoRefIds);

    GetPropertyInspectionResidential.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CProperty.propertyInspectionResidential.videoRefIds);


   SetPropertyInspectionResidential.TenancyId(
     [in] CProperty.tenant CProperty.propertyInspectionResidential.tenancyId);

    GetPropertyInspectionResidential.TenancyId(
     [out] CProperty.tenant* CProperty.propertyInspectionResidential.tenancyId);


   SetPropertyInspectionResidential.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CProperty.propertyInspectionResidential.employeeIds);

    GetPropertyInspectionResidential.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CProperty.propertyInspectionResidential.employeeIds);





   SetPropertyInspectionCommercial.PropertyInspectionCommercId(
     [in] String CProperty.propertyInspectionCommercial.propertyInspectionCommercId);

    GetPropertyInspectionCommercial.PropertyInspectionCommercId(
     [out] String* CProperty.propertyInspectionCommercial.propertyInspectionCommercId);


   SetPropertyInspectionCommercial.InspectionDates(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.inspectionDates);

    GetPropertyInspectionCommercial.InspectionDates(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.inspectionDates);


   SetPropertyInspectionCommercial.PropertyAddressString(
     [in] String CProperty.propertyInspectionCommercial.propertyAddressString);

    GetPropertyInspectionCommercial.PropertyAddressString(
     [out] String* CProperty.propertyInspectionCommercial.propertyAddressString);


   SetPropertyInspectionCommercial.UnitNumber(
     [in] String CProperty.propertyInspectionCommercial.unitNumber);

    GetPropertyInspectionCommercial.UnitNumber(
     [out] String* CProperty.propertyInspectionCommercial.unitNumber);


   SetPropertyInspectionCommercial.AirConditioning(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.airConditioning);

    GetPropertyInspectionCommercial.AirConditioning(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.airConditioning);


   SetPropertyInspectionCommercial.DiningRoom(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.diningRoom);

    GetPropertyInspectionCommercial.DiningRoom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.diningRoom);


   SetPropertyInspectionCommercial.InternalDoorways(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.internalDoorways);

    GetPropertyInspectionCommercial.InternalDoorways(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.internalDoorways);


   SetPropertyInspectionCommercial.Driveways(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.driveways);

    GetPropertyInspectionCommercial.Driveways(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.driveways);


   SetPropertyInspectionCommercial.Entrance(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.entrance);

    GetPropertyInspectionCommercial.Entrance(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.entrance);


   SetPropertyInspectionCommercial.ExternalAreas(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.externalAreas);

    GetPropertyInspectionCommercial.ExternalAreas(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.externalAreas);


   SetPropertyInspectionCommercial.ExternalDoors(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.externalDoors);

    GetPropertyInspectionCommercial.ExternalDoors(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.externalDoors);


   SetPropertyInspectionCommercial.FactorySpace(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.factorySpace);

    GetPropertyInspectionCommercial.FactorySpace(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.factorySpace);


   SetPropertyInspectionCommercial.Fences(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.fences);

    GetPropertyInspectionCommercial.Fences(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.fences);


   SetPropertyInspectionCommercial.GarageCarport(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.garageCarport);

    GetPropertyInspectionCommercial.GarageCarport(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.garageCarport);


   SetPropertyInspectionCommercial.Gates(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.gates);

    GetPropertyInspectionCommercial.Gates(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.gates);


   SetPropertyInspectionCommercial.Gutterings(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.gutterings);

    GetPropertyInspectionCommercial.Gutterings(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.gutterings);


   SetPropertyInspectionCommercial.Hallway(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.hallway);

    GetPropertyInspectionCommercial.Hallway(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.hallway);


   SetPropertyInspectionCommercial.Heating(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.heating);

    GetPropertyInspectionCommercial.Heating(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.heating);


   SetPropertyInspectionCommercial.HotWater(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.hotWater);

    GetPropertyInspectionCommercial.HotWater(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.hotWater);


   SetPropertyInspectionCommercial.Kitchen(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.kitchen);

    GetPropertyInspectionCommercial.Kitchen(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.kitchen);


   SetPropertyInspectionCommercial.Laundry(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.laundry);

    GetPropertyInspectionCommercial.Laundry(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.laundry);


   SetPropertyInspectionCommercial.Notes(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.notes);

    GetPropertyInspectionCommercial.Notes(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.notes);


   SetPropertyInspectionCommercial.OfficeSpace(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.officeSpace);

    GetPropertyInspectionCommercial.OfficeSpace(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.officeSpace);


   SetPropertyInspectionCommercial.ParkingSpaces(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.parkingSpaces);

    GetPropertyInspectionCommercial.ParkingSpaces(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.parkingSpaces);


   SetPropertyInspectionCommercial.OtherItems(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.otherItems);

    GetPropertyInspectionCommercial.OtherItems(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.otherItems);


   SetPropertyInspectionCommercial.Pests(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.pests);

    GetPropertyInspectionCommercial.Pests(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.pests);


   SetPropertyInspectionCommercial.OtherIssues(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.otherIssues);

    GetPropertyInspectionCommercial.OtherIssues(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.otherIssues);


   SetPropertyInspectionCommercial.Plumbing(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.plumbing);

    GetPropertyInspectionCommercial.Plumbing(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.plumbing);


   SetPropertyInspectionCommercial.RecreationRoom(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.recreationRoom);

    GetPropertyInspectionCommercial.RecreationRoom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.recreationRoom);


   SetPropertyInspectionCommercial.RetailSpace(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.retailSpace);

    GetPropertyInspectionCommercial.RetailSpace(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.retailSpace);


   SetPropertyInspectionCommercial.Roof(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.roof);

    GetPropertyInspectionCommercial.Roof(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.roof);


   SetPropertyInspectionCommercial.ScreenDoors(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.screenDoors);

    GetPropertyInspectionCommercial.ScreenDoors(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.screenDoors);


   SetPropertyInspectionCommercial.StructuralIntegrity(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.structuralIntegrity);

    GetPropertyInspectionCommercial.StructuralIntegrity(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.structuralIntegrity);


   SetPropertyInspectionCommercial.Floors(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.floors);

    GetPropertyInspectionCommercial.Floors(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.floors);


   SetPropertyInspectionCommercial.Toilet(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.toilet);

    GetPropertyInspectionCommercial.Toilet(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.toilet);


   SetPropertyInspectionCommercial.VentilationIncludingFans(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.ventilationIncludingFans);

    GetPropertyInspectionCommercial.VentilationIncludingFans(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.ventilationIncludingFans);


   SetPropertyInspectionCommercial.WarehouseSpace(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.warehouseSpace);

    GetPropertyInspectionCommercial.WarehouseSpace(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.warehouseSpace);


   SetPropertyInspectionCommercial.Washroom(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.washroom);

    GetPropertyInspectionCommercial.Washroom(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.washroom);


   SetPropertyInspectionCommercial.WiringElectrical(
     [in] ArrayOf<String> CProperty.propertyInspectionCommercial.wiringElectrical);

    GetPropertyInspectionCommercial.WiringElectrical(
     [out, callee] ArrayOf<String>* CProperty.propertyInspectionCommercial.wiringElectrical);


   SetPropertyInspectionCommercial.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.propertyInspectionCommercial.businessChannelOwnerId);

    GetPropertyInspectionCommercial.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.propertyInspectionCommercial.businessChannelOwnerId);


   SetPropertyInspectionCommercial.BranchId(
     [in] CAdministration.branch CProperty.propertyInspectionCommercial.branchId);

    GetPropertyInspectionCommercial.BranchId(
     [out] CAdministration.branch* CProperty.propertyInspectionCommercial.branchId);


   SetPropertyInspectionCommercial.DeptId(
     [in] CAdministration.department CProperty.propertyInspectionCommercial.deptId);

    GetPropertyInspectionCommercial.DeptId(
     [out] CAdministration.department* CProperty.propertyInspectionCommercial.deptId);


   SetPropertyInspectionCommercial.PropertyId(
     [in] CProperty.property CProperty.propertyInspectionCommercial.propertyId);

    GetPropertyInspectionCommercial.PropertyId(
     [out] CProperty.property* CProperty.propertyInspectionCommercial.propertyId);


   SetPropertyInspectionCommercial.TenancyId(
     [in] CProperty.tenant CProperty.propertyInspectionCommercial.tenancyId);

    GetPropertyInspectionCommercial.TenancyId(
     [out] CProperty.tenant* CProperty.propertyInspectionCommercial.tenancyId);


   SetPropertyInspectionCommercial.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CProperty.propertyInspectionCommercial.employeeIds);

    GetPropertyInspectionCommercial.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CProperty.propertyInspectionCommercial.employeeIds);


   SetPropertyInspectionCommercial.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.propertyInspectionCommercial.docRefIds);

    GetPropertyInspectionCommercial.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.propertyInspectionCommercial.docRefIds);


   SetPropertyInspectionCommercial.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.propertyInspectionCommercial.imageRefIds);

    GetPropertyInspectionCommercial.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.propertyInspectionCommercial.imageRefIds);


   SetPropertyInspectionCommercial.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CProperty.propertyInspectionCommercial.audioRefIds);

    GetPropertyInspectionCommercial.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CProperty.propertyInspectionCommercial.audioRefIds);


   SetPropertyInspectionCommercial.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CProperty.propertyInspectionCommercial.videoRefIds);

    GetPropertyInspectionCommercial.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CProperty.propertyInspectionCommercial.videoRefIds);





   SetTenancyCaseManagement.TenancyCaseMngmntId(
     [in] String CProperty.tenancyCaseManagement.tenancyCaseMngmntId);

    GetTenancyCaseManagement.TenancyCaseMngmntId(
     [out] String* CProperty.tenancyCaseManagement.tenancyCaseMngmntId);


   SetTenancyCaseManagement.SupervisorStaffId(
     [in] String CProperty.tenancyCaseManagement.supervisorStaffId);

    GetTenancyCaseManagement.SupervisorStaffId(
     [out] String* CProperty.tenancyCaseManagement.supervisorStaffId);


   SetTenancyCaseManagement.TenantActionsInChronologicalOrder(
     [in] ArrayOf<String> CProperty.tenancyCaseManagement.tenantActionsInChronologicalOrder);

    GetTenancyCaseManagement.TenantActionsInChronologicalOrder(
     [out, callee] ArrayOf<String>* CProperty.tenancyCaseManagement.tenantActionsInChronologicalOrder);


   SetTenancyCaseManagement.DatesTimesOfEvents(
     [in] ArrayOf<String> CProperty.tenancyCaseManagement.datesTimesOfEvents);

    GetTenancyCaseManagement.DatesTimesOfEvents(
     [out, callee] ArrayOf<String>* CProperty.tenancyCaseManagement.datesTimesOfEvents);


   SetTenancyCaseManagement.OurResponsesInChronologicalOrder(
     [in] ArrayOf<String> CProperty.tenancyCaseManagement.ourResponsesInChronologicalOrder);

    GetTenancyCaseManagement.OurResponsesInChronologicalOrder(
     [out, callee] ArrayOf<String>* CProperty.tenancyCaseManagement.ourResponsesInChronologicalOrder);


   SetTenancyCaseManagement.DatesTimesOfResponses(
     [in] ArrayOf<String> CProperty.tenancyCaseManagement.datesTimesOfResponses);

    GetTenancyCaseManagement.DatesTimesOfResponses(
     [out, callee] ArrayOf<String>* CProperty.tenancyCaseManagement.datesTimesOfResponses);


   SetTenancyCaseManagement.Resolved(
     [in] Boolean CProperty.tenancyCaseManagement.resolved);

    GetTenancyCaseManagement.Resolved(
     [out] Boolean* CProperty.tenancyCaseManagement.resolved);


   SetTenancyCaseManagement.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CProperty.tenancyCaseManagement.businessChannelOwnerId);

    GetTenancyCaseManagement.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CProperty.tenancyCaseManagement.businessChannelOwnerId);


   SetTenancyCaseManagement.PropertyId(
     [in] CProperty.property CProperty.tenancyCaseManagement.propertyId);

    GetTenancyCaseManagement.PropertyId(
     [out] CProperty.property* CProperty.tenancyCaseManagement.propertyId);


   SetTenancyCaseManagement.BranchId(
     [in] CAdministration.branch CProperty.tenancyCaseManagement.branchId);

    GetTenancyCaseManagement.BranchId(
     [out] CAdministration.branch* CProperty.tenancyCaseManagement.branchId);


   SetTenancyCaseManagement.TenancyId(
     [in] CProperty.tenant CProperty.tenancyCaseManagement.tenancyId);

    GetTenancyCaseManagement.TenancyId(
     [out] CProperty.tenant* CProperty.tenancyCaseManagement.tenancyId);


   SetTenancyCaseManagement.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CProperty.tenancyCaseManagement.customerIds);

    GetTenancyCaseManagement.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CProperty.tenancyCaseManagement.customerIds);


   SetTenancyCaseManagement.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CProperty.tenancyCaseManagement.employeeIds);

    GetTenancyCaseManagement.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CProperty.tenancyCaseManagement.employeeIds);


   SetTenancyCaseManagement.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CProperty.tenancyCaseManagement.docRefIds);

    GetTenancyCaseManagement.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CProperty.tenancyCaseManagement.docRefIds);


   SetTenancyCaseManagement.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CProperty.tenancyCaseManagement.imageRefIds);

    GetTenancyCaseManagement.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CProperty.tenancyCaseManagement.imageRefIds);





   SetCustomer.CustomerId(
     [in] String CCustomer.customer.customerId);

    GetCustomer.CustomerId(
     [out] String* CCustomer.customer.customerId);


   SetCustomer.LinkedToThisBusinessChannelOwnerId(
     [in] String CCustomer.customer.linkedToThisBusinessChannelOwnerId);

    GetCustomer.LinkedToThisBusinessChannelOwnerId(
     [out] String* CCustomer.customer.linkedToThisBusinessChannelOwnerId);


   SetCustomer.Relationship(
     [in] CHelper.relationship CCustomer.customer.relationship);

    GetCustomer.Relationship(
     [out] CHelper.relationship* CCustomer.customer.relationship);


   SetCustomer.CustomerTypesIds(
     [in] ArrayOf<String> CCustomer.customer.customerTypesIds);

    GetCustomer.CustomerTypesIds(
     [out, callee] ArrayOf<String>* CCustomer.customer.customerTypesIds);


   SetCustomer.OurBranchId(
     [in] String CCustomer.customer.ourBranchId);

    GetCustomer.OurBranchId(
     [out] String* CCustomer.customer.ourBranchId);


   SetCustomer.FirstName(
     [in] String CCustomer.customer.firstName);

    GetCustomer.FirstName(
     [out] String* CCustomer.customer.firstName);


   SetCustomer.LastName(
     [in] String CCustomer.customer.lastName);

    GetCustomer.LastName(
     [out] String* CCustomer.customer.lastName);


   SetCustomer.ResidentialAddress(
     [in] ArrayOf<String> CCustomer.customer.residentialAddress);

    GetCustomer.ResidentialAddress(
     [out, callee] ArrayOf<String>* CCustomer.customer.residentialAddress);


   SetCustomer.PostalAddress(
     [in] ArrayOf<String> CCustomer.customer.postalAddress);

    GetCustomer.PostalAddress(
     [out, callee] ArrayOf<String>* CCustomer.customer.postalAddress);


   SetCustomer.DeliveryAddress(
     [in] ArrayOf<String> CCustomer.customer.deliveryAddress);

    GetCustomer.DeliveryAddress(
     [out, callee] ArrayOf<String>* CCustomer.customer.deliveryAddress);


   SetCustomer.BillingAddress(
     [in] ArrayOf<String> CCustomer.customer.billingAddress);

    GetCustomer.BillingAddress(
     [out, callee] ArrayOf<String>* CCustomer.customer.billingAddress);


   SetCustomer.Email(
     [in] String CCustomer.customer.email);

    GetCustomer.Email(
     [out] String* CCustomer.customer.email);


   SetCustomer.HomePhone(
     [in] Int32 CCustomer.customer.homePhone);

    GetCustomer.HomePhone(
     [out] Int32* CCustomer.customer.homePhone);


   SetCustomer.MobilePhone(
     [in] Int32 CCustomer.customer.mobilePhone);

    GetCustomer.MobilePhone(
     [out] Int32* CCustomer.customer.mobilePhone);


   SetCustomer.WorkPhone(
     [in] Int32 CCustomer.customer.workPhone);

    GetCustomer.WorkPhone(
     [out] Int32* CCustomer.customer.workPhone);


   SetCustomer.AmenitiesRequired(
     [in] ArrayOf<String> CCustomer.customer.amenitiesRequired);

    GetCustomer.AmenitiesRequired(
     [out, callee] ArrayOf<String>* CCustomer.customer.amenitiesRequired);


   SetCustomer.StreetsDesired(
     [in] ArrayOf<String> CCustomer.customer.streetsDesired);

    GetCustomer.StreetsDesired(
     [out, callee] ArrayOf<String>* CCustomer.customer.streetsDesired);


   SetCustomer.PostcodesDesired(
     [in] ArrayOf<Int32> CCustomer.customer.postcodesDesired);

    GetCustomer.PostcodesDesired(
     [out, callee] ArrayOf<Int32>* CCustomer.customer.postcodesDesired);


   SetCustomer.BedroomsRequired(
     [in] Int32 CCustomer.customer.bedroomsRequired);

    GetCustomer.BedroomsRequired(
     [out] Int32* CCustomer.customer.bedroomsRequired);


   SetCustomer.MaxPriceOffering(
     [in] Double CCustomer.customer.maxPriceOffering);

    GetCustomer.MaxPriceOffering(
     [out] Double* CCustomer.customer.maxPriceOffering);


   SetCustomer.MinPriceOffering(
     [in] Double CCustomer.customer.minPriceOffering);

    GetCustomer.MinPriceOffering(
     [out] Double* CCustomer.customer.minPriceOffering);


   SetCustomer.MaxPriceAsking(
     [in] ArrayOf<Double> CCustomer.customer.maxPriceAsking);

    GetCustomer.MaxPriceAsking(
     [out, callee] ArrayOf<Double>* CCustomer.customer.maxPriceAsking);


   SetCustomer.MinPriceAsking(
     [in] ArrayOf<Double> CCustomer.customer.minPriceAsking);

    GetCustomer.MinPriceAsking(
     [out, callee] ArrayOf<Double>* CCustomer.customer.minPriceAsking);


   SetCustomer.CentrelinkCRN(
     [in] String CCustomer.customer.centrelinkCRN);

    GetCustomer.CentrelinkCRN(
     [out] String* CCustomer.customer.centrelinkCRN);


   SetCustomer.ATOTFN(
     [in] Int32 CCustomer.customer.aTOTFN);

    GetCustomer.ATOTFN(
     [out] Int32* CCustomer.customer.aTOTFN);


   SetCustomer.ABN(
     [in] String CCustomer.customer.aBN);

    GetCustomer.ABN(
     [out] String* CCustomer.customer.aBN);


   SetCustomer.ContactedWithDetails(
     [in] ArrayOf<String> CCustomer.customer.contactedWithDetails);

    GetCustomer.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CCustomer.customer.contactedWithDetails);


   SetCustomer.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.customer.businessChannelOwnerId);

    GetCustomer.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.customer.businessChannelOwnerId);


   SetCustomer.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CCustomer.customer.propertyOwnerIds);

    GetCustomer.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CCustomer.customer.propertyOwnerIds);


   SetCustomer.CustPropJoinIds(
     [in] ArrayOf<CProperty.customerpropertyJoin> CCustomer.customer.custPropJoinIds);

    GetCustomer.CustPropJoinIds(
     [out, callee] ArrayOf<CProperty.customerpropertyJoin>* CCustomer.customer.custPropJoinIds);


   SetCustomer.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.customer.docRefIds);

    GetCustomer.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.customer.docRefIds);


   SetCustomer.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.customer.imageRefIds);

    GetCustomer.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.customer.imageRefIds);


   SetCustomer.TenancyId(
     [in] CProperty.tenant CCustomer.customer.tenancyId);

    GetCustomer.TenancyId(
     [out] CProperty.tenant* CCustomer.customer.tenancyId);


   SetCustomer.ApplicantId(
     [in] CCustomer.applicant CCustomer.customer.applicantId);

    GetCustomer.ApplicantId(
     [out] CCustomer.applicant* CCustomer.customer.applicantId);


   SetCustomerType.CustomerTypeId(
     [in] String CCustomer.customerType.customerTypeId);

    GetCustomerType.CustomerTypeId(
     [out] String* CCustomer.customerType.customerTypeId);


   SetCustomerType.Description(
     [in] String CCustomer.customerType.description);

    GetCustomerType.Description(
     [out] String* CCustomer.customerType.description);


   SetCustomerType.CustTypeName(
     [in] String CCustomer.customerType.custTypeName);

    GetCustomerType.CustTypeName(
     [out] String* CCustomer.customerType.custTypeName);


   SetCustomerType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.customerType.businessChannelOwnerId);

    GetCustomerType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.customerType.businessChannelOwnerId);


   SetCustomerType.DocRefs(
     [in] ArrayOf<CAdministration.documents> CCustomer.customerType.docRefs);

    GetCustomerType.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.customerType.docRefs);


   SetCustomerType.ImageRefs(
     [in] ArrayOf<CAdministration.images> CCustomer.customerType.imageRefs);

    GetCustomerType.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.customerType.imageRefs);


   SetCustomerType.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CCustomer.customerType.audioRefIds);

    GetCustomerType.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CCustomer.customerType.audioRefIds);


   SetCustomerType.VideoRefs(
     [in] ArrayOf<CAdministration.video> CCustomer.customerType.videoRefs);

    GetCustomerType.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CCustomer.customerType.videoRefs);


   SetCustomerCustomerJoin.CustCustomerJoinId(
     [in] String CCustomer.customerCustomerJoin.custCustomerJoinId);

    GetCustomerCustomerJoin.CustCustomerJoinId(
     [out] String* CCustomer.customerCustomerJoin.custCustomerJoinId);


   SetCustomerCustomerJoin.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CCustomer.customerCustomerJoin.customerIds);

    GetCustomerCustomerJoin.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CCustomer.customerCustomerJoin.customerIds);


   SetCustomerCustomerJoin.PercentageShares(
     [in] ArrayOf<Double> CCustomer.customerCustomerJoin.percentageShares);

    GetCustomerCustomerJoin.PercentageShares(
     [out, callee] ArrayOf<Double>* CCustomer.customerCustomerJoin.percentageShares);


   SetCustomerCustomerJoin.PropertyId(
     [in] ArrayOf<CProperty.property> CCustomer.customerCustomerJoin.propertyIds);

    GetCustomerCustomerJoin.PropertyId(
     [out, callee] ArrayOf<CProperty.property>* CCustomer.customerCustomerJoin.propertyIds);


   SetCustomerCustomerJoin.ProjectId(
     [in] ArrayOf<CProperty.project> CCustomer.customerCustomerJoin.projectIds);

    GetCustomerCustomerJoin.ProjectId(
     [out, callee] ArrayOf<CProperty.project>* CCustomer.customerCustomerJoin.projectIds);


   SetCustomerCustomerJoin.ProgramId(
     [in] ArrayOf<CProperty.program> CCustomer.customerCustomerJoin.programIds);

    GetCustomerCustomerJoin.ProgramId(
     [out, callee] ArrayOf<CProperty.program>* CCustomer.customerCustomerJoin.programIds);


   SetCustomerCustomerJoin.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.customerCustomerJoin.businessChannelOwnerId);

    GetCustomerCustomerJoin.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.customerCustomerJoin.businessChannelOwnerId);


   SetApplicant.ApplicantId(
     [in] String CCustomer.applicant.applicantId);

    GetApplicant.ApplicantId(
     [out] String* CCustomer.applicant.applicantId);


   SetApplicant.PostcodesAppliedFor(
     [in] ArrayOf<Int32> CCustomer.applicant.postcodesAppliedFor);

    GetApplicant.PostcodesAppliedFor(
     [out, callee] ArrayOf<Int32>* CCustomer.applicant.postcodesAppliedFor);


   SetApplicant.BedroomsSought(
     [in] Int32 CCustomer.applicant.bedroomsSought);

    GetApplicant.BedroomsSought(
     [out] Int32* CCustomer.applicant.bedroomsSought);


   SetApplicant.AmenitiesRequested(
     [in] ArrayOf<String> CCustomer.applicant.amenitiesRequested);

    GetApplicant.AmenitiesRequested(
     [out, callee] ArrayOf<String>* CCustomer.applicant.amenitiesRequested);


   SetApplicant.FirstName(
     [in] String CCustomer.applicant.firstName);

    GetApplicant.FirstName(
     [out] String* CCustomer.applicant.firstName);


   SetApplicant.LastName(
     [in] String CCustomer.applicant.lastName);

    GetApplicant.LastName(
     [out] String* CCustomer.applicant.lastName);


   SetApplicant.ResidentialAddress(
     [in] String CCustomer.applicant.residentialAddress);

    GetApplicant.ResidentialAddress(
     [out] String* CCustomer.applicant.residentialAddress);


   SetApplicant.PostalAddress(
     [in] String CCustomer.applicant.postalAddress);

    GetApplicant.PostalAddress(
     [out] String* CCustomer.applicant.postalAddress);


   SetApplicant.Email(
     [in] String CCustomer.applicant.email);

    GetApplicant.Email(
     [out] String* CCustomer.applicant.email);


   SetApplicant.HomePhone(
     [in] Int32 CCustomer.applicant.homePhone);

    GetApplicant.HomePhone(
     [out] Int32* CCustomer.applicant.homePhone);


   SetApplicant.MobilePhone(
     [in] Int32 CCustomer.applicant.mobilePhone);

    GetApplicant.MobilePhone(
     [out] Int32* CCustomer.applicant.mobilePhone);


   SetApplicant.WorkPhone(
     [in] Int32 CCustomer.applicant.workPhone);

    GetApplicant.WorkPhone(
     [out] Int32* CCustomer.applicant.workPhone);


   SetApplicant.ContactedWithDetails(
     [in] ArrayOf<String> CCustomer.applicant.contactedWithDetails);

    GetApplicant.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CCustomer.applicant.contactedWithDetails);


   SetApplicant.ApplicationId(
     [in] CCustomer.application CCustomer.applicant.ApplicationId);

    GetApplicant.ApplicationId(
     [out] CCustomer.application* CCustomer.applicant.ApplicationId);


   SetApplicant.BranchId(
     [in] CAdministration.branch CCustomer.applicant.branchId);

    GetApplicant.BranchId(
     [out] CAdministration.branch* CCustomer.applicant.branchId);


   SetApplicant.CustomerId(
     [in] CCustomer.customer CCustomer.applicant.customerId);

    GetApplicant.CustomerId(
     [out] CCustomer.customer* CCustomer.applicant.customerId);


   SetApplicant.PropertyIds(
     [in] ArrayOf<CProperty.property> CCustomer.applicant.propertyIds);

    GetApplicant.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CCustomer.applicant.propertyIds);


   SetApplicant.TenancyId(
     [in] CProperty.tenant CCustomer.applicant.tenancyId);

    GetApplicant.TenancyId(
     [out] CProperty.tenant* CCustomer.applicant.tenancyId);


   SetApplicant.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.applicant.docRefIds);

    GetApplicant.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.applicant.docRefIds);


   SetApplicant.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.applicant.imageRefIds);

    GetApplicant.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.applicant.imageRefIds);


   SetApplicant.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.applicant.businessChannelOwnerId);

    GetApplicant.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.applicant.businessChannelOwnerId);


   SetApplication.ApplicationId(
     [in] String CCustomer.application.applicationId);

    GetApplication.ApplicationId(
     [out] String* CCustomer.application.applicationId);


   SetApplication.SocialHousingApplication(
     [in] Boolean CCustomer.application.socialHousingApplication);

    GetApplication.SocialHousingApplication(
     [out] Boolean* CCustomer.application.socialHousingApplication);


   SetApplication.NDIS(
     [in] Boolean CCustomer.application.nDIS);

    GetApplication.NDIS(
     [out] Boolean* CCustomer.application.nDIS);


   SetApplication.AffordableHousingApplication(
     [in] Boolean CCustomer.application.affordableHousingApplication);

    GetApplication.AffordableHousingApplication(
     [out] Boolean* CCustomer.application.affordableHousingApplication);


   SetApplication.SharedEquityHousingApplication(
     [in] Boolean CCustomer.application.sharedEquityHousingApplication);

    GetApplication.SharedEquityHousingApplication(
     [out] Boolean* CCustomer.application.sharedEquityHousingApplication);


   SetApplication.RentToBuyApplication(
     [in] Boolean CCustomer.application.rentToBuyApplication);

    GetApplication.RentToBuyApplication(
     [out] Boolean* CCustomer.application.rentToBuyApplication);


   SetApplication.MarketRateHousingApplication(
     [in] Boolean CCustomer.application.marketRateHousingApplication);

    GetApplication.MarketRateHousingApplication(
     [out] Boolean* CCustomer.application.marketRateHousingApplication);


   SetApplication.HeadApplicantFirstName(
     [in] String CCustomer.application.headApplicantFirstName);

    GetApplication.HeadApplicantFirstName(
     [out] String* CCustomer.application.headApplicantFirstName);


   SetApplication.HeadApplicantLastName(
     [in] String CCustomer.application.headApplicantLastName);

    GetApplication.HeadApplicantLastName(
     [out] String* CCustomer.application.headApplicantLastName);


   SetApplication.HeadApplicantAddressLine1(
     [in] String CCustomer.application.headApplicantAddressLine1);

    GetApplication.HeadApplicantAddressLine1(
     [out] String* CCustomer.application.headApplicantAddressLine1);


   SetApplication.HeadApplicantAddressLine2(
     [in] String CCustomer.application.headApplicantAddressLine2);

    GetApplication.HeadApplicantAddressLine2(
     [out] String* CCustomer.application.headApplicantAddressLine2);


   SetApplication.HeadApplicantSuburb(
     [in] String CCustomer.application.headApplicantSuburb);

    GetApplication.HeadApplicantSuburb(
     [out] String* CCustomer.application.headApplicantSuburb);


   SetApplication.HeadApplicantPostcode(
     [in] String CCustomer.application.headApplicantPostcode);

    GetApplication.HeadApplicantPostcode(
     [out] String* CCustomer.application.headApplicantPostcode);


   SetApplication.HeadApplicantHomePhone(
     [in] String CCustomer.application.headApplicantHomePhone);

    GetApplication.HeadApplicantHomePhone(
     [out] String* CCustomer.application.headApplicantHomePhone);


   SetApplication.HeadApplicantWorkPhone(
     [in] String CCustomer.application.headApplicantWorkPhone);

    GetApplication.HeadApplicantWorkPhone(
     [out] String* CCustomer.application.headApplicantWorkPhone);


   SetApplication.HeadApplicantMobilePhone(
     [in] String CCustomer.application.headApplicantMobilePhone);

    GetApplication.HeadApplicantMobilePhone(
     [out] String* CCustomer.application.headApplicantMobilePhone);


   SetApplication.HeadApplicantEmail(
     [in] String CCustomer.application.headApplicantEmail);

    GetApplication.HeadApplicantEmail(
     [out] String* CCustomer.application.headApplicantEmail);


   SetApplication.HeadApplicantDOB(
     [in] String CCustomer.application.headApplicantDOB);

    GetApplication.HeadApplicantDOB(
     [out] String* CCustomer.application.headApplicantDOB);


   SetApplication.StreetsSought(
     [in] ArrayOf<String> CCustomer.application.streetsSought);

    GetApplication.StreetsSought(
     [out, callee] ArrayOf<String>* CCustomer.application.streetsSought);


   SetApplication.PostcodesSought(
     [in] ArrayOf<Int32> CCustomer.application.postcodesSought);

    GetApplication.PostcodesSought(
     [out, callee] ArrayOf<Int32>* CCustomer.application.postcodesSought);


   SetApplication.BedroomRangeRequired(
     [in] ArrayOf<Int32> CCustomer.application.bedroomRangeRequired);

    GetApplication.BedroomRangeRequired(
     [out, callee] ArrayOf<Int32>* CCustomer.application.bedroomRangeRequired);


   SetApplication.AmenitiesRequested(
     [in] ArrayOf<String> CCustomer.application.amenitiesRequested);

    GetApplication.AmenitiesRequested(
     [out, callee] ArrayOf<String>* CCustomer.application.amenitiesRequested);


   SetApplication.RangeForRent(
     [in] ArrayOf<Double> CCustomer.application.rangeForRent);

    GetApplication.RangeForRent(
     [out, callee] ArrayOf<Double>* CCustomer.application.rangeForRent);


   SetApplication.Interval(
     [in] CHelper.billingInterval CCustomer.application.interval);

    GetApplication.Interval(
     [out] CHelper.billingInterval* CCustomer.application.interval);


   SetApplication.SecondaryApplicantFirstNames(
     [in] ArrayOf<String> CCustomer.application.secondaryApplicantFirstNames);

    GetApplication.SecondaryApplicantFirstNames(
     [out, callee] ArrayOf<String>* CCustomer.application.secondaryApplicantFirstNames);


   SetApplication.SecondaryApplicantLastNames(
     [in] ArrayOf<String> CCustomer.application.secondaryApplicantLastNames);

    GetApplication.SecondaryApplicantLastNames(
     [out, callee] ArrayOf<String>* CCustomer.application.secondaryApplicantLastNames);


   SetApplication.PartnerIds(
     [in] ArrayOf<String> CCustomer.application.partnerIds);

    GetApplication.PartnerIds(
     [out, callee] ArrayOf<String>* CCustomer.application.partnerIds);


   SetApplication.ApplicantIds(
     [in] ArrayOf<CCustomer.applicant> CCustomer.application.applicantIds);

    GetApplication.ApplicantIds(
     [out, callee] ArrayOf<CCustomer.applicant>* CCustomer.application.applicantIds);


   SetApplication.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CCustomer.application.customerIds);

    GetApplication.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CCustomer.application.customerIds);


   SetApplication.PropertyIds(
     [in] ArrayOf<CProperty.property> CCustomer.application.propertyIds);

    GetApplication.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CCustomer.application.propertyIds);


   SetApplication.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.application.businessChannelOwnerId);

    GetApplication.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.application.businessChannelOwnerId);


   SetApplication.BranchId(
     [in] CAdministration.branch CCustomer.application.branchId);

    GetApplication.BranchId(
     [out] CAdministration.branch* CCustomer.application.branchId);


   SetApplication.DeptId(
     [in] CAdministration.department CCustomer.application.deptId);

    GetApplication.DeptId(
     [out] CAdministration.department* CCustomer.application.deptId);


   SetApplication.DocRefs(
     [in] ArrayOf<CAdministration.documents> CCustomer.application.docRefs);

    GetApplication.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.application.docRefs);


   SetApplication.ImageRefs(
     [in] ArrayOf<CAdministration.images> CCustomer.application.imageRefs);

    GetApplication.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.application.imageRefs);


   SetApplication.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CCustomer.application.audioRefIds);

    GetApplication.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CCustomer.application.audioRefIds);


   SetStudentAccommodationBookings.BookingId(
     [in] String CCustomer.studentAccommodationBookings.bookingId);

    GetStudentAccommodationBookings.BookingId(
     [out] String* CCustomer.studentAccommodationBookings.bookingId);


   SetStudentAccommodationBookings.PropertyAddressString(
     [in] String CCustomer.studentAccommodationBookings.propertyAddressString);

    GetStudentAccommodationBookings.PropertyAddressString(
     [out] String* CCustomer.studentAccommodationBookings.propertyAddressString);


   SetStudentAccommodationBookings.UnitNumber(
     [in] String CCustomer.studentAccommodationBookings.unitNumber);

    GetStudentAccommodationBookings.UnitNumber(
     [out] String* CCustomer.studentAccommodationBookings.unitNumber);


   SetStudentAccommodationBookings.PreInspected(
     [in] String CCustomer.studentAccommodationBookings.preInspected);

    GetStudentAccommodationBookings.PreInspected(
     [out] String* CCustomer.studentAccommodationBookings.preInspected);


   SetStudentAccommodationBookings.DateLeaseStarts(
     [in] String CCustomer.studentAccommodationBookings.dateLeaseStarts);

    GetStudentAccommodationBookings.DateLeaseStarts(
     [out] String* CCustomer.studentAccommodationBookings.dateLeaseStarts);


   SetStudentAccommodationBookings.MidTermInspections(
     [in] ArrayOf<String> CCustomer.studentAccommodationBookings.midTermInspections);

    GetStudentAccommodationBookings.MidTermInspections(
     [out, callee] ArrayOf<String>* CCustomer.studentAccommodationBookings.midTermInspections);


   SetStudentAccommodationBookings.DateLeaseEnds(
     [in] String CCustomer.studentAccommodationBookings.dateLeaseEnds);

    GetStudentAccommodationBookings.DateLeaseEnds(
     [out] String* CCustomer.studentAccommodationBookings.dateLeaseEnds);


   SetStudentAccommodationBookings.PostInspected(
     [in] String CCustomer.studentAccommodationBookings.postInspected);

    GetStudentAccommodationBookings.PostInspected(
     [out] String* CCustomer.studentAccommodationBookings.postInspected);


   SetStudentAccommodationBookings.PaymentInterval(
     [in] CHelper.billingInterval CCustomer.studentAccommodationBookings.billingInterval);

    GetStudentAccommodationBookings.PaymentInterval(
     [out] CHelper.billingInterval* CCustomer.studentAccommodationBookings.billingInterval);


   SetStudentAccommodationBookings.RentalAmountAgreed(
     [in] Double CCustomer.studentAccommodationBookings.rentalAmountAgreed);

    GetStudentAccommodationBookings.RentalAmountAgreed(
     [out] Double* CCustomer.studentAccommodationBookings.rentalAmountAgreed);


   SetStudentAccommodationBookings.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.studentAccommodationBookings.businessChannelOwnerId);

    GetStudentAccommodationBookings.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.studentAccommodationBookings.businessChannelOwnerId);


   SetStudentAccommodationBookings.BranchId(
     [in] CAdministration.branch CCustomer.studentAccommodationBookings.branchId);

    GetStudentAccommodationBookings.BranchId(
     [out] CAdministration.branch* CCustomer.studentAccommodationBookings.branchId);


   SetStudentAccommodationBookings.DeptId(
     [in] CAdministration.department CCustomer.studentAccommodationBookings.deptId);

    GetStudentAccommodationBookings.DeptId(
     [out] CAdministration.department* CCustomer.studentAccommodationBookings.deptId);


   SetStudentAccommodationBookings.PropertyId(
     [in] CProperty.property CCustomer.studentAccommodationBookings.propertyId);

    GetStudentAccommodationBookings.PropertyId(
     [out] CProperty.property* CCustomer.studentAccommodationBookings.propertyId);


   SetStudentAccommodationBookings.ApplicationId(
     [in] CCustomer.application CCustomer.studentAccommodationBookings.applicationId);

    GetStudentAccommodationBookings.ApplicationId(
     [out] CCustomer.application* CCustomer.studentAccommodationBookings.applicationId);


   SetStudentAccommodationBookings.ApplicantId(
     [in] CCustomer.applicant CCustomer.studentAccommodationBookings.applicantId);

    GetStudentAccommodationBookings.ApplicantId(
     [out] CCustomer.applicant* CCustomer.studentAccommodationBookings.applicantId);


   SetStudentAccommodationBookings.AllocationId(
     [in] CProperty.allocation CCustomer.studentAccommodationBookings.allocationId);

    GetStudentAccommodationBookings.AllocationId(
     [out] CProperty.allocation* CCustomer.studentAccommodationBookings.allocationId);


   SetStudentAccommodationBookings.TenancyId(
     [in] CProperty.tenant CCustomer.studentAccommodationBookings.tenancyId);

    GetStudentAccommodationBookings.TenancyId(
     [out] CProperty.tenant* CCustomer.studentAccommodationBookings.tenancyId);


   SetStudentAccommodationBookings.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.studentAccommodationBookings.docRefIds);

    GetStudentAccommodationBookings.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.studentAccommodationBookings.docRefIds);


   SetStudentAccommodationBookings.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.studentAccommodationBookings.imageRefIds);

    GetStudentAccommodationBookings.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.studentAccommodationBookings.imageRefIds);


   SetStudentAccommodationBookings.BookingId(
     [in] String CCustomer.studentAccommodationBookings.bookingId);

    GetStudentAccommodationBookings.BookingId(
     [out] String* CCustomer.studentAccommodationBookings.bookingId);


   SetStudentAccommodationBookings.PropertyAddressString(
     [in] String CCustomer.studentAccommodationBookings.propertyAddressString);

    GetStudentAccommodationBookings.PropertyAddressString(
     [out] String* CCustomer.studentAccommodationBookings.propertyAddressString);


   SetStudentAccommodationBookings.UnitNumber(
     [in] String CCustomer.studentAccommodationBookings.unitNumber);

    GetStudentAccommodationBookings.UnitNumber(
     [out] String* CCustomer.studentAccommodationBookings.unitNumber);


   SetStudentAccommodationBookings.PreInspected(
     [in] String CCustomer.studentAccommodationBookings.preInspected);

    GetStudentAccommodationBookings.PreInspected(
     [out] String* CCustomer.studentAccommodationBookings.preInspected);


   SetStudentAccommodationBookings.DateLeaseStarts(
     [in] String CCustomer.studentAccommodationBookings.dateLeaseStarts);

    GetStudentAccommodationBookings.DateLeaseStarts(
     [out] String* CCustomer.studentAccommodationBookings.dateLeaseStarts);


   SetStudentAccommodationBookings.MidTermInspections(
     [in] ArrayOf<String> CCustomer.studentAccommodationBookings.midTermInspections);

    GetStudentAccommodationBookings.MidTermInspections(
     [out, callee] ArrayOf<String>* CCustomer.studentAccommodationBookings.midTermInspections);


   SetStudentAccommodationBookings.DateLeaseEnds(
     [in] String CCustomer.studentAccommodationBookings.dateLeaseEnds);

    GetStudentAccommodationBookings.DateLeaseEnds(
     [out] String* CCustomer.studentAccommodationBookings.dateLeaseEnds);


   SetStudentAccommodationBookings.PostInspected(
     [in] String CCustomer.studentAccommodationBookings.postInspected);

    GetStudentAccommodationBookings.PostInspected(
     [out] String* CCustomer.studentAccommodationBookings.postInspected);


   SetStudentAccommodationBookings.PaymentInterval(
     [in] CHelper.billingInterval CCustomer.studentAccommodationBookings.billingInterval);

    GetStudentAccommodationBookings.PaymentInterval(
     [out] CHelper.billingInterval* CCustomer.studentAccommodationBookings.billingInterval);


   SetStudentAccommodationBookings.RentalAmountAgreed(
     [in] Double CCustomer.studentAccommodationBookings.rentalAmountAgreed);

    GetStudentAccommodationBookings.RentalAmountAgreed(
     [out] Double* CCustomer.studentAccommodationBookings.rentalAmountAgreed);


   SetStudentAccommodationBookings.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.studentAccommodationBookings.businessChannelOwnerId);

    GetStudentAccommodationBookings.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.studentAccommodationBookings.businessChannelOwnerId);


   SetStudentAccommodationBookings.BranchId(
     [in] CAdministration.branch CCustomer.studentAccommodationBookings.branchId);

    GetStudentAccommodationBookings.BranchId(
     [out] CAdministration.branch* CCustomer.studentAccommodationBookings.branchId);


   SetStudentAccommodationBookings.DeptId(
     [in] CAdministration.department CCustomer.studentAccommodationBookings.deptId);

    GetStudentAccommodationBookings.DeptId(
     [out] CAdministration.department* CCustomer.studentAccommodationBookings.deptId);


   SetStudentAccommodationBookings.PropertyId(
     [in] CProperty.property CCustomer.studentAccommodationBookings.propertyId);

    GetStudentAccommodationBookings.PropertyId(
     [out] CProperty.property* CCustomer.studentAccommodationBookings.propertyId);


   SetStudentAccommodationBookings.ApplicationId(
     [in] CCustomer.application CCustomer.studentAccommodationBookings.applicationId);

    GetStudentAccommodationBookings.ApplicationId(
     [out] CCustomer.application* CCustomer.studentAccommodationBookings.applicationId);


   SetStudentAccommodationBookings.ApplicantId(
     [in] CCustomer.applicant CCustomer.studentAccommodationBookings.applicantId);

    GetStudentAccommodationBookings.ApplicantId(
     [out] CCustomer.applicant* CCustomer.studentAccommodationBookings.applicantId);


   SetStudentAccommodationBookings.AllocationId(
     [in] CProperty.allocation CCustomer.studentAccommodationBookings.allocationId);

    GetStudentAccommodationBookings.AllocationId(
     [out] CProperty.allocation* CCustomer.studentAccommodationBookings.allocationId);


   SetStudentAccommodationBookings.TenancyId(
     [in] CProperty.tenant CCustomer.studentAccommodationBookings.tenancyId);

    GetStudentAccommodationBookings.TenancyId(
     [out] CProperty.tenant* CCustomer.studentAccommodationBookings.tenancyId);


   SetStudentAccommodationBookings.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.studentAccommodationBookings.docRefIds);

    GetStudentAccommodationBookings.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.studentAccommodationBookings.docRefIds);


   SetStudentAccommodationBookings.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.studentAccommodationBookings.imageRefIds);

    GetStudentAccommodationBookings.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.studentAccommodationBookings.imageRefIds);


   SetStudentAccommodationBookings.CustTenantJoinId(
     [in] String CCustomer.studentAccommodationBookings.custTenantJoinId);

    GetStudentAccommodationBookings.CustTenantJoinId(
     [out] String* CCustomer.studentAccommodationBookings.custTenantJoinId);


   SetStudentAccommodationBookings.CustomerId(
     [in] CCustomer.customer CCustomer.studentAccommodationBookings.customerId);

    GetStudentAccommodationBookings.CustomerId(
     [out] CCustomer.customer* CCustomer.studentAccommodationBookings.customerId);


   SetStudentAccommodationBookings.TenancyId(
     [in] CProperty.tenant CCustomer.studentAccommodationBookings.tenancyId);

    GetStudentAccommodationBookings.TenancyId(
     [out] CProperty.tenant* CCustomer.studentAccommodationBookings.tenancyId);


   SetStudentAccommodationBookings.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.studentAccommodationBookings.businessChannelOwnerId);

    GetStudentAccommodationBookings.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.studentAccommodationBookings.businessChannelOwnerId);



   SetTemporaryAccommodationBookings.BookingId(
     [in] String CCustomer.temporaryAccommodationBookings.bookingId);

    GetTemporaryAccommodationBookings.BookingId(
     [out] String* CCustomer.temporaryAccommodationBookings.bookingId);


   SetTemporaryAccommodationBookings.PropertyAddressString(
     [in] String CCustomer.temporaryAccommodationBookings.propertyAddressString);

    GetTemporaryAccommodationBookings.PropertyAddressString(
     [out] String* CCustomer.temporaryAccommodationBookings.propertyAddressString);


   SetTemporaryAccommodationBookings.UnitNumber(
     [in] String CCustomer.temporaryAccommodationBookings.unitNumber);

    GetTemporaryAccommodationBookings.UnitNumber(
     [out] String* CCustomer.temporaryAccommodationBookings.unitNumber);


   SetTemporaryAccommodationBookings.PreInspected(
     [in] String CCustomer.temporaryAccommodationBookings.preInspected);

    GetTemporaryAccommodationBookings.PreInspected(
     [out] String* CCustomer.temporaryAccommodationBookings.preInspected);


   SetTemporaryAccommodationBookings.DateLeaseStarts(
     [in] String CCustomer.temporaryAccommodationBookings.dateLeaseStarts);

    GetTemporaryAccommodationBookings.DateLeaseStarts(
     [out] String* CCustomer.temporaryAccommodationBookings.dateLeaseStarts);


   SetTemporaryAccommodationBookings.MidTermInspections(
     [in] ArrayOf<String> CCustomer.temporaryAccommodationBookings.midTermInspections);

    GetTemporaryAccommodationBookings.MidTermInspections(
     [out, callee] ArrayOf<String>* CCustomer.temporaryAccommodationBookings.midTermInspections);


   SetTemporaryAccommodationBookings.DateLeaseEnds(
     [in] String CCustomer.temporaryAccommodationBookings.dateLeaseEnds);

    GetTemporaryAccommodationBookings.DateLeaseEnds(
     [out] String* CCustomer.temporaryAccommodationBookings.dateLeaseEnds);


   SetTemporaryAccommodationBookings.PostInspected(
     [in] String CCustomer.temporaryAccommodationBookings.postInspected);

    GetTemporaryAccommodationBookings.PostInspected(
     [out] String* CCustomer.temporaryAccommodationBookings.postInspected);


   SetTemporaryAccommodationBookings.PaymentInterval(
     [in] CHelper.billingInterval CCustomer.temporaryAccommodationBookings.billingInterval);

    GetTemporaryAccommodationBookings.PaymentInterval(
     [out] CHelper.billingInterval* CCustomer.temporaryAccommodationBookings.billingInterval);


   SetTemporaryAccommodationBookings.RentalAmountAgreed(
     [in] Double CCustomer.temporaryAccommodationBookings.rentalAmountAgreed);

    GetTemporaryAccommodationBookings.RentalAmountAgreed(
     [out] Double* CCustomer.temporaryAccommodationBookings.rentalAmountAgreed);


   SetTemporaryAccommodationBookings.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.temporaryAccommodationBookings.businessChannelOwnerId);

    GetTemporaryAccommodationBookings.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.temporaryAccommodationBookings.businessChannelOwnerId);


   SetTemporaryAccommodationBookings.BranchId(
     [in] CAdministration.branch CCustomer.temporaryAccommodationBookings.branchId);

    GetTemporaryAccommodationBookings.BranchId(
     [out] CAdministration.branch* CCustomer.temporaryAccommodationBookings.branchId);


   SetTemporaryAccommodationBookings.DeptId(
     [in] CAdministration.department CCustomer.temporaryAccommodationBookings.deptId);

    GetTemporaryAccommodationBookings.DeptId(
     [out] CAdministration.department* CCustomer.temporaryAccommodationBookings.deptId);


   SetTemporaryAccommodationBookings.PropertyId(
     [in] CProperty.property CCustomer.temporaryAccommodationBookings.propertyId);

    GetTemporaryAccommodationBookings.PropertyId(
     [out] CProperty.property* CCustomer.temporaryAccommodationBookings.propertyId);


   SetTemporaryAccommodationBookings.ApplicationId(
     [in] CCustomer.application CCustomer.temporaryAccommodationBookings.applicationId);

    GetTemporaryAccommodationBookings.ApplicationId(
     [out] CCustomer.application* CCustomer.temporaryAccommodationBookings.applicationId);


   SetTemporaryAccommodationBookings.ApplicantId(
     [in] CCustomer.applicant CCustomer.temporaryAccommodationBookings.applicantId);

    GetTemporaryAccommodationBookings.ApplicantId(
     [out] CCustomer.applicant* CCustomer.temporaryAccommodationBookings.applicantId);


   SetTemporaryAccommodationBookings.AllocationId(
     [in] CProperty.allocation CCustomer.temporaryAccommodationBookings.allocationId);

    GetTemporaryAccommodationBookings.AllocationId(
     [out] CProperty.allocation* CCustomer.temporaryAccommodationBookings.allocationId);


   SetTemporaryAccommodationBookings.TenancyId(
     [in] CProperty.tenant CCustomer.temporaryAccommodationBookings.tenancyId);

    GetTemporaryAccommodationBookings.TenancyId(
     [out] CProperty.tenant* CCustomer.temporaryAccommodationBookings.tenancyId);


   SetTemporaryAccommodationBookings.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.temporaryAccommodationBookings.docRefIds);

    GetTemporaryAccommodationBookings.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.temporaryAccommodationBookings.docRefIds);


   SetTemporaryAccommodationBookings.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.temporaryAccommodationBookings.imageRefIds);

    GetTemporaryAccommodationBookings.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.temporaryAccommodationBookings.imageRefIds);


   SetTemporaryAccommodationBookings.BookingId(
     [in] String CCustomer.temporaryAccommodationBookings.bookingId);

    GetTemporaryAccommodationBookings.BookingId(
     [out] String* CCustomer.temporaryAccommodationBookings.bookingId);


   SetTemporaryAccommodationBookings.PropertyAddressString(
     [in] String CCustomer.temporaryAccommodationBookings.propertyAddressString);

    GetTemporaryAccommodationBookings.PropertyAddressString(
     [out] String* CCustomer.temporaryAccommodationBookings.propertyAddressString);


   SetTemporaryAccommodationBookings.UnitNumber(
     [in] String CCustomer.temporaryAccommodationBookings.unitNumber);

    GetTemporaryAccommodationBookings.UnitNumber(
     [out] String* CCustomer.temporaryAccommodationBookings.unitNumber);


   SetTemporaryAccommodationBookings.PreInspected(
     [in] String CCustomer.temporaryAccommodationBookings.preInspected);

    GetTemporaryAccommodationBookings.PreInspected(
     [out] String* CCustomer.temporaryAccommodationBookings.preInspected);


   SetTemporaryAccommodationBookings.DateLeaseStarts(
     [in] String CCustomer.temporaryAccommodationBookings.dateLeaseStarts);

    GetTemporaryAccommodationBookings.DateLeaseStarts(
     [out] String* CCustomer.temporaryAccommodationBookings.dateLeaseStarts);


   SetTemporaryAccommodationBookings.MidTermInspections(
     [in] ArrayOf<String> CCustomer.temporaryAccommodationBookings.midTermInspections);

    GetTemporaryAccommodationBookings.MidTermInspections(
     [out, callee] ArrayOf<String>* CCustomer.temporaryAccommodationBookings.midTermInspections);


   SetTemporaryAccommodationBookings.DateLeaseEnds(
     [in] String CCustomer.temporaryAccommodationBookings.dateLeaseEnds);

    GetTemporaryAccommodationBookings.DateLeaseEnds(
     [out] String* CCustomer.temporaryAccommodationBookings.dateLeaseEnds);


   SetTemporaryAccommodationBookings.PostInspected(
     [in] String CCustomer.temporaryAccommodationBookings.postInspected);

    GetTemporaryAccommodationBookings.PostInspected(
     [out] String* CCustomer.temporaryAccommodationBookings.postInspected);


   SetTemporaryAccommodationBookings.PaymentInterval(
     [in] CHelper.billingInterval CCustomer.temporaryAccommodationBookings.billingInterval);

    GetTemporaryAccommodationBookings.PaymentInterval(
     [out] CHelper.billingInterval* CCustomer.temporaryAccommodationBookings.billingInterval);


   SetTemporaryAccommodationBookings.RentalAmountAgreed(
     [in] Double CCustomer.temporaryAccommodationBookings.rentalAmountAgreed);

    GetTemporaryAccommodationBookings.RentalAmountAgreed(
     [out] Double* CCustomer.temporaryAccommodationBookings.rentalAmountAgreed);


   SetTemporaryAccommodationBookings.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.temporaryAccommodationBookings.businessChannelOwnerId);

    GetTemporaryAccommodationBookings.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.temporaryAccommodationBookings.businessChannelOwnerId);


   SetTemporaryAccommodationBookings.BranchId(
     [in] CAdministration.branch CCustomer.temporaryAccommodationBookings.branchId);

    GetTemporaryAccommodationBookings.BranchId(
     [out] CAdministration.branch* CCustomer.temporaryAccommodationBookings.branchId);


   SetTemporaryAccommodationBookings.DeptId(
     [in] CAdministration.department CCustomer.temporaryAccommodationBookings.deptId);

    GetTemporaryAccommodationBookings.DeptId(
     [out] CAdministration.department* CCustomer.temporaryAccommodationBookings.deptId);


   SetTemporaryAccommodationBookings.PropertyId(
     [in] CProperty.property CCustomer.temporaryAccommodationBookings.propertyId);

    GetTemporaryAccommodationBookings.PropertyId(
     [out] CProperty.property* CCustomer.temporaryAccommodationBookings.propertyId);


   SetTemporaryAccommodationBookings.ApplicationId(
     [in] CCustomer.application CCustomer.temporaryAccommodationBookings.applicationId);

    GetTemporaryAccommodationBookings.ApplicationId(
     [out] CCustomer.application* CCustomer.temporaryAccommodationBookings.applicationId);


   SetTemporaryAccommodationBookings.ApplicantId(
     [in] CCustomer.applicant CCustomer.temporaryAccommodationBookings.applicantId);

    GetTemporaryAccommodationBookings.ApplicantId(
     [out] CCustomer.applicant* CCustomer.temporaryAccommodationBookings.applicantId);


   SetTemporaryAccommodationBookings.AllocationId(
     [in] CProperty.allocation CCustomer.temporaryAccommodationBookings.allocationId);

    GetTemporaryAccommodationBookings.AllocationId(
     [out] CProperty.allocation* CCustomer.temporaryAccommodationBookings.allocationId);


   SetTemporaryAccommodationBookings.TenancyId(
     [in] CProperty.tenant CCustomer.temporaryAccommodationBookings.tenancyId);

    GetTemporaryAccommodationBookings.TenancyId(
     [out] CProperty.tenant* CCustomer.temporaryAccommodationBookings.tenancyId);


   SetTemporaryAccommodationBookings.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.temporaryAccommodationBookings.docRefIds);

    GetTemporaryAccommodationBookings.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.temporaryAccommodationBookings.docRefIds);


   SetTemporaryAccommodationBookings.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.temporaryAccommodationBookings.imageRefIds);

    GetTemporaryAccommodationBookings.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.temporaryAccommodationBookings.imageRefIds);


   SetTemporaryAccommodationBookings.CustTenantJoinId(
     [in] String CCustomer.temporaryAccommodationBookings.custTenantJoinId);

    GetTemporaryAccommodationBookings.CustTenantJoinId(
     [out] String* CCustomer.temporaryAccommodationBookings.custTenantJoinId);


   SetTemporaryAccommodationBookings.CustomerId(
     [in] CCustomer.customer CCustomer.temporaryAccommodationBookings.customerId);

    GetTemporaryAccommodationBookings.CustomerId(
     [out] CCustomer.customer* CCustomer.temporaryAccommodationBookings.customerId);


   SetTemporaryAccommodationBookings.TenancyId(
     [in] CProperty.tenant CCustomer.temporaryAccommodationBookings.tenancyId);

    GetTemporaryAccommodationBookings.TenancyId(
     [out] CProperty.tenant* CCustomer.temporaryAccommodationBookings.tenancyId);


   SetTemporaryAccommodationBookings.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.temporaryAccommodationBookings.businessChannelOwnerId);

    GetTemporaryAccommodationBookings.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.temporaryAccommodationBookings.businessChannelOwnerId);


   SetCustomerTenantJoin.CustTenantJoinId(
     [in] String CCustomer.customerTenantJoin.custTenantJoinId);

    GetCustomerTenantJoin.CustTenantJoinId(
     [out] String* CCustomer.customerTenantJoin.custTenantJoinId);


   SetCustomerTenantJoin.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CCustomer.customerTenantJoin.customerIds);

    GetCustomerTenantJoin.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CCustomer.customerTenantJoin.customerIds);


   SetCustomerTenantJoin.TenancyId(
     [in] ArrayOf<Double> CCustomer.customerTenantJoin.tenancyId);

    GetCustomerTenantJoin.TenancyId(
     [out, callee] ArrayOf<Double>* CCustomer.customerTenantJoin.tenancyId);


   SetCustomerTenantJoin.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.customerTenantJoin.businessChannelOwnerId);

    GetCustomerTenantJoin.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.customerTenantJoin.businessChannelOwnerId);



   SetComplaint.ComplaintId(
     [in] String CCustomer.complaint.complaintId);

    GetComplaint.ComplaintId(
     [out] String* CCustomer.complaint.complaintId);


   SetComplaint.ParticipantNameComplainant(
     [in] String CCustomer.complaint.participantNameComplainant);

    GetComplaint.ParticipantNameComplainant(
     [out] String* CCustomer.complaint.participantNameComplainant);


   SetComplaint.ParticipantIdComplainant(
     [in] String CCustomer.complaint.participantIdComplainant);

    GetComplaint.ParticipantIdComplainant(
     [out] String* CCustomer.complaint.participantIdComplainant);


   SetComplaint.Description(
     [in] String CCustomer.complaint.description);

    GetComplaint.Description(
     [out] String* CCustomer.complaint.description);


   SetComplaint.NonTenantRelated(
     [in] Boolean CCustomer.complaint.nonTenantRelated);

    GetComplaint.NonTenantRelated(
     [out] Boolean* CCustomer.complaint.nonTenantRelated);


   SetComplaint.AgainstTenant(
     [in] Boolean CCustomer.complaint.againstTenant);

    GetComplaint.AgainstTenant(
     [out] Boolean* CCustomer.complaint.againstTenant);


   SetComplaint.ByTenant(
     [in] Boolean CCustomer.complaint.byTenant);

    GetComplaint.ByTenant(
     [out] Boolean* CCustomer.complaint.byTenant);


   SetComplaint.DetailsInChronologicalOrder(
     [in] ArrayOf<String> CCustomer.complaint.detailsInChronologicalOrder);

    GetComplaint.DetailsInChronologicalOrder(
     [out, callee] ArrayOf<String>* CCustomer.complaint.detailsInChronologicalOrder);


   SetComplaint.DatesTimesOfEvents(
     [in] ArrayOf<String> CCustomer.complaint.datesTimesOfEvents);

    GetComplaint.DatesTimesOfEvents(
     [out, callee] ArrayOf<String>* CCustomer.complaint.datesTimesOfEvents);


   SetComplaint.RepliedWhen(
     [in] String CCustomer.complaint.repliedWhen);

    GetComplaint.RepliedWhen(
     [out] String* CCustomer.complaint.repliedWhen);


   SetComplaint.ResponsibilitiesParticpantsIds(
     [in] ArrayOf<String> CCustomer.complaint.responsibilitiesParticpantsIds);

    GetComplaint.ResponsibilitiesParticpantsIds(
     [out, callee] ArrayOf<String>* CCustomer.complaint.responsibilitiesParticpantsIds);


   SetComplaint.ResponsibilitiesParticpantsNames(
     [in] ArrayOf<String> CCustomer.complaint.responsibilitiesParticpantsNames);

    GetComplaint.ResponsibilitiesParticpantsNames(
     [out, callee] ArrayOf<String>* CCustomer.complaint.responsibilitiesParticpantsNames);


   SetComplaint.RequiredActions(
     [in] ArrayOf<String> CCustomer.complaint.requiredActions);

    GetComplaint.RequiredActions(
     [out, callee] ArrayOf<String>* CCustomer.complaint.requiredActions);


   SetComplaint.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.complaint.businessChannelOwnerId);

    GetComplaint.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.complaint.businessChannelOwnerId);


   SetComplaint.BranchId(
     [in] CAdministration.branch CCustomer.complaint.branchId);

    GetComplaint.BranchId(
     [out] CAdministration.branch* CCustomer.complaint.branchId);


   SetComplaint.DeptId(
     [in] CAdministration.department CCustomer.complaint.deptId);

    GetComplaint.DeptId(
     [out] CAdministration.department* CCustomer.complaint.deptId);


   SetComplaint.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CCustomer.complaint.propertyOwnerIds);

    GetComplaint.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CCustomer.complaint.propertyOwnerIds);


   SetComplaint.TenantIds(
     [in] ArrayOf<CProperty.tenant> CCustomer.complaint.tenantIds);

    GetComplaint.TenantIds(
     [out, callee] ArrayOf<CProperty.tenant>* CCustomer.complaint.tenantIds);


   SetComplaint.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CCustomer.complaint.customerIds);

    GetComplaint.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CCustomer.complaint.customerIds);


   SetComplaint.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CCustomer.complaint.employeeIds);

    GetComplaint.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CCustomer.complaint.employeeIds);


   SetComplaint.CommunityIds(
     [in] ArrayOf<CStakeholder.community> CCustomer.complaint.communityIds);

    GetComplaint.CommunityIds(
     [out, callee] ArrayOf<CStakeholder.community>* CCustomer.complaint.communityIds);


   SetComplaint.MediaIds(
     [in] ArrayOf<CStakeholder.media> CCustomer.complaint.mediaIds);

    GetComplaint.MediaIds(
     [out, callee] ArrayOf<CStakeholder.media>* CCustomer.complaint.mediaIds);


   SetComplaint.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CCustomer.complaint.supplierIds);

    GetComplaint.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CCustomer.complaint.supplierIds);


   SetComplaint.PartnerIds(
     [in] ArrayOf<CStakeholder.partner> CCustomer.complaint.partnerIds);

    GetComplaint.PartnerIds(
     [out, callee] ArrayOf<CStakeholder.partner>* CCustomer.complaint.partnerIds);


   SetComplaint.TribunalIds(
     [in] ArrayOf<CRegulator.nCAT> CCustomer.complaint.tribunalIds);

    GetComplaint.TribunalIds(
     [out, callee] ArrayOf<CRegulator.nCAT>* CCustomer.complaint.tribunalIds);


   SetComplaint.TicaIds(
     [in] ArrayOf<CStakeholder.tICA> CCustomer.complaint.ticaIds);

    GetComplaint.TicaIds(
     [out, callee] ArrayOf<CStakeholder.tICA>* CCustomer.complaint.ticaIds);


   SetComplaint.PropertyIds(
     [in] ArrayOf<CProperty.property> CCustomer.complaint.propertyIds);

    GetComplaint.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CCustomer.complaint.propertyIds);


   SetComplaint.ServiceIdsInvolved(
     [in] ArrayOf<CAdministration.service> CCustomer.complaint.serviceIdsInvolved);

    GetComplaint.ServiceIdsInvolved(
     [out, callee] ArrayOf<CAdministration.service>* CCustomer.complaint.serviceIdsInvolved);


   SetComplaint.ItemiIds(
     [in] ArrayOf<CAdministration.item> CCustomer.complaint.itemiIds);

    GetComplaint.ItemiIds(
     [out, callee] ArrayOf<CAdministration.item>* CCustomer.complaint.itemiIds);


   SetComplaint.JobIds(
     [in] ArrayOf<CAdministration.job> CCustomer.complaint.jobIds);

    GetComplaint.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CCustomer.complaint.jobIds);


   SetComplaint.DocRefs(
     [in] ArrayOf<CAdministration.documents> CCustomer.complaint.docRefs);

    GetComplaint.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.complaint.docRefs);


   SetComplaint.ImageRefs(
     [in] ArrayOf<CAdministration.images> CCustomer.complaint.imageRefs);

    GetComplaint.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.complaint.imageRefs);


   SetComplaint.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CCustomer.complaint.audioRefIds);

    GetComplaint.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CCustomer.complaint.audioRefIds);


   SetComplaint.VideoRefs(
     [in] ArrayOf<CAdministration.video> CCustomer.complaint.videoRefs);

    GetComplaint.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CCustomer.complaint.videoRefs);


   SetCompliment.ComplimentId(
     [in] String CCustomer.compliment.complimentId);

    GetCompliment.ComplimentId(
     [out] String* CCustomer.compliment.complimentId);


   SetCompliment.ParticipantNameComplimenting(
     [in] String CCustomer.compliment.participantNameComplimenting);

    GetCompliment.ParticipantNameComplimenting(
     [out] String* CCustomer.compliment.participantNameComplimenting);


   SetCompliment.ParticipantIdComplimenting(
     [in] String CCustomer.compliment.participantIdComplimenting);

    GetCompliment.ParticipantIdComplimenting(
     [out] String* CCustomer.compliment.participantIdComplimenting);


   SetCompliment.Description(
     [in] String CCustomer.compliment.description);

    GetCompliment.Description(
     [out] String* CCustomer.compliment.description);


   SetCompliment.NonTenantRelated(
     [in] Boolean CCustomer.compliment.nonTenantRelated);

    GetCompliment.NonTenantRelated(
     [out] Boolean* CCustomer.compliment.nonTenantRelated);


   SetCompliment.ProTenant(
     [in] Boolean CCustomer.compliment.proTenant);

    GetCompliment.ProTenant(
     [out] Boolean* CCustomer.compliment.proTenant);


   SetCompliment.ByTenant(
     [in] Boolean CCustomer.compliment.byTenant);

    GetCompliment.ByTenant(
     [out] Boolean* CCustomer.compliment.byTenant);


   SetCompliment.DetailsInChronologicalOrder(
     [in] ArrayOf<String> CCustomer.compliment.detailsInChronologicalOrder);

    GetCompliment.DetailsInChronologicalOrder(
     [out, callee] ArrayOf<String>* CCustomer.compliment.detailsInChronologicalOrder);


   SetCompliment.DatesTimesOfEvents(
     [in] ArrayOf<String> CCustomer.compliment.datesTimesOfEvents);

    GetCompliment.DatesTimesOfEvents(
     [out, callee] ArrayOf<String>* CCustomer.compliment.datesTimesOfEvents);


   SetCompliment.CorroReceived(
     [in] String CCustomer.compliment.corroReceived);

    GetCompliment.CorroReceived(
     [out] String* CCustomer.compliment.corroReceived);


   SetCompliment.ResponseDocRefs(
     [in] ArrayOf<String> CCustomer.compliment.responseDocRefs);

    GetCompliment.ResponseDocRefs(
     [out, callee] ArrayOf<String>* CCustomer.compliment.responseDocRefs);


   SetCompliment.RepliedWhen(
     [in] String CCustomer.compliment.repliedWhen);

    GetCompliment.RepliedWhen(
     [out] String* CCustomer.compliment.repliedWhen);


   SetCompliment.ResponsibilitiesParticpantsIds(
     [in] ArrayOf<String> CCustomer.compliment.responsibilitiesParticpantsIds);

    GetCompliment.ResponsibilitiesParticpantsIds(
     [out, callee] ArrayOf<String>* CCustomer.compliment.responsibilitiesParticpantsIds);


   SetCompliment.ResponsibilitiesParticpantsNames(
     [in] ArrayOf<String> CCustomer.compliment.responsibilitiesParticpantsNames);

    GetCompliment.ResponsibilitiesParticpantsNames(
     [out, callee] ArrayOf<String>* CCustomer.compliment.responsibilitiesParticpantsNames);


   SetCompliment.RequiredActions(
     [in] ArrayOf<String> CCustomer.compliment.requiredActions);

    GetCompliment.RequiredActions(
     [out, callee] ArrayOf<String>* CCustomer.compliment.requiredActions);


   SetCompliment.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CCustomer.compliment.businessChannelOwnerId);

    GetCompliment.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CCustomer.compliment.businessChannelOwnerId);


   SetCompliment.BranchId(
     [in] CAdministration.branch CCustomer.compliment.branchId);

    GetCompliment.BranchId(
     [out] CAdministration.branch* CCustomer.compliment.branchId);


   SetCompliment.DeptId(
     [in] CAdministration.department CCustomer.compliment.deptId);

    GetCompliment.DeptId(
     [out] CAdministration.department* CCustomer.compliment.deptId);


   SetCompliment.PropertyIds(
     [in] ArrayOf<CProperty.property> CCustomer.compliment.propertyIds);

    GetCompliment.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CCustomer.compliment.propertyIds);


   SetCompliment.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CCustomer.compliment.propertyOwnerIds);

    GetCompliment.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CCustomer.compliment.propertyOwnerIds);


   SetCompliment.ServiceIdsInvolved(
     [in] ArrayOf<CAdministration.service> CCustomer.compliment.serviceIdsInvolved);

    GetCompliment.ServiceIdsInvolved(
     [out, callee] ArrayOf<CAdministration.service>* CCustomer.compliment.serviceIdsInvolved);


   SetCompliment.ItemiIds(
     [in] ArrayOf<CAdministration.item> CCustomer.compliment.itemiIds);

    GetCompliment.ItemiIds(
     [out, callee] ArrayOf<CAdministration.item>* CCustomer.compliment.itemiIds);


   SetCompliment.JobIds(
     [in] ArrayOf<CAdministration.job> CCustomer.compliment.jobIds);

    GetCompliment.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CCustomer.compliment.jobIds);


   SetCompliment.TenancyId(
     [in] ArrayOf<CProperty.tenant> CCustomer.compliment.tenancyId);

    GetCompliment.TenancyId(
     [out, callee] ArrayOf<CProperty.tenant>* CCustomer.compliment.tenancyId);


   SetCompliment.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CCustomer.compliment.customerIds);

    GetCompliment.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CCustomer.compliment.customerIds);


   SetCompliment.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CCustomer.compliment.employeeIds);

    GetCompliment.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CCustomer.compliment.employeeIds);


   SetCompliment.CommunityIds(
     [in] ArrayOf<CStakeholder.community> CCustomer.compliment.communityIds);

    GetCompliment.CommunityIds(
     [out, callee] ArrayOf<CStakeholder.community>* CCustomer.compliment.communityIds);


   SetCompliment.MediaIds(
     [in] ArrayOf<CStakeholder.media> CCustomer.compliment.mediaIds);

    GetCompliment.MediaIds(
     [out, callee] ArrayOf<CStakeholder.media>* CCustomer.compliment.mediaIds);


   SetCompliment.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CCustomer.compliment.supplierIds);

    GetCompliment.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CCustomer.compliment.supplierIds);


   SetCompliment.PartnerIds(
     [in] ArrayOf<CStakeholder.partner> CCustomer.compliment.partnerIds);

    GetCompliment.PartnerIds(
     [out, callee] ArrayOf<CStakeholder.partner>* CCustomer.compliment.partnerIds);


   SetCompliment.TribunalIds(
     [in] ArrayOf<CRegulator.nCAT> CCustomer.compliment.tribunalIds);

    GetCompliment.TribunalIds(
     [out, callee] ArrayOf<CRegulator.nCAT>* CCustomer.compliment.tribunalIds);


   SetCompliment.TicaIds(
     [in] ArrayOf<CStakeholder.tICA> CCustomer.compliment.ticaIds);

    GetCompliment.TicaIds(
     [out, callee] ArrayOf<CStakeholder.tICA>* CCustomer.compliment.ticaIds);


   SetCompliment.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CCustomer.compliment.docRefIds);

    GetCompliment.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CCustomer.compliment.docRefIds);


   SetCompliment.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CCustomer.compliment.imageRefIds);

    GetCompliment.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CCustomer.compliment.imageRefIds);


   SetCompliment.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CCustomer.compliment.audioRefIds);

    GetCompliment.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CCustomer.compliment.audioRefIds);


   SetCompliment.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CCustomer.compliment.videoRefIds);

    GetCompliment.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CCustomer.compliment.videoRefIds);



SetSolicitor.SolicitorId(
     [in] String CSolicitor.solicitor.solicitorId);

    GetSolicitor.SolicitorId(
     [out] String* CSolicitor.solicitor.solicitorId);


   SetSolicitor.ABN(
     [in] String CSolicitor.solicitor.aBN);

    GetSolicitor.ABN(
     [out] String* CSolicitor.solicitor.aBN);


   SetSolicitor.CompanyName(
     [in] String CSolicitor.solicitor.companyName);

    GetSolicitor.CompanyName(
     [out] String* CSolicitor.solicitor.companyName);


   SetSolicitor.ContactFirstNameList(
     [in] ArrayOf<String> CSolicitor.solicitor.contactFirstNameList);

    GetSolicitor.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CSolicitor.solicitor.contactFirstNameList);


   SetSolicitor.ContactLastNameList(
     [in] ArrayOf<String> CSolicitor.solicitor.contactLastNameList);

    GetSolicitor.ContactLastNameList(
     [out, callee] ArrayOf<String>* CSolicitor.solicitor.contactLastNameList);


   SetSolicitor.OfficelAddresses(
     [in] ArrayOf<String> CSolicitor.solicitor.officelAddresses);

    GetSolicitor.OfficelAddresses(
     [out, callee] ArrayOf<String>* CSolicitor.solicitor.officelAddresses);


   SetSolicitor.PostalAddresses(
     [in] ArrayOf<String> CSolicitor.solicitor.postalAddresses);

    GetSolicitor.PostalAddresses(
     [out, callee] ArrayOf<String>* CSolicitor.solicitor.postalAddresses);


   SetSolicitor.EmailAddresses(
     [in] ArrayOf<String> CSolicitor.solicitor.emailAddresses);

    GetSolicitor.EmailAddresses(
     [out, callee] ArrayOf<String>* CSolicitor.solicitor.emailAddresses);


   SetSolicitor.MobilePhone(
     [in] ArrayOf<Int32> CSolicitor.solicitor.mobilePhone);

    GetSolicitor.MobilePhone(
     [out, callee] ArrayOf<Int32>* CSolicitor.solicitor.mobilePhone);


   SetSolicitor.WorkPhone(
     [in] ArrayOf<Int32> CSolicitor.solicitor.workPhone);

    GetSolicitor.WorkPhone(
     [out, callee] ArrayOf<Int32>* CSolicitor.solicitor.workPhone);


   SetSolicitor.ContactedWithDetails(
     [in] ArrayOf<String> CSolicitor.solicitor.contactedWithDetails);

    GetSolicitor.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CSolicitor.solicitor.contactedWithDetails);


   SetSolicitor.PropertyId(
     [in] CProperty.property CSolicitor.solicitor.propertyId);

    GetSolicitor.PropertyId(
     [out] CProperty.property* CSolicitor.solicitor.propertyId);


   SetSolicitor.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CSolicitor.solicitor.docRefIds);

    GetSolicitor.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CSolicitor.solicitor.docRefIds);


   SetSolicitor.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CSolicitor.solicitor.imageRefIds);

    GetSolicitor.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CSolicitor.solicitor.imageRefIds);


   SetSolicitor.BusinessDirectorIds(
     [in] ArrayOf<CAdministration.businessDirector> CSolicitor.solicitor.businessDirectorIds);

    GetSolicitor.BusinessDirectorIds(
     [out, callee] ArrayOf<CAdministration.businessDirector>* CSolicitor.solicitor.businessDirectorIds);


   SetSolicitor.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CSolicitor.solicitor.businessChannelOwnerId);

    GetSolicitor.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CSolicitor.solicitor.businessChannelOwnerId);





   SetSupplier.SupplierId(
     [in] String CSupplier.supplier.supplierId);

    GetSupplier.SupplierId(
     [out] String* CSupplier.supplier.supplierId);


   SetSupplier.ABN(
     [in] String CSupplier.supplier.aBN);

    GetSupplier.ABN(
     [out] String* CSupplier.supplier.aBN);


   SetSupplier.SupplierName(
     [in] String CSupplier.supplier.supplierName);

    GetSupplier.SupplierName(
     [out] String* CSupplier.supplier.supplierName);


   SetSupplier.ContactFirstNameList(
     [in] ArrayOf<String> CSupplier.supplier.contactFirstNameList);

    GetSupplier.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CSupplier.supplier.contactFirstNameList);


   SetSupplier.ContactLastNameList(
     [in] ArrayOf<String> CSupplier.supplier.contactLastNameList);

    GetSupplier.ContactLastNameList(
     [out, callee] ArrayOf<String>* CSupplier.supplier.contactLastNameList);


   SetSupplier.ResidentialAddress(
     [in] String CSupplier.supplier.residentialAddress);

    GetSupplier.ResidentialAddress(
     [out] String* CSupplier.supplier.residentialAddress);


   SetSupplier.PostalAddress(
     [in] String CSupplier.supplier.postalAddress);

    GetSupplier.PostalAddress(
     [out] String* CSupplier.supplier.postalAddress);


   SetSupplier.EmailAddresses(
     [in] ArrayOf<String> CSupplier.supplier.emailAddresses);

    GetSupplier.EmailAddresses(
     [out, callee] ArrayOf<String>* CSupplier.supplier.emailAddresses);


   SetSupplier.MobilePhone(
     [in] ArrayOf<Int32> CSupplier.supplier.mobilePhone);

    GetSupplier.MobilePhone(
     [out, callee] ArrayOf<Int32>* CSupplier.supplier.mobilePhone);


   SetSupplier.WorkPhone(
     [in] ArrayOf<Int32> CSupplier.supplier.workPhone);

    GetSupplier.WorkPhone(
     [out, callee] ArrayOf<Int32>* CSupplier.supplier.workPhone);


   SetSupplier.ContactedWithDetails(
     [in] ArrayOf<String> CSupplier.supplier.contactedWithDetails);

    GetSupplier.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CSupplier.supplier.contactedWithDetails);


   SetSupplier.JobTypeIds(
     [in] ArrayOf<CAdministration.jobType> CSupplier.supplier.jobTypeIds);

    GetSupplier.JobTypeIds(
     [out, callee] ArrayOf<CAdministration.jobType>* CSupplier.supplier.jobTypeIds);


   SetSupplier.ServiceIds(
     [in] ArrayOf<CAdministration.service> CSupplier.supplier.serviceIds);

    GetSupplier.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CSupplier.supplier.serviceIds);


   SetSupplier.SupplierTypeId(
     [in] CSupplier.supplierType CSupplier.supplier.supplierTypeId);

    GetSupplier.SupplierTypeId(
     [out] CSupplier.supplierType* CSupplier.supplier.supplierTypeId);


   SetSupplier.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CSupplier.supplier.docRefIds);

    GetSupplier.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CSupplier.supplier.docRefIds);


   SetSupplier.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CSupplier.supplier.imageRefIds);

    GetSupplier.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CSupplier.supplier.imageRefIds);


   SetSupplier.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CSupplier.supplier.businessChannelOwnerId);

    GetSupplier.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CSupplier.supplier.businessChannelOwnerId);


   SetSupplierType.SupplierTypeId(
     [in] String CSupplier.supplierType.supplierTypeId);

    GetSupplierType.SupplierTypeId(
     [out] String* CSupplier.supplierType.supplierTypeId);


   SetSupplierType.Description(
     [in] String CSupplier.supplierType.description);

    GetSupplierType.Description(
     [out] String* CSupplier.supplierType.description);


   SetSupplierType.SuppTypeName(
     [in] String CSupplier.supplierType.suppTypeName);

    GetSupplierType.SuppTypeName(
     [out] String* CSupplier.supplierType.suppTypeName);


   SetSupplierType.ServiceIds(
     [in] ArrayOf<CAdministration.service> CSupplier.supplierType.serviceIds);

    GetSupplierType.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CSupplier.supplierType.serviceIds);


   SetSupplierType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CSupplier.supplierType.businessChannelOwnerId);

    GetSupplierType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CSupplier.supplierType.businessChannelOwnerId);


   SetSupplierType.BranchId(
     [in] CAdministration.branch CSupplier.supplierType.branchId);

    GetSupplierType.BranchId(
     [out] CAdministration.branch* CSupplier.supplierType.branchId);


   SetSupplierType.DeptId(
     [in] CAdministration.department CSupplier.supplierType.deptId);

    GetSupplierType.DeptId(
     [out] CAdministration.department* CSupplier.supplierType.deptId);


   SetSupplierType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CSupplier.supplierType.docRefIds);

    GetSupplierType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CSupplier.supplierType.docRefIds);


   SetSupplierType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CSupplier.supplierType.imageRefIds);

    GetSupplierType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CSupplier.supplierType.imageRefIds);


   SetSupplierType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CSupplier.supplierType.videoRefIds);

    GetSupplierType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CSupplier.supplierType.videoRefIds);


   SetSuperannuationFund.InsureFundId(
     [in] String CSupplier.superannuationFund.superFundId);

    GetSuperannuationFund.InsureFundId(
     [out] String* CSupplier.superannuationFund.superFundId);


   SetSuperannuationFund.SuperannuationCompanyName(
     [in] String CSupplier.superannuationFund.SuperannuationCompanyName);

    GetSuperannuationFund.SuperannuationCompanyName(
     [out] String* CSupplier.superannuationFund.SuperannuationCompanyName);


   SetSuperannuationFund.LinkedToThisSupplierId(
     [in] String CSupplier.superannuationFund.linkedToThisSupplierId);

    GetSuperannuationFund.LinkedToThisSupplierId(
     [out] String* CSupplier.superannuationFund.linkedToThisSupplierId);


   SetSuperannuationFund.ContactFirstNameList(
     [in] ArrayOf<String> CSupplier.superannuationFund.contactFirstNameList);

    GetSuperannuationFund.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CSupplier.superannuationFund.contactFirstNameList);


   SetSuperannuationFund.ContactLastNameList(
     [in] ArrayOf<String> CSupplier.superannuationFund.contactLastNameList);

    GetSuperannuationFund.ContactLastNameList(
     [out, callee] ArrayOf<String>* CSupplier.superannuationFund.contactLastNameList);


   SetSuperannuationFund.EmailAddresses(
     [in] ArrayOf<String> CSupplier.superannuationFund.emailAddresses);

    GetSuperannuationFund.EmailAddresses(
     [out, callee] ArrayOf<String>* CSupplier.superannuationFund.emailAddresses);


   SetSuperannuationFund.MobilePhone(
     [in] ArrayOf<Int32> CSupplier.superannuationFund.mobilePhone);

    GetSuperannuationFund.MobilePhone(
     [out, callee] ArrayOf<Int32>* CSupplier.superannuationFund.mobilePhone);


   SetSuperannuationFund.WorkPhone(
     [in] ArrayOf<Int32> CSupplier.superannuationFund.workPhone);

    GetSuperannuationFund.WorkPhone(
     [out, callee] ArrayOf<Int32>* CSupplier.superannuationFund.workPhone);


   SetSuperannuationFund.ABN(
     [in] String CSupplier.superannuationFund.aBN);

    GetSuperannuationFund.ABN(
     [out] String* CSupplier.superannuationFund.aBN);


   SetSuperannuationFund.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CSupplier.superannuationFund.docRefIds);

    GetSuperannuationFund.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CSupplier.superannuationFund.docRefIds);


   SetSuperannuationFund.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CSupplier.superannuationFund.imageRefIds);

    GetSuperannuationFund.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CSupplier.superannuationFund.imageRefIds);


   SetSuperannuationFund.SupplierId(
     [in] CSupplier.supplier CSupplier.superannuationFund.supplierId);

    GetSuperannuationFund.SupplierId(
     [out] CSupplier.supplier* CSupplier.superannuationFund.supplierId);


   SetSuperannuationFund.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CSupplier.superannuationFund.businessChannelOwnerId);

    GetSuperannuationFund.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CSupplier.superannuationFund.businessChannelOwnerId);


   SetInsuranceFund.InsureFundId(
     [in] String CSupplier.insuranceFund.insureFundId);

    GetInsuranceFund.InsureFundId(
     [out] String* CSupplier.insuranceFund.insureFundId);


   SetInsuranceFund.InsuranceCompanyName(
     [in] String CSupplier.insuranceFund.insuranceCompanyName);

    GetInsuranceFund.InsuranceCompanyName(
     [out] String* CSupplier.insuranceFund.insuranceCompanyName);


   SetInsuranceFund.LinkedToThisSupplierId(
     [in] String CSupplier.insuranceFund.linkedToThisSupplierId);

    GetInsuranceFund.LinkedToThisSupplierId(
     [out] String* CSupplier.insuranceFund.linkedToThisSupplierId);


   SetInsuranceFund.ContactFirstNameList(
     [in] ArrayOf<String> CSupplier.insuranceFund.contactFirstNameList);

    GetInsuranceFund.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CSupplier.insuranceFund.contactFirstNameList);


   SetInsuranceFund.ContactLastNameList(
     [in] ArrayOf<String> CSupplier.insuranceFund.contactLastNameList);

    GetInsuranceFund.ContactLastNameList(
     [out, callee] ArrayOf<String>* CSupplier.insuranceFund.contactLastNameList);


   SetInsuranceFund.EmailAddresses(
     [in] ArrayOf<String> CSupplier.insuranceFund.emailAddresses);

    GetInsuranceFund.EmailAddresses(
     [out, callee] ArrayOf<String>* CSupplier.insuranceFund.emailAddresses);


   SetInsuranceFund.MobilePhone(
     [in] ArrayOf<Int32> CSupplier.insuranceFund.mobilePhone);

    GetInsuranceFund.MobilePhone(
     [out, callee] ArrayOf<Int32>* CSupplier.insuranceFund.mobilePhone);


   SetInsuranceFund.WorkPhone(
     [in] ArrayOf<Int32> CSupplier.insuranceFund.workPhone);

    GetInsuranceFund.WorkPhone(
     [out, callee] ArrayOf<Int32>* CSupplier.insuranceFund.workPhone);


   SetInsuranceFund.ABN(
     [in] String CSupplier.insuranceFund.aBN);

    GetInsuranceFund.ABN(
     [out] String* CSupplier.insuranceFund.aBN);


   SetInsuranceFund.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CSupplier.insuranceFund.docRefIds);

    GetInsuranceFund.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CSupplier.insuranceFund.docRefIds);


   SetInsuranceFund.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CSupplier.insuranceFund.imageRefIds);

    GetInsuranceFund.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CSupplier.insuranceFund.imageRefIds);


   SetInsuranceFund.SupplierId(
     [in] CSupplier.supplier CSupplier.insuranceFund.supplierId);

    GetInsuranceFund.SupplierId(
     [out] CSupplier.supplier* CSupplier.insuranceFund.supplierId);


   SetInsuranceFund.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CSupplier.insuranceFund.businessChannelOwnerId);

    GetInsuranceFund.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CSupplier.insuranceFund.businessChannelOwnerId);


   SetDistributor.DistributorId(
     [in] String CSupplier.distributor.distributorId);

    GetDistributor.DistributorId(
     [out] String* CSupplier.distributor.distributorId);


   SetDistributor.DistributorName(
     [in] String CSupplier.distributor.distributorName);

    GetDistributor.DistributorName(
     [out] String* CSupplier.distributor.distributorName);


   SetDistributor.ABN(
     [in] String CSupplier.distributor.aBN);

    GetDistributor.ABN(
     [out] String* CSupplier.distributor.aBN);


   SetDistributor.ContactFirstNameList(
     [in] ArrayOf<String> CSupplier.distributor.contactFirstNameList);

    GetDistributor.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CSupplier.distributor.contactFirstNameList);


   SetDistributor.ContactLastNameList(
     [in] ArrayOf<String> CSupplier.distributor.contactLastNameList);

    GetDistributor.ContactLastNameList(
     [out, callee] ArrayOf<String>* CSupplier.distributor.contactLastNameList);


   SetDistributor.StreetAddress(
     [in] String CSupplier.distributor.streetAddress);

    GetDistributor.StreetAddress(
     [out] String* CSupplier.distributor.streetAddress);


   SetDistributor.PostalAddress(
     [in] String CSupplier.distributor.postalAddress);

    GetDistributor.PostalAddress(
     [out] String* CSupplier.distributor.postalAddress);


   SetDistributor.EmailAddresses(
     [in] ArrayOf<String> CSupplier.distributor.emailAddresses);

    GetDistributor.EmailAddresses(
     [out, callee] ArrayOf<String>* CSupplier.distributor.emailAddresses);


   SetDistributor.WebAddress(
     [in] String CSupplier.distributor.webAddress);

    GetDistributor.WebAddress(
     [out] String* CSupplier.distributor.webAddress);


   SetDistributor.MobilePhone(
     [in] ArrayOf<Int32> CSupplier.distributor.mobilePhone);

    GetDistributor.MobilePhone(
     [out, callee] ArrayOf<Int32>* CSupplier.distributor.mobilePhone);


   SetDistributor.WorkPhone(
     [in] ArrayOf<Int32> CSupplier.distributor.workPhone);

    GetDistributor.WorkPhone(
     [out, callee] ArrayOf<Int32>* CSupplier.distributor.workPhone);


   SetDistributor.ContactedWithDetails(
     [in] ArrayOf<String> CSupplier.distributor.contactedWithDetails);

    GetDistributor.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CSupplier.distributor.contactedWithDetails);


   SetService.ServiceId(
     [in] String CAdministration.service.serviceId);

    GetService.ServiceId(
     [out] String* CAdministration.service.serviceId);


   SetService.ServiceName(
     [in] String CAdministration.service.serviceName);

    GetService.ServiceName(
     [out] String* CAdministration.service.serviceName);


   SetService.Description(
     [in] String CAdministration.service.description);

    GetService.Description(
     [out] String* CAdministration.service.description);


   SetService.ServiceUnitsSupplied(
     [in] Double CAdministration.service.serviceUnitsSupplied);

    GetService.ServiceUnitsSupplied(
     [out] Double* CAdministration.service.serviceUnitsSupplied);


   SetService.PricingUnits(
     [in] String CAdministration.service.pricingUnits);

    GetService.PricingUnits(
     [out] String* CAdministration.service.pricingUnits);


   SetService.PriceRatePerUnit(
     [in] Double CAdministration.service.priceRatePerUnit);

    GetService.PriceRatePerUnit(
     [out] Double* CAdministration.service.priceRatePerUnit);


   SetService.ItemIdsSupplied(
     [in] ArrayOf<String> CAdministration.service.itemIdsSupplied);

    GetService.ItemIdsSupplied(
     [out, callee] ArrayOf<String>* CAdministration.service.itemIdsSupplied);


   SetService.ItemQuantities(
     [in] ArrayOf<Double> CAdministration.service.itemQuantities);

    GetService.ItemQuantities(
     [out, callee] ArrayOf<Double>* CAdministration.service.itemQuantities);


   SetService.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.service.employeeIds);

    GetService.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.service.employeeIds);


   SetService.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.service.supplierIds);

    GetService.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.service.supplierIds);


   SetService.ServiceTypeId(
     [in] CAdministration.serviceType CAdministration.service.serviceTypeId);

    GetService.ServiceTypeId(
     [out] CAdministration.serviceType* CAdministration.service.serviceTypeId);


   SetService.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.service.docRefs);

    GetService.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.service.docRefs);


   SetService.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.service.imageRefs);

    GetService.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.service.imageRefs);


   SetService.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.service.audioRefIds);

    GetService.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.service.audioRefIds);


   SetService.CustomerId(
     [in] CCustomer.customer CAdministration.service.customerId);

    GetService.CustomerId(
     [out] CCustomer.customer* CAdministration.service.customerId);


   SetService.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.service.businessChannelOwnerId);

    GetService.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.service.businessChannelOwnerId);


   SetServiceType.ServiceTypeId(
     [in] String CAdministration.serviceType.serviceTypeId);

    GetServiceType.ServiceTypeId(
     [out] String* CAdministration.serviceType.serviceTypeId);


   SetServiceType.ServiceName(
     [in] String CAdministration.serviceType.serviceName);

    GetServiceType.ServiceName(
     [out] String* CAdministration.serviceType.serviceName);


   SetServiceType.Description(
     [in] String CAdministration.serviceType.description);

    GetServiceType.Description(
     [out] String* CAdministration.serviceType.description);


   SetServiceType.PriceRateUnits(
     [in] String CAdministration.serviceType.priceRateUnits);

    GetServiceType.PriceRateUnits(
     [out] String* CAdministration.serviceType.priceRateUnits);


   SetServiceType.PriceRate(
     [in] Double CAdministration.serviceType.priceRate);

    GetServiceType.PriceRate(
     [out] Double* CAdministration.serviceType.priceRate);


   SetServiceType.ProviderRoleIdsWithinEnterprise(
     [in] ArrayOf<CAdministration.role> CAdministration.serviceType.providerRoleIdsWithinEnterprise);

    GetServiceType.ProviderRoleIdsWithinEnterprise(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.serviceType.providerRoleIdsWithinEnterprise);


   SetServiceType.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.serviceType.branchIds);

    GetServiceType.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.serviceType.branchIds);


   SetServiceType.DeptIds(
     [in] ArrayOf<CAdministration.department> CAdministration.serviceType.deptIds);

    GetServiceType.DeptIds(
     [out, callee] ArrayOf<CAdministration.department>* CAdministration.serviceType.deptIds);


   SetServiceType.ExternalProvidersIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.serviceType.externalProvidersIds);

    GetServiceType.ExternalProvidersIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.serviceType.externalProvidersIds);


   SetServiceType.SupplierTypeIds(
     [in] ArrayOf<CSupplier.supplierType> CAdministration.serviceType.supplierTypeIds);

    GetServiceType.SupplierTypeIds(
     [out, callee] ArrayOf<CSupplier.supplierType>* CAdministration.serviceType.supplierTypeIds);


   SetServiceType.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CAdministration.serviceType.itemTypeIds);

    GetServiceType.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CAdministration.serviceType.itemTypeIds);


   SetServiceType.JobTypeIds(
     [in] ArrayOf<CAdministration.jobType> CAdministration.serviceType.jobTypeIds);

    GetServiceType.JobTypeIds(
     [out, callee] ArrayOf<CAdministration.jobType>* CAdministration.serviceType.jobTypeIds);


   SetServiceType.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.serviceType.docRefs);

    GetServiceType.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.serviceType.docRefs);


   SetServiceType.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.serviceType.imageRefs);

    GetServiceType.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.serviceType.imageRefs);


   SetServiceType.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.serviceType.videoRefs);

    GetServiceType.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.serviceType.videoRefs);


   SetServiceType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.serviceType.businessChannelOwnerId);

    GetServiceType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.serviceType.businessChannelOwnerId);


   SetServiceRequest.SRQId(
     [in] String CAdministration.serviceRequest.sRQId);

    GetServiceRequest.SRQId(
     [out] String* CAdministration.serviceRequest.sRQId);


   SetServiceRequest.ServiceSequenceDescription(
     [in] ArrayOf<String> CAdministration.serviceRequest.serviceSequenceDescription);

    GetServiceRequest.ServiceSequenceDescription(
     [out, callee] ArrayOf<String>* CAdministration.serviceRequest.serviceSequenceDescription);


   SetServiceRequest.RequestsAccepted(
     [in] ArrayOf<String> CAdministration.serviceRequest.requestsAccepted);

    GetServiceRequest.RequestsAccepted(
     [out, callee] ArrayOf<String>* CAdministration.serviceRequest.requestsAccepted);


   SetServiceRequest.ItemQuantities(
     [in] ArrayOf<Double> CAdministration.serviceRequest.itemQuantities);

    GetServiceRequest.ItemQuantities(
     [out, callee] ArrayOf<Double>* CAdministration.serviceRequest.itemQuantities);


   SetServiceRequest.ItemUnits(
     [in] ArrayOf<String> CAdministration.serviceRequest.itemUnits);

    GetServiceRequest.ItemUnits(
     [out, callee] ArrayOf<String>* CAdministration.serviceRequest.itemUnits);


   SetServiceRequest.DueDates(
     [in] ArrayOf<String> CAdministration.serviceRequest.dueDates);

    GetServiceRequest.DueDates(
     [out, callee] ArrayOf<String>* CAdministration.serviceRequest.dueDates);


   SetServiceRequest.RequestByStaffIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.serviceRequest.requestByStaffIds);

    GetServiceRequest.RequestByStaffIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.serviceRequest.requestByStaffIds);


   SetServiceRequest.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.serviceRequest.docRefIds);

    GetServiceRequest.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.serviceRequest.docRefIds);


   SetServiceRequest.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.serviceRequest.imageRefIds);

    GetServiceRequest.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.serviceRequest.imageRefIds);


   SetServiceRequest.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.serviceRequest.audioRefIds);

    GetServiceRequest.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.serviceRequest.audioRefIds);


   SetServiceRequest.BranchIdsInvolved(
     [in] ArrayOf<CAdministration.branch> CAdministration.serviceRequest.branchIdsInvolved);

    GetServiceRequest.BranchIdsInvolved(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.serviceRequest.branchIdsInvolved);


   SetServiceRequest.DeptIdsInvolved(
     [in] ArrayOf<CAdministration.department> CAdministration.serviceRequest.deptIdsInvolved);

    GetServiceRequest.DeptIdsInvolved(
     [out, callee] ArrayOf<CAdministration.department>* CAdministration.serviceRequest.deptIdsInvolved);


   SetServiceRequest.ResponsibleRoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.serviceRequest.responsibleRoleIds);

    GetServiceRequest.ResponsibleRoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.serviceRequest.responsibleRoleIds);


   SetServiceRequest.ResponsibleStaffIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.serviceRequest.responsibleStaffIds);

    GetServiceRequest.ResponsibleStaffIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.serviceRequest.responsibleStaffIds);


   SetServiceRequest.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.serviceRequest.serviceIds);

    GetServiceRequest.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.serviceRequest.serviceIds);


   SetServiceRequest.ServiceTypeIds(
     [in] ArrayOf<CAdministration.serviceType> CAdministration.serviceRequest.serviceTypeIds);

    GetServiceRequest.ServiceTypeIds(
     [out, callee] ArrayOf<CAdministration.serviceType>* CAdministration.serviceRequest.serviceTypeIds);


   SetServiceRequest.ItemTypeIdsRequired(
     [in] ArrayOf<CAdministration.itemType> CAdministration.serviceRequest.itemTypeIdsRequired);

    GetServiceRequest.ItemTypeIdsRequired(
     [out, callee] ArrayOf<CAdministration.itemType>* CAdministration.serviceRequest.itemTypeIdsRequired);


   SetServiceRequest.JobTypeIdsRequired(
     [in] ArrayOf<CAdministration.jobType> CAdministration.serviceRequest.jobTypeIdsRequired);

    GetServiceRequest.JobTypeIdsRequired(
     [out, callee] ArrayOf<CAdministration.jobType>* CAdministration.serviceRequest.jobTypeIdsRequired);


   SetServiceRequest.PropertyIds(
     [in] ArrayOf<CProperty.property> CAdministration.serviceRequest.propertyIds);

    GetServiceRequest.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CAdministration.serviceRequest.propertyIds);


   SetServiceRequest.MasterAssetIds(
     [in] ArrayOf<CFinance.masterAssetRegister> CAdministration.serviceRequest.masterAssetIds);

    GetServiceRequest.MasterAssetIds(
     [out, callee] ArrayOf<CFinance.masterAssetRegister>* CAdministration.serviceRequest.masterAssetIds);


   SetServiceRequest.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.serviceRequest.customerIds);

    GetServiceRequest.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.serviceRequest.customerIds);


   SetServiceRequest.CustomerTypesIds(
     [in] ArrayOf<CCustomer.customerType> CAdministration.serviceRequest.customerTypesIds);

    GetServiceRequest.CustomerTypesIds(
     [out, callee] ArrayOf<CCustomer.customerType>* CAdministration.serviceRequest.customerTypesIds);


   SetServiceRequest.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.serviceRequest.businessChannelOwnerId);

    GetServiceRequest.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.serviceRequest.businessChannelOwnerId);


   SetCorrespondenceLog.CorroId(
     [in] String CAdministration.correspondenceLog.corroId);

    GetCorrespondenceLog.CorroId(
     [out] String* CAdministration.correspondenceLog.corroId);


   SetCorrespondenceLog.ParticipantName(
     [in] String CAdministration.correspondenceLog.participantName);

    GetCorrespondenceLog.ParticipantName(
     [out] String* CAdministration.correspondenceLog.participantName);


   SetCorrespondenceLog.ParticipantId(
     [in] String CAdministration.correspondenceLog.participantId);

    GetCorrespondenceLog.ParticipantId(
     [out] String* CAdministration.correspondenceLog.participantId);


   SetCorrespondenceLog.Description(
     [in] String CAdministration.correspondenceLog.description);

    GetCorrespondenceLog.Description(
     [out] String* CAdministration.correspondenceLog.description);


   SetCorrespondenceLog.CorroReceived(
     [in] String CAdministration.correspondenceLog.corroReceived);

    GetCorrespondenceLog.CorroReceived(
     [out] String* CAdministration.correspondenceLog.corroReceived);


   SetCorrespondenceLog.PropertyIds(
     [in] ArrayOf<String> CAdministration.correspondenceLog.propertyIds);

    GetCorrespondenceLog.PropertyIds(
     [out, callee] ArrayOf<String>* CAdministration.correspondenceLog.propertyIds);


   SetCorrespondenceLog.ResponseDocRefs(
     [in] ArrayOf<String> CAdministration.correspondenceLog.responseDocRefs);

    GetCorrespondenceLog.ResponseDocRefs(
     [out, callee] ArrayOf<String>* CAdministration.correspondenceLog.responseDocRefs);


   SetCorrespondenceLog.RepliedWhen(
     [in] String CAdministration.correspondenceLog.repliedWhen);

    GetCorrespondenceLog.RepliedWhen(
     [out] String* CAdministration.correspondenceLog.repliedWhen);


   SetCorrespondenceLog.ResponsibilitiesParticpantsIds(
     [in] ArrayOf<String> CAdministration.correspondenceLog.responsibilitiesParticpantsIds);

    GetCorrespondenceLog.ResponsibilitiesParticpantsIds(
     [out, callee] ArrayOf<String>* CAdministration.correspondenceLog.responsibilitiesParticpantsIds);


   SetCorrespondenceLog.ResponsibilitiesParticpantsNames(
     [in] ArrayOf<String> CAdministration.correspondenceLog.responsibilitiesParticpantsNames);

    GetCorrespondenceLog.ResponsibilitiesParticpantsNames(
     [out, callee] ArrayOf<String>* CAdministration.correspondenceLog.responsibilitiesParticpantsNames);


   SetCorrespondenceLog.RequiredActions(
     [in] ArrayOf<String> CAdministration.correspondenceLog.requiredActions);

    GetCorrespondenceLog.RequiredActions(
     [out, callee] ArrayOf<String>* CAdministration.correspondenceLog.requiredActions);


   SetCorrespondenceLog.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.correspondenceLog.businessChannelOwnerId);

    GetCorrespondenceLog.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.correspondenceLog.businessChannelOwnerId);


   SetCorrespondenceLog.BranchId(
     [in] CAdministration.branch CAdministration.correspondenceLog.branchId);

    GetCorrespondenceLog.BranchId(
     [out] CAdministration.branch* CAdministration.correspondenceLog.branchId);


   SetCorrespondenceLog.DeptId(
     [in] CAdministration.department CAdministration.correspondenceLog.deptId);

    GetCorrespondenceLog.DeptId(
     [out] CAdministration.department* CAdministration.correspondenceLog.deptId);


   SetCorrespondenceLog.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.correspondenceLog.supplierIds);

    GetCorrespondenceLog.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.correspondenceLog.supplierIds);


   SetCorrespondenceLog.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.correspondenceLog.customerIds);

    GetCorrespondenceLog.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.correspondenceLog.customerIds);


   SetCorrespondenceLog.PartnerIds(
     [in] ArrayOf<CStakeholder.partner> CAdministration.correspondenceLog.partnerIds);

    GetCorrespondenceLog.PartnerIds(
     [out, callee] ArrayOf<CStakeholder.partner>* CAdministration.correspondenceLog.partnerIds);


   SetCorrespondenceLog.MediaIds(
     [in] ArrayOf<CStakeholder.media> CAdministration.correspondenceLog.mediaIds);

    GetCorrespondenceLog.MediaIds(
     [out, callee] ArrayOf<CStakeholder.media>* CAdministration.correspondenceLog.mediaIds);


   SetCorrespondenceLog.CommunityIds(
     [in] ArrayOf<CStakeholder.community> CAdministration.correspondenceLog.communityIds);

    GetCorrespondenceLog.CommunityIds(
     [out, callee] ArrayOf<CStakeholder.community>* CAdministration.correspondenceLog.communityIds);


   SetCorrespondenceLog.BankIds(
     [in] ArrayOf<CFinance.bank> CAdministration.correspondenceLog.bankIds);

    GetCorrespondenceLog.BankIds(
     [out, callee] ArrayOf<CFinance.bank>* CAdministration.correspondenceLog.bankIds);


   SetCorrespondenceLog.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CAdministration.correspondenceLog.propertyOwnerIds);

    GetCorrespondenceLog.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CAdministration.correspondenceLog.propertyOwnerIds);


   SetCorrespondenceLog.ApplicantIds(
     [in] ArrayOf<CCustomer.applicant> CAdministration.correspondenceLog.applicantIds);

    GetCorrespondenceLog.ApplicantIds(
     [out, callee] ArrayOf<CCustomer.applicant>* CAdministration.correspondenceLog.applicantIds);


   SetCorrespondenceLog.TenancyIds(
     [in] ArrayOf<CProperty.tenant> CAdministration.correspondenceLog.tenancyIds);

    GetCorrespondenceLog.TenancyIds(
     [out, callee] ArrayOf<CProperty.tenant>* CAdministration.correspondenceLog.tenancyIds);


   SetCorrespondenceLog.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.correspondenceLog.employeeIds);

    GetCorrespondenceLog.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.correspondenceLog.employeeIds);


   SetCorrespondenceLog.SuperFundIds(
     [in] ArrayOf<CSupplier.superannuationFund> CAdministration.correspondenceLog.superFundIds);

    GetCorrespondenceLog.SuperFundIds(
     [out, callee] ArrayOf<CSupplier.superannuationFund>* CAdministration.correspondenceLog.superFundIds);


   SetCorrespondenceLog.SolicitorIds(
     [in] ArrayOf<CSolicitor.solicitor> CAdministration.correspondenceLog.solicitorIds);

    GetCorrespondenceLog.SolicitorIds(
     [out, callee] ArrayOf<CSolicitor.solicitor>* CAdministration.correspondenceLog.solicitorIds);


   SetCorrespondenceLog.AgentIds(
     [in] ArrayOf<CStakeholder.agent> CAdministration.correspondenceLog.agentIds);

    GetCorrespondenceLog.AgentIds(
     [out, callee] ArrayOf<CStakeholder.agent>* CAdministration.correspondenceLog.agentIds);


   SetCorrespondenceLog.NonGovStakeholderIds(
     [in] ArrayOf<CStakeholder.nonGovStakeholder> CAdministration.correspondenceLog.nonGovStakeholderIds);

    GetCorrespondenceLog.NonGovStakeholderIds(
     [out] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.correspondenceLog.nonGovStakeholderIds);


   SetCorrespondenceLog.GovStakeholderIds(
     [in] ArrayOf<CStakeholder.govStakeholder> CAdministration.correspondenceLog.govStakeholderIds);

    GetCorrespondenceLog.GovStakeholderIds(
     [out] ArrayOf<CStakeholder.govStakeholder>* CAdministration.correspondenceLog.govStakeholderIds);


   SetCorrespondenceLog.CentrelinkId(
     [in] CFinance.centrelink CAdministration.correspondenceLog.centrelinkId);

    GetCorrespondenceLog.CentrelinkId(
     [out] CFinance.centrelink* CAdministration.correspondenceLog.centrelinkId);


   SetCorrespondenceLog.StateLAHAuthorityId(
     [in] CStakeholder.stateLAHAuthority CAdministration.correspondenceLog.stateLAHAuthorityId);

    GetCorrespondenceLog.StateLAHAuthorityId(
     [out] CStakeholder.stateLAHAuthority* CAdministration.correspondenceLog.stateLAHAuthorityId);


   SetCorrespondenceLog.StatePublicHousingAuthorityId(
     [in] CStakeholder.statePublicHousingAuthority CAdministration.correspondenceLog.statePublicHousingAuthorityId);

    GetCorrespondenceLog.StatePublicHousingAuthorityId(
     [out] CStakeholder.statePublicHousingAuthority* CAdministration.correspondenceLog.statePublicHousingAuthorityId);


   SetCorrespondenceLog.CommunityHousingRegulatorId(
     [in] CRegulator.communityHousingRegulator CAdministration.correspondenceLog.communityHousingRegulatorId);

    GetCorrespondenceLog.CommunityHousingRegulatorId(
     [out] CRegulator.communityHousingRegulator* CAdministration.correspondenceLog.communityHousingRegulatorId);


   SetCorrespondenceLog.ATOId(
     [in] CRegulator.aTO CAdministration.correspondenceLog.aTOId);

    GetCorrespondenceLog.ATOId(
     [out] CRegulator.aTO* CAdministration.correspondenceLog.aTOId);


   SetCorrespondenceLog.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.correspondenceLog.natRegId);

    GetCorrespondenceLog.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.correspondenceLog.natRegId);


   SetCorrespondenceLog.TribunalId(
     [in] CRegulator.nCAT CAdministration.correspondenceLog.tribunalId);

    GetCorrespondenceLog.TribunalId(
     [out] CRegulator.nCAT* CAdministration.correspondenceLog.tribunalId);


   SetCorrespondenceLog.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.correspondenceLog.docRefs);

    GetCorrespondenceLog.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.correspondenceLog.docRefs);


   SetCorrespondenceLog.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.correspondenceLog.imageRefs);

    GetCorrespondenceLog.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.correspondenceLog.imageRefs);


   SetCorrespondenceLog.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.correspondenceLog.audioRefIds);

    GetCorrespondenceLog.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.correspondenceLog.audioRefIds);


   SetCorrespondenceLog.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.correspondenceLog.videoRefs);

    GetCorrespondenceLog.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.correspondenceLog.videoRefs);


   SetAdvertisingTemplatesPlans.AdvertDesignId(
     [in] String CAdministration.advertisingTemplatesPlans.advertDesignId);

    GetAdvertisingTemplatesPlans.AdvertDesignId(
     [out] String* CAdministration.advertisingTemplatesPlans.advertDesignId);


   SetAdvertisingTemplatesPlans.AdvertDesignName(
     [in] String CAdministration.advertisingTemplatesPlans.advertDesignName);

    GetAdvertisingTemplatesPlans.AdvertDesignName(
     [out] String* CAdministration.advertisingTemplatesPlans.advertDesignName);


   SetAdvertisingTemplatesPlans.AdvertisingMedium(
     [in] CHelper.advertisingMedium CAdministration.advertisingTemplatesPlans.AdvertisingMedium);

    GetAdvertisingTemplatesPlans.AdvertisingMedium(
     [out] CHelper.advertisingMedium* CAdministration.advertisingTemplatesPlans.AdvertisingMedium);


   SetAdvertisingTemplatesPlans.AccountsReceivableIds(
     [in] ArrayOf<String> CAdministration.advertisingTemplatesPlans.accountsReceivableIds);

    GetAdvertisingTemplatesPlans.AccountsReceivableIds(
     [out, callee] ArrayOf<String>* CAdministration.advertisingTemplatesPlans.accountsReceivableIds);


   SetAdvertisingTemplatesPlans.AccountsPayableIds(
     [in] ArrayOf<String> CAdministration.advertisingTemplatesPlans.accountsPayableIds);

    GetAdvertisingTemplatesPlans.AccountsPayableIds(
     [out, callee] ArrayOf<String>* CAdministration.advertisingTemplatesPlans.accountsPayableIds);


   SetAdvertisingTemplatesPlans.BudgetedAmount(
     [in] Double CAdministration.advertisingTemplatesPlans.budgetedAmount);

    GetAdvertisingTemplatesPlans.BudgetedAmount(
     [out] Double* CAdministration.advertisingTemplatesPlans.budgetedAmount);


   SetAdvertisingTemplatesPlans.DocRefsAdvertisingTemplatesPlans(
     [in] ArrayOf<String> CAdministration.advertisingTemplatesPlans.docRefsAdvertisingTemplatesPlans);

    GetAdvertisingTemplatesPlans.DocRefsAdvertisingTemplatesPlans(
     [out, callee] ArrayOf<String>* CAdministration.advertisingTemplatesPlans.docRefsAdvertisingTemplatesPlans);


   SetAdvertisingTemplatesPlans.RunDateTimes(
     [in] ArrayOf<String> CAdministration.advertisingTemplatesPlans.runDateTimes);

    GetAdvertisingTemplatesPlans.RunDateTimes(
     [out, callee] ArrayOf<String>* CAdministration.advertisingTemplatesPlans.runDateTimes);


   SetAdvertisingTemplatesPlans.PropertyId(
     [in] CProperty.property CAdministration.advertisingTemplatesPlans.propertyId);

    GetAdvertisingTemplatesPlans.PropertyId(
     [out] CProperty.property* CAdministration.advertisingTemplatesPlans.propertyId);


   SetAdvertisingTemplatesPlans.PropertyOwners(
     [in] ArrayOf<CProperty.propertyOwner> CAdministration.advertisingTemplatesPlans.propertyOwners);

    GetAdvertisingTemplatesPlans.PropertyOwners(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CAdministration.advertisingTemplatesPlans.propertyOwners);


   SetAdvertisingTemplatesPlans.AdvertScheduleId(
     [in] CProperty.advertisingBudgetSchedule CAdministration.advertisingTemplatesPlans.advertScheduleId);

    GetAdvertisingTemplatesPlans.AdvertScheduleId(
     [out] CProperty.advertisingBudgetSchedule* CAdministration.advertisingTemplatesPlans.advertScheduleId);


   SetAdvertisingTemplatesPlans.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.advertisingTemplatesPlans.businessChannelOwnerId);

    GetAdvertisingTemplatesPlans.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.advertisingTemplatesPlans.businessChannelOwnerId);


   SetAdvertisingTemplatesPlans.BranchId(
     [in] CAdministration.branch CAdministration.advertisingTemplatesPlans.branchId);

    GetAdvertisingTemplatesPlans.BranchId(
     [out] CAdministration.branch* CAdministration.advertisingTemplatesPlans.branchId);


   SetAdvertisingTemplatesPlans.DeptId(
     [in] CAdministration.department CAdministration.advertisingTemplatesPlans.deptId);

    GetAdvertisingTemplatesPlans.DeptId(
     [out] CAdministration.department* CAdministration.advertisingTemplatesPlans.deptId);


   SetBranch.BranchId(
     [in] String CAdministration.branch.branchId);

    GetBranch.BranchId(
     [out] String* CAdministration.branch.branchId);


   SetBranch.BranchName(
     [in] String CAdministration.branch.branchName);

    GetBranch.BranchName(
     [out] String* CAdministration.branch.branchName);


   SetBranch.BranchAddressLine1(
     [in] String CAdministration.branch.branchAddressLine1);

    GetBranch.BranchAddressLine1(
     [out] String* CAdministration.branch.branchAddressLine1);


   SetBranch.BranchAddressLine2(
     [in] String CAdministration.branch.branchAddressLine2);

    GetBranch.BranchAddressLine2(
     [out] String* CAdministration.branch.branchAddressLine2);


   SetBranch.BranchSuburb(
     [in] String CAdministration.branch.branchSuburb);

    GetBranch.BranchSuburb(
     [out] String* CAdministration.branch.branchSuburb);


   SetBranch.BranchPostcode(
     [in] String CAdministration.branch.branchPostcode);

    GetBranch.BranchPostcode(
     [out] String* CAdministration.branch.branchPostcode);


   SetBranch.BranchPhone(
     [in] String CAdministration.branch.branchPhone);

    GetBranch.BranchPhone(
     [out] String* CAdministration.branch.branchPhone);


   SetBranch.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.branch.roleIds);

    GetBranch.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.branch.roleIds);


   SetBranch.DeptIds(
     [in] ArrayOf<CAdministration.department> CAdministration.branch.deptIds);

    GetBranch.DeptIds(
     [out, callee] ArrayOf<CAdministration.department>* CAdministration.branch.deptIds);


   SetBranch.SubDeptIds(
     [in] ArrayOf<CAdministration.subdepartment> CAdministration.branch.subDeptIds);

    GetBranch.SubDeptIds(
     [out, callee] ArrayOf<CAdministration.subdepartment>* CAdministration.branch.subDeptIds);


   SetBranch.SubDeptLevel2Ids(
     [in] ArrayOf<CAdministration.subdepartmentLevel2> CAdministration.branch.subDeptLevel2Ids);

    GetBranch.SubDeptLevel2Ids(
     [out, callee] ArrayOf<CAdministration.subdepartmentLevel2>* CAdministration.branch.subDeptLevel2Ids);


   SetBranch.SubDeptLevel3Ids(
     [in] ArrayOf<CAdministration.subdepartmentLevel3> CAdministration.branch.subDeptLevel3Ids);

    GetBranch.SubDeptLevel3Ids(
     [out, callee] ArrayOf<CAdministration.subdepartmentLevel3>* CAdministration.branch.subDeptLevel3Ids);


   SetBranch.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.branch.businessChannelOwnerId);

    GetBranch.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.branch.businessChannelOwnerId);


   SetBranch.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.branch.docRefs);

    GetBranch.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.branch.docRefs);


   SetBranch.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.branch.imageRefs);

    GetBranch.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.branch.imageRefs);


   SetBranch.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.branch.audioRefIds);

    GetBranch.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.branch.audioRefIds);


   SetBranch.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.branch.videoRefs);

    GetBranch.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.branch.videoRefs);





   SetDepartmentMap.DeptMapId(
     [in] String CAdministration.departmentMap.deptMapId);

    GetDepartmentMap.DeptMapId(
     [out] String* CAdministration.departmentMap.deptMapId);


   SetDepartmentMap.Description(
     [in] String CAdministration.departmentMap.description);

    GetDepartmentMap.Description(
     [out] String* CAdministration.departmentMap.description);


   SetDepartmentMap.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.departmentMap.businessChannelOwnerId);

    GetDepartmentMap.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.departmentMap.businessChannelOwnerId);


   SetDepartmentMap.DepartmentId(
     [in] CAdministration.department CAdministration.departmentMap.departmentId);

    GetDepartmentMap.DepartmentId(
     [out] CAdministration.department* CAdministration.departmentMap.departmentId);


   SetDepartmentMap.SubDeptId(
     [in] CAdministration.subdepartment CAdministration.departmentMap.subDeptId);

    GetDepartmentMap.SubDeptId(
     [out] CAdministration.subdepartment* CAdministration.departmentMap.subDeptId);


   SetDepartmentMap.SubDeptLevel2Id(
     [in] CAdministration.subdepartmentLevel2 CAdministration.departmentMap.subDeptLevel2Id);

    GetDepartmentMap.SubDeptLevel2Id(
     [out] CAdministration.subdepartmentLevel2* CAdministration.departmentMap.subDeptLevel2Id);


   SetDepartmentMap.SubDeptLevel3Id(
     [in] CAdministration.subdepartmentLevel3 CAdministration.departmentMap.subDeptLevel3Id);

    GetDepartmentMap.SubDeptLevel3Id(
     [out] CAdministration.subdepartmentLevel3* CAdministration.departmentMap.subDeptLevel3Id);


   SetDepartmentMap.HeadsDeptsSubDeptsEmployeeIdsDescending(
     [in] ArrayOf<CAdministration.staff> CAdministration.departmentMap.headsDeptsSubDeptsEmployeeIdsDescending);

    GetDepartmentMap.HeadsDeptsSubDeptsEmployeeIdsDescending(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.departmentMap.headsDeptsSubDeptsEmployeeIdsDescending);


   SetDepartmentMap.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.departmentMap.roleIds);

    GetDepartmentMap.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.departmentMap.roleIds);


   SetDepartmentMap.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.departmentMap.branchIds);

    GetDepartmentMap.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.departmentMap.branchIds);


   SetDepartmentMap.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.departmentMap.docRefs);

    GetDepartmentMap.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.departmentMap.docRefs);


   SetDepartmentMap.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.departmentMap.imageRefs);

    GetDepartmentMap.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.departmentMap.imageRefs);


   SetDepartmentMap.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.departmentMap.audioRefIds);

    GetDepartmentMap.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.departmentMap.audioRefIds);


   SetDepartmentMap.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.departmentMap.videoRefs);

    GetDepartmentMap.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.departmentMap.videoRefs);


   SetDepartment.DeptId(
     [in] String CAdministration.department.deptId);

    GetDepartment.DeptId(
     [out] String* CAdministration.department.deptId);


   SetDepartment.DeptName(
     [in] String CAdministration.department.deptName);

    GetDepartment.DeptName(
     [out] String* CAdministration.department.deptName);


   SetDepartment.DeptAddressLine1(
     [in] ArrayOf<String> CAdministration.department.deptAddressLine1);

    GetDepartment.DeptAddressLine1(
     [out, callee] ArrayOf<String>* CAdministration.department.deptAddressLine1);


   SetDepartment.DeptAddressLine2(
     [in] ArrayOf<String> CAdministration.department.deptAddressLine2);

    GetDepartment.DeptAddressLine2(
     [out, callee] ArrayOf<String>* CAdministration.department.deptAddressLine2);


   SetDepartment.BranchSuburb(
     [in] ArrayOf<String> CAdministration.department.branchSuburb);

    GetDepartment.BranchSuburb(
     [out, callee] ArrayOf<String>* CAdministration.department.branchSuburb);


   SetDepartment.BranchPostcode(
     [in] ArrayOf<String> CAdministration.department.branchPostcode);

    GetDepartment.BranchPostcode(
     [out, callee] ArrayOf<String>* CAdministration.department.branchPostcode);


   SetDepartment.BranchPhone(
     [in] ArrayOf<String> CAdministration.department.branchPhone);

    GetDepartment.BranchPhone(
     [out, callee] ArrayOf<String>* CAdministration.department.branchPhone);


   SetDepartment.HeadDeptEmployeeId(
     [in] CAdministration.staff CAdministration.department.headDeptEmployeeId);

    GetDepartment.HeadDeptEmployeeId(
     [out] CAdministration.staff* CAdministration.department.headDeptEmployeeId);


   SetDepartment.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.department.roleIds);

    GetDepartment.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.department.roleIds);


   SetDepartment.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.department.branchIds);

    GetDepartment.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.department.branchIds);


   SetDepartment.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.department.businessChannelOwnerId);

    GetDepartment.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.department.businessChannelOwnerId);


   SetDepartment.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.department.docRefs);

    GetDepartment.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.department.docRefs);


   SetDepartment.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.department.imageRefs);

    GetDepartment.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.department.imageRefs);


   SetDepartment.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.department.audioRefIds);

    GetDepartment.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.department.audioRefIds);


   SetDepartment.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.department.videoRefs);

    GetDepartment.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.department.videoRefs);


   SetSubDepartment.SubDeptId(
     [in] String CAdministration.subdepartment.subDeptId);

    GetSubDepartment.SubDeptId(
     [out] String* CAdministration.subdepartment.subDeptId);


   SetSubDepartment.SubDeptName(
     [in] String CAdministration.subdepartment.subDeptName);

    GetSubDepartment.SubDeptName(
     [out] String* CAdministration.subdepartment.subDeptName);


   SetSubDepartment.SubDeptAddressLine1(
     [in] ArrayOf<String> CAdministration.subdepartment.subDeptAddressLine1);

    GetSubDepartment.SubDeptAddressLine1(
     [out, callee] ArrayOf<String>* CAdministration.subdepartment.subDeptAddressLine1);


   SetSubDepartment.SubDeptAddressLine2(
     [in] ArrayOf<String> CAdministration.subdepartment.subDeptAddressLine2);

    GetSubDepartment.SubDeptAddressLine2(
     [out, callee] ArrayOf<String>* CAdministration.subdepartment.subDeptAddressLine2);


   SetSubDepartment.BranchSuburb(
     [in] ArrayOf<String> CAdministration.subdepartment.branchSuburb);

    GetSubDepartment.BranchSuburb(
     [out, callee] ArrayOf<String>* CAdministration.subdepartment.branchSuburb);


   SetSubDepartment.BranchPostcode(
     [in] ArrayOf<String> CAdministration.subdepartment.branchPostcode);

    GetSubDepartment.BranchPostcode(
     [out, callee] ArrayOf<String>* CAdministration.subdepartment.branchPostcode);


   SetSubDepartment.BranchPhone(
     [in] ArrayOf<String> CAdministration.subdepartment.branchPhone);

    GetSubDepartment.BranchPhone(
     [out, callee] ArrayOf<String>* CAdministration.subdepartment.branchPhone);


   SetSubDepartment.HeadSubDeptEmployeeId(
     [in] CAdministration.staff CAdministration.subdepartment.headSubDeptEmployeeId);

    GetSubDepartment.HeadSubDeptEmployeeId(
     [out] CAdministration.staff* CAdministration.subdepartment.headSubDeptEmployeeId);


   SetSubDepartment.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.subdepartment.roleIds);

    GetSubDepartment.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.subdepartment.roleIds);


   SetSubDepartment.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.subdepartment.branchIds);

    GetSubDepartment.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.subdepartment.branchIds);


   SetSubDepartment.SupDeptId(
     [in] CAdministration.department CAdministration.subdepartment.supDeptId);

    GetSubDepartment.SupDeptId(
     [out] CAdministration.department* CAdministration.subdepartment.supDeptId);


   SetSubDepartment.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.subdepartment.businessChannelOwnerId);

    GetSubDepartment.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.subdepartment.businessChannelOwnerId);


   SetSubDepartment.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.subdepartment.docRefs);

    GetSubDepartment.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.subdepartment.docRefs);


   SetSubDepartment.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.subdepartment.imageRefs);

    GetSubDepartment.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.subdepartment.imageRefs);


   SetSubDepartment.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.subdepartment.audioRefIds);

    GetSubDepartment.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.subdepartment.audioRefIds);


   SetSubDepartment.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.subdepartment.videoRefs);

    GetSubDepartment.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.subdepartment.videoRefs);


   SetSubDepartmentLevel2.SubDeptLevel2Id(
     [in] String CAdministration.subdepartmentLevel2.subDeptLevel2Id);

    GetSubDepartmentLevel2.SubDeptLevel2Id(
     [out] String* CAdministration.subdepartmentLevel2.subDeptLevel2Id);


   SetSubDepartmentLevel2.SubDeptLevel2Name(
     [in] String CAdministration.subdepartmentLevel2.subDeptLevel2Name);

    GetSubDepartmentLevel2.SubDeptLevel2Name(
     [out] String* CAdministration.subdepartmentLevel2.subDeptLevel2Name);


   SetSubDepartmentLevel2.SubDeptLevel2AddressLine1(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel2.subDeptLevel2AddressLine1);

    GetSubDepartmentLevel2.SubDeptLevel2AddressLine1(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel2.subDeptLevel2AddressLine1);


   SetSubDepartmentLevel2.SubDeptLevel2AddressLine2(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel2.subDeptLevel2AddressLine2);

    GetSubDepartmentLevel2.SubDeptLevel2AddressLine2(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel2.subDeptLevel2AddressLine2);


   SetSubDepartmentLevel2.BranchSuburb(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel2.branchSuburb);

    GetSubDepartmentLevel2.BranchSuburb(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel2.branchSuburb);


   SetSubDepartmentLevel2.BranchPostcode(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel2.branchPostcode);

    GetSubDepartmentLevel2.BranchPostcode(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel2.branchPostcode);


   SetSubDepartmentLevel2.BranchPhone(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel2.branchPhone);

    GetSubDepartmentLevel2.BranchPhone(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel2.branchPhone);


   SetSubDepartmentLevel2.HeadLevel2SubDeptEmployeeId(
     [in] CAdministration.staff CAdministration.subdepartmentLevel2.headLevel2SubDeptEmployeeId);

    GetSubDepartmentLevel2.HeadLevel2SubDeptEmployeeId(
     [out] CAdministration.staff* CAdministration.subdepartmentLevel2.headLevel2SubDeptEmployeeId);


   SetSubDepartmentLevel2.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.subdepartmentLevel2.roleIds);

    GetSubDepartmentLevel2.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.subdepartmentLevel2.roleIds);


   SetSubDepartmentLevel2.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.subdepartmentLevel2.branchIds);

    GetSubDepartmentLevel2.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.subdepartmentLevel2.branchIds);


   SetSubDepartmentLevel2.SupSubDeptId(
     [in] CAdministration.subdepartment CAdministration.subdepartmentLevel2.supSubDeptId);

    GetSubDepartmentLevel2.SupSubDeptId(
     [out] CAdministration.subdepartment* CAdministration.subdepartmentLevel2.supSubDeptId);


   SetSubDepartmentLevel2.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.subdepartmentLevel2.businessChannelOwnerId);

    GetSubDepartmentLevel2.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.subdepartmentLevel2.businessChannelOwnerId);


   SetSubDepartmentLevel2.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.subdepartmentLevel2.docRefs);

    GetSubDepartmentLevel2.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.subdepartmentLevel2.docRefs);


   SetSubDepartmentLevel2.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.subdepartmentLevel2.imageRefs);

    GetSubDepartmentLevel2.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.subdepartmentLevel2.imageRefs);


   SetSubDepartmentLevel2.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.subdepartmentLevel2.audioRefIds);

    GetSubDepartmentLevel2.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.subdepartmentLevel2.audioRefIds);


   SetSubDepartmentLevel2.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.subdepartmentLevel2.videoRefs);

    GetSubDepartmentLevel2.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.subdepartmentLevel2.videoRefs);


   SetSubDepartmentLevel3.SubDeptLevel3Id(
     [in] String CAdministration.subdepartmentLevel3.subDeptLevel3Id);

    GetSubDepartmentLevel3.SubDeptLevel3Id(
     [out] String* CAdministration.subdepartmentLevel3.subDeptLevel3Id);


   SetSubDepartmentLevel3.SubDeptLevel3Name(
     [in] String CAdministration.subdepartmentLevel3.subDeptLevel3Name);

    GetSubDepartmentLevel3.SubDeptLevel3Name(
     [out] String* CAdministration.subdepartmentLevel3.subDeptLevel3Name);


   SetSubDepartmentLevel3.SubDeptLevel3AddressLine1(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel3.subDeptLevel3AddressLine1);

    GetSubDepartmentLevel3.SubDeptLevel3AddressLine1(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel3.subDeptLevel3AddressLine1);


   SetSubDepartmentLevel3.SubDeptLevel3AddressLine2(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel3.subDeptLevel3AddressLine2);

    GetSubDepartmentLevel3.SubDeptLevel3AddressLine2(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel3.subDeptLevel3AddressLine2);


   SetSubDepartmentLevel3.BranchSuburb(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel3.branchSuburb);

    GetSubDepartmentLevel3.BranchSuburb(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel3.branchSuburb);


   SetSubDepartmentLevel3.BranchPostcode(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel3.branchPostcode);

    GetSubDepartmentLevel3.BranchPostcode(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel3.branchPostcode);


   SetSubDepartmentLevel3.BranchPhone(
     [in] ArrayOf<String> CAdministration.subdepartmentLevel3.branchPhone);

    GetSubDepartmentLevel3.BranchPhone(
     [out, callee] ArrayOf<String>* CAdministration.subdepartmentLevel3.branchPhone);


   SetSubDepartmentLevel3.HeadLevel2SubDeptEmployeeId(
     [in] CAdministration.staff CAdministration.subdepartmentLevel3.headLevel2SubDeptEmployeeId);

    GetSubDepartmentLevel3.HeadLevel2SubDeptEmployeeId(
     [out] CAdministration.staff* CAdministration.subdepartmentLevel3.headLevel2SubDeptEmployeeId);


   SetSubDepartmentLevel3.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.subdepartmentLevel3.roleIds);

    GetSubDepartmentLevel3.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.subdepartmentLevel3.roleIds);


   SetSubDepartmentLevel3.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.subdepartmentLevel3.branchIds);

    GetSubDepartmentLevel3.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.subdepartmentLevel3.branchIds);


   SetSubDepartmentLevel3.SupSubDeptLevel2Id(
     [in] CAdministration.subdepartmentLevel2 CAdministration.subdepartmentLevel3.supSubDeptLevel2Id);

    GetSubDepartmentLevel3.SupSubDeptLevel2Id(
     [out] CAdministration.subdepartmentLevel2* CAdministration.subdepartmentLevel3.supSubDeptLevel2Id);


   SetSubDepartmentLevel3.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.subdepartmentLevel3.businessChannelOwnerId);

    GetSubDepartmentLevel3.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.subdepartmentLevel3.businessChannelOwnerId);


   SetSubDepartmentLevel3.DocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.subdepartmentLevel3.docRefs);

    GetSubDepartmentLevel3.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.subdepartmentLevel3.docRefs);


   SetSubDepartmentLevel3.ImageRefs(
     [in] ArrayOf<CAdministration.images> CAdministration.subdepartmentLevel3.imageRefs);

    GetSubDepartmentLevel3.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.subdepartmentLevel3.imageRefs);


   SetSubDepartmentLevel3.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.subdepartmentLevel3.audioRefIds);

    GetSubDepartmentLevel3.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.subdepartmentLevel3.audioRefIds);


   SetSubDepartmentLevel3.VideoRefs(
     [in] ArrayOf<CAdministration.video> CAdministration.subdepartmentLevel3.videoRefs);

    GetSubDepartmentLevel3.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.subdepartmentLevel3.videoRefs);


   SetDocuments.DocRefId(
     [in] String CAdministration.documents.docRefId);

    GetDocuments.DocRefId(
     [out] String* CAdministration.documents.docRefId);


   SetDocuments.DocHash(
     [in] String CAdministration.documents.docHash);

    GetDocuments.DocHash(
     [out] String* CAdministration.documents.docHash);


   SetDocuments.MasLedgeFinTxId(
     [in] String CAdministration.documents.masLedgeFinTxId);

    GetDocuments.MasLedgeFinTxId(
     [out] String* CAdministration.documents.masLedgeFinTxId);


   SetDocuments.GenLedgeFinTxId(
     [in] String CAdministration.documents.genLedgeFinTxId);

    GetDocuments.GenLedgeFinTxId(
     [out] String* CAdministration.documents.genLedgeFinTxId);


   SetDocuments.MasLedgeFinTxNum(
     [in] Int32 CAdministration.documents.masLedgeFinTxNum);

    GetDocuments.MasLedgeFinTxNum(
     [out] Int32* CAdministration.documents.masLedgeFinTxNum);


   SetDocuments.GenLedgeFinTxNum(
     [in] Int32 CAdministration.documents.genLedgeFinTxNum);

    GetDocuments.GenLedgeFinTxNum(
     [out] Int32* CAdministration.documents.genLedgeFinTxNum);


   SetDocuments.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.documents.businessChannelOwnerId);

    GetDocuments.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.documents.businessChannelOwnerId);


   SetDocuments.BranchId(
     [in] CAdministration.branch CAdministration.documents.branchId);

    GetDocuments.BranchId(
     [out] CAdministration.branch* CAdministration.documents.branchId);


   SetDocuments.DeptId(
     [in] CAdministration.department CAdministration.documents.deptId);

    GetDocuments.DeptId(
     [out] CAdministration.department* CAdministration.documents.deptId);


   SetDocuments.PropertyId(
     [in] CProperty.property CAdministration.documents.propertyId);

    GetDocuments.PropertyId(
     [out] CProperty.property* CAdministration.documents.propertyId);


   SetDocuments.PropOwners(
     [in] ArrayOf<CProperty.propertyOwner> CAdministration.documents.propOwners);

    GetDocuments.PropOwners(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CAdministration.documents.propOwners);


   SetDocuments.MasterLedgerAssetIds(
     [in] ArrayOf<CFinance.masterAssetRegister> CAdministration.documents.masterLedgerAssetIds);

    GetDocuments.MasterLedgerAssetIds(
     [out, callee] ArrayOf<CFinance.masterAssetRegister>* CAdministration.documents.masterLedgerAssetIds);


   SetDocuments.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.documents.employeeIds);

    GetDocuments.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.documents.employeeIds);


   SetDocuments.TenancyIds(
     [in] ArrayOf<CProperty.tenant> CAdministration.documents.tenancyIds);

    GetDocuments.TenancyIds(
     [out, callee] ArrayOf<CProperty.tenant>* CAdministration.documents.tenancyIds);


   SetDocuments.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.documents.customerIds);

    GetDocuments.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.documents.customerIds);


   SetDocuments.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.documents.supplierIds);

    GetDocuments.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.documents.supplierIds);


   SetDocuments.SolicitorIds(
     [in] ArrayOf<CSolicitor.solicitor> CAdministration.documents.solicitorIds);

    GetDocuments.SolicitorIds(
     [out, callee] ArrayOf<CSolicitor.solicitor>* CAdministration.documents.solicitorIds);


   SetDocuments.AgentIds(
     [in] ArrayOf<CStakeholder.agent> CAdministration.documents.agentIds);

    GetDocuments.AgentIds(
     [out, callee] ArrayOf<CStakeholder.agent>* CAdministration.documents.agentIds);


   SetDocuments.NonGovStakeholderIds(
     [in] ArrayOf<CStakeholder.nonGovStakeholder> CAdministration.documents.nonGovStakeholderIds);

    GetDocuments.NonGovStakeholderIds(
     [out] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.documents.nonGovStakeholderIds);


   SetDocuments.GovStakeholderIds(
     [in] ArrayOf<CStakeholder.govStakeholder> CAdministration.documents.govStakeholderIds);

    GetDocuments.GovStakeholderIds(
     [out] ArrayOf<CStakeholder.govStakeholder>* CAdministration.documents.govStakeholderIds);


   SetDocuments.StateLAHCId(
     [in] CStakeholder.stateLAHAuthority CAdministration.documents.stateLAHCId);

    GetDocuments.StateLAHCId(
     [out] CStakeholder.stateLAHAuthority* CAdministration.documents.stateLAHCId);


   SetDocuments.StatePublicHousingAuthorityId(
     [in] CStakeholder.statePublicHousingAuthority CAdministration.documents.statePublicHousingAuthorityId);

    GetDocuments.StatePublicHousingAuthorityId(
     [out] CStakeholder.statePublicHousingAuthority* CAdministration.documents.statePublicHousingAuthorityId);


   SetDocuments.NCATId(
     [in] CRegulator.nCAT CAdministration.documents.nCATId);

    GetDocuments.NCATId(
     [out] CRegulator.nCAT* CAdministration.documents.nCATId);


   SetDocuments.RentalBondAuthorityId(
     [in] CRegulator.rentalBondAuthority CAdministration.documents.rentalBondAuthorityId);

    GetDocuments.RentalBondAuthorityId(
     [out] CRegulator.rentalBondAuthority* CAdministration.documents.rentalBondAuthorityId);


   SetDocuments.CommunityHousingRegulatorId(
     [in] CRegulator.communityHousingRegulator CAdministration.documents.communityHousingRegulatorId);

    GetDocuments.CommunityHousingRegulatorId(
     [out] CRegulator.communityHousingRegulator* CAdministration.documents.communityHousingRegulatorId);


   SetDocuments.CommunityIds(
     [in] ArrayOf<CStakeholder.community> CAdministration.documents.communityIds);

    GetDocuments.CommunityIds(
     [out, callee] ArrayOf<CStakeholder.community>* CAdministration.documents.communityIds);


   SetDocuments.MediaIds(
     [in] ArrayOf<CStakeholder.media> CAdministration.documents.mediaIds);

    GetDocuments.MediaIds(
     [out, callee] ArrayOf<CStakeholder.media>* CAdministration.documents.mediaIds);


   SetDocuments.PartnerIds(
     [in] ArrayOf<CStakeholder.partner> CAdministration.documents.partnerIds);

    GetDocuments.PartnerIds(
     [out, callee] ArrayOf<CStakeholder.partner>* CAdministration.documents.partnerIds);


   SetDocuments.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.documents.natRegId);

    GetDocuments.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.documents.natRegId);


   SetDocuments.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CAdministration.documents.stateBasedRegId);

    GetDocuments.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CAdministration.documents.stateBasedRegId);


   SetDocuments.PropertyInspectionResId(
     [in] CProperty.propertyInspectionResidential CAdministration.documents.propertyInspectionResId);

    GetDocuments.PropertyInspectionResId(
     [out] CProperty.propertyInspectionResidential* CAdministration.documents.propertyInspectionResId);


   SetDocuments.PropertyInspectionCommercId(
     [in] CProperty.propertyInspectionCommercial CAdministration.documents.propertyInspectionCommercId);

    GetDocuments.PropertyInspectionCommercId(
     [out] CProperty.propertyInspectionCommercial* CAdministration.documents.propertyInspectionCommercId);


   SetDocuments.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.documents.serviceIds);

    GetDocuments.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.documents.serviceIds);


   SetDocuments.ItemIds(
     [in] ArrayOf<CAdministration.item> CAdministration.documents.itemIds);

    GetDocuments.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CAdministration.documents.itemIds);


   SetDocuments.JobIds(
     [in] ArrayOf<CAdministration.job> CAdministration.documents.jobIds);

    GetDocuments.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CAdministration.documents.jobIds);


   SetDocuments.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.documents.docRefIds);

    GetDocuments.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.documents.docRefIds);


   SetDocuments.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.documents.imageRefIds);

    GetDocuments.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.documents.imageRefIds);


   SetDocuments.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.documents.audioRefIds);

    GetDocuments.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.documents.audioRefIds);


   SetDocuments.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.documents.videoRefIds);

    GetDocuments.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.documents.videoRefIds);


   SetImages.ImageRefId(
     [in] String CAdministration.images.imageRefId);

    GetImages.ImageRefId(
     [out] String* CAdministration.images.imageRefId);


   SetImages.ImageHash(
     [in] String CAdministration.images.imageHash);

    GetImages.ImageHash(
     [out] String* CAdministration.images.imageHash);


   SetImages.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.images.businessChannelOwnerId);

    GetImages.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.images.businessChannelOwnerId);


   SetImages.BranchId(
     [in] CAdministration.branch CAdministration.images.branchId);

    GetImages.BranchId(
     [out] CAdministration.branch* CAdministration.images.branchId);


   SetImages.DeptId(
     [in] CAdministration.department CAdministration.images.deptId);

    GetImages.DeptId(
     [out] CAdministration.department* CAdministration.images.deptId);


   SetImages.PropertyId(
     [in] CProperty.property CAdministration.images.propertyId);

    GetImages.PropertyId(
     [out] CProperty.property* CAdministration.images.propertyId);


   SetImages.PropOwners(
     [in] ArrayOf<CProperty.propertyOwner> CAdministration.images.propOwners);

    GetImages.PropOwners(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CAdministration.images.propOwners);


   SetImages.MasterLedgerAssetIds(
     [in] ArrayOf<CFinance.masterAssetRegister> CAdministration.images.masterLedgerAssetIds);

    GetImages.MasterLedgerAssetIds(
     [out, callee] ArrayOf<CFinance.masterAssetRegister>* CAdministration.images.masterLedgerAssetIds);


   SetImages.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.images.employeeIds);

    GetImages.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.images.employeeIds);


   SetImages.TenancyIds(
     [in] ArrayOf<CProperty.tenant> CAdministration.images.tenancyIds);

    GetImages.TenancyIds(
     [out, callee] ArrayOf<CProperty.tenant>* CAdministration.images.tenancyIds);


   SetImages.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.images.customerIds);

    GetImages.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.images.customerIds);


   SetImages.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.images.supplierIds);

    GetImages.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.images.supplierIds);


   SetImages.SolicitorIds(
     [in] ArrayOf<CSolicitor.solicitor> CAdministration.images.solicitorIds);

    GetImages.SolicitorIds(
     [out, callee] ArrayOf<CSolicitor.solicitor>* CAdministration.images.solicitorIds);


   SetImages.AgentIds(
     [in] ArrayOf<CStakeholder.agent> CAdministration.images.agentIds);

    GetImages.AgentIds(
     [out, callee] ArrayOf<CStakeholder.agent>* CAdministration.images.agentIds);


   SetImages.NonGovStakeholderIds(
     [in] ArrayOf<CStakeholder.nonGovStakeholder> CAdministration.images.nonGovStakeholderIds);

    GetImages.NonGovStakeholderIds(
     [out, callee] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.images.nonGovStakeholderIds);


   SetImages.GovStakeholderIds(
     [in] ArrayOf<CStakeholder.govStakeholder> CAdministration.images.govStakeholderIds);

    GetImages.GovStakeholderIds(
     [out, callee] ArrayOf<CStakeholder.govStakeholder>* CAdministration.images.govStakeholderIds);


   SetImages.StateLAHCId(
     [in] CStakeholder.stateLAHAuthority CAdministration.images.stateLAHCId);

    GetImages.StateLAHCId(
     [out] CStakeholder.stateLAHAuthority* CAdministration.images.stateLAHCId);


   SetImages.StatePublicHousingAuthorityId(
     [in] CStakeholder.statePublicHousingAuthority CAdministration.images.statePublicHousingAuthorityId);

    GetImages.StatePublicHousingAuthorityId(
     [out] CStakeholder.statePublicHousingAuthority* CAdministration.images.statePublicHousingAuthorityId);


   SetImages.NCATId(
     [in] CRegulator.nCAT CAdministration.images.nCATId);

    GetImages.NCATId(
     [out] CRegulator.nCAT* CAdministration.images.nCATId);


   SetImages.RentalBondAuthorityId(
     [in] CRegulator.rentalBondAuthority CAdministration.images.rentalBondAuthorityId);

    GetImages.RentalBondAuthorityId(
     [out] CRegulator.rentalBondAuthority* CAdministration.images.rentalBondAuthorityId);


   SetImages.CommunityHousingRegulatorId(
     [in] CRegulator.communityHousingRegulator CAdministration.images.communityHousingRegulatorId);

    GetImages.CommunityHousingRegulatorId(
     [out] CRegulator.communityHousingRegulator* CAdministration.images.communityHousingRegulatorId);


   SetImages.CommunityId(
     [in] CStakeholder.community CAdministration.images.communityId);

    GetImages.CommunityId(
     [out] CStakeholder.community* CAdministration.images.communityId);


   SetImages.MediaId(
     [in] CStakeholder.media CAdministration.images.mediaId);

    GetImages.MediaId(
     [out] CStakeholder.media* CAdministration.images.mediaId);


   SetImages.PartnerId(
     [in] CStakeholder.partner CAdministration.images.partnerId);

    GetImages.PartnerId(
     [out] CStakeholder.partner* CAdministration.images.partnerId);


   SetImages.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.images.natRegId);

    GetImages.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.images.natRegId);


   SetImages.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CAdministration.images.stateBasedRegId);

    GetImages.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CAdministration.images.stateBasedRegId);


   SetImages.PropertyInspectionResId(
     [in] CProperty.propertyInspectionResidential CAdministration.images.propertyInspectionResId);

    GetImages.PropertyInspectionResId(
     [out] CProperty.propertyInspectionResidential* CAdministration.images.propertyInspectionResId);


   SetImages.PropertyInspectionCommercId(
     [in] CProperty.propertyInspectionCommercial CAdministration.images.propertyInspectionCommercId);

    GetImages.PropertyInspectionCommercId(
     [out] CProperty.propertyInspectionCommercial* CAdministration.images.propertyInspectionCommercId);


   SetImages.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.images.serviceIds);

    GetImages.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.images.serviceIds);


   SetImages.ItemIds(
     [in] ArrayOf<CAdministration.item> CAdministration.images.itemIds);

    GetImages.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CAdministration.images.itemIds);


   SetImages.JobIds(
     [in] ArrayOf<CAdministration.job> CAdministration.images.jobIds);

    GetImages.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CAdministration.images.jobIds);


   SetImages.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.images.docRefIds);

    GetImages.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.images.docRefIds);


   SetImages.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.images.imageRefIds);

    GetImages.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.images.imageRefIds);


   SetImages.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.images.audioRefIds);

    GetImages.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.images.audioRefIds);


   SetImages.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.images.videoRefIds);

    GetImages.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.images.videoRefIds);


   SetAudio.AudioRefId(
     [in] String CAdministration.audio.audioRefId);

    GetAudio.AudioRefId(
     [out] String* CAdministration.audio.audioRefId);


   SetAudio.AudioHash(
     [in] String CAdministration.audio.audioHash);

    GetAudio.AudioHash(
     [out] String* CAdministration.audio.audioHash);


   SetAudio.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.audio.businessChannelOwnerId);

    GetAudio.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.audio.businessChannelOwnerId);


   SetAudio.BranchId(
     [in] CAdministration.branch CAdministration.audio.branchId);

    GetAudio.BranchId(
     [out] CAdministration.branch* CAdministration.audio.branchId);


   SetAudio.DeptMapId(
     [in] CAdministration.mapOfdepartments CAdministration.audio.deptMapId);

    GetAudio.DeptMapId(
     [out] CAdministration.mapOfdepartments* CAdministration.audio.deptMapId);


   SetAudio.GenAssetIds(
     [in] ArrayOf<CFinance.masterAssetRegister> CAdministration.audio.genAssetIds);

    GetAudio.GenAssetIds(
     [out, callee] ArrayOf<CFinance.masterAssetRegister>* CAdministration.audio.genAssetIds);


   SetAudio.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.audio.employeeIds);

    GetAudio.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.audio.employeeIds);


   SetAudio.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.audio.customerIds);

    GetAudio.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.audio.customerIds);


   SetAudio.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.audio.supplierIds);

    GetAudio.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.audio.supplierIds);


   SetAudio.SolicitorIds(
     [in] ArrayOf<CSolicitor.solicitor> CAdministration.audio.solicitorIds);

    GetAudio.SolicitorIds(
     [out, callee] ArrayOf<CSolicitor.solicitor>* CAdministration.audio.solicitorIds);


   SetAudio.AgentIds(
     [in] ArrayOf<CStakeholder.agent> CAdministration.audio.agentIds);

    GetAudio.AgentIds(
     [out, callee] ArrayOf<CStakeholder.agent>* CAdministration.audio.agentIds);


   SetAudio.NonGovStakeholderIds(
     [in] ArrayOf<CStakeholder.nonGovStakeholder> CAdministration.audio.nonGovStakeholderIds);

    GetAudio.NonGovStakeholderIds(
     [out] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.audio.nonGovStakeholderIds);


   SetAudio.GovStakeholderIds(
     [in] ArrayOf<CStakeholder.govStakeholder> CAdministration.audio.govStakeholderIds);

    GetAudio.GovStakeholderIds(
     [out] ArrayOf<CStakeholder.govStakeholder>* CAdministration.audio.govStakeholderIds);


   SetAudio.NCATId(
     [in] CRegulator.nCAT CAdministration.audio.nCATId);

    GetAudio.NCATId(
     [out] CRegulator.nCAT* CAdministration.audio.nCATId);


   SetAudio.CommunityId(
     [in] CStakeholder.community CAdministration.audio.communityId);

    GetAudio.CommunityId(
     [out] CStakeholder.community* CAdministration.audio.communityId);


   SetAudio.MediaId(
     [in] CStakeholder.media CAdministration.audio.mediaId);

    GetAudio.MediaId(
     [out] CStakeholder.media* CAdministration.audio.mediaId);


   SetAudio.PartnerId(
     [in] CStakeholder.partner CAdministration.audio.partnerId);

    GetAudio.PartnerId(
     [out] CStakeholder.partner* CAdministration.audio.partnerId);


   SetAudio.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.audio.natRegId);

    GetAudio.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.audio.natRegId);


   SetAudio.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CAdministration.audio.stateBasedRegId);

    GetAudio.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CAdministration.audio.stateBasedRegId);


   SetAudio.AssetInspectionCommercId(
     [in] assetInspectionCommercial CAdministration.audio.assetInspectionCommercId);

    GetAudio.AssetInspectionCommercId(
     [out] assetInspectionCommercial* CAdministration.audio.assetInspectionCommercId);


   SetAudio.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.audio.serviceIds);

    GetAudio.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.audio.serviceIds);


   SetAudio.ItemIds(
     [in] ArrayOf<CAdministration.item> CAdministration.audio.itemIds);

    GetAudio.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CAdministration.audio.itemIds);


   SetAudio.JobIds(
     [in] ArrayOf<CAdministration.job> CAdministration.audio.jobIds);

    GetAudio.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CAdministration.audio.jobIds);


   SetAudio.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.audio.docRefIds);

    GetAudio.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.audio.docRefIds);


   SetAudio.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.audio.imageRefIds);

    GetAudio.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.audio.imageRefIds);


   SetAudio.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.audio.audioRefIds);

    GetAudio.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.audio.audioRefIds);


   SetAudio.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.audio.videoRefIds);

    GetAudio.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.audio.videoRefIds);





   SetVideo.VideoRefId(
     [in] String CAdministration.video.videoRefId);

    GetVideo.VideoRefId(
     [out] String* CAdministration.video.videoRefId);


   SetVideo.VideoHash(
     [in] String CAdministration.video.videoHash);

    GetVideo.VideoHash(
     [out] String* CAdministration.video.videoHash);


   SetVideo.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.video.businessChannelOwnerId);

    GetVideo.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.video.businessChannelOwnerId);


   SetVideo.BranchId(
     [in] CAdministration.branch CAdministration.video.branchId);

    GetVideo.BranchId(
     [out] CAdministration.branch* CAdministration.video.branchId);


   SetVideo.DeptId(
     [in] CAdministration.department CAdministration.video.deptId);

    GetVideo.DeptId(
     [out] CAdministration.department* CAdministration.video.deptId);


   SetVideo.PropertyIds(
     [in] ArrayOf<CProperty.property> CAdministration.video.propertyIds);

    GetVideo.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CAdministration.video.propertyIds);


   SetVideo.PropOwners(
     [in] ArrayOf<CProperty.propertyOwner> CAdministration.video.propOwners);

    GetVideo.PropOwners(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CAdministration.video.propOwners);


   SetVideo.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.video.employeeIds);

    GetVideo.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.video.employeeIds);


   SetVideo.TenancyIds(
     [in] ArrayOf<CProperty.tenant> CAdministration.video.tenancyIds);

    GetVideo.TenancyIds(
     [out, callee] ArrayOf<CProperty.tenant>* CAdministration.video.tenancyIds);


   SetVideo.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.video.customerIds);

    GetVideo.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.video.customerIds);


   SetVideo.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.video.supplierIds);

    GetVideo.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.video.supplierIds);


   SetVideo.SolicitorIds(
     [in] ArrayOf<CSolicitor.solicitor> CAdministration.video.solicitorIds);

    GetVideo.SolicitorIds(
     [out, callee] ArrayOf<CSolicitor.solicitor>* CAdministration.video.solicitorIds);


   SetVideo.AgentIds(
     [in] ArrayOf<CStakeholder.agent> CAdministration.video.agentIds);

    GetVideo.AgentIds(
     [out, callee] ArrayOf<CStakeholder.agent>* CAdministration.video.agentIds);


   SetVideo.NonGovStakeholderIds(
     [in] ArrayOf<CStakeholder.nonGovStakeholder> CAdministration.video.nonGovStakeholderIds);

    GetVideo.NonGovStakeholderIds(
     [out] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.video.nonGovStakeholderIds);


   SetVideo.GovStakeholderIds(
     [in] ArrayOf<CStakeholder.govStakeholder> CAdministration.video.govStakeholderIds);

    GetVideo.GovStakeholderIds(
     [out] ArrayOf<CStakeholder.govStakeholder>* CAdministration.video.govStakeholderIds);


   SetVideo.StateLAHCId(
     [in] CStakeholder.stateLAHAuthority CAdministration.video.stateLAHCId);

    GetVideo.StateLAHCId(
     [out] CStakeholder.stateLAHAuthority* CAdministration.video.stateLAHCId);


   SetVideo.StatePublicHousingAuthorityId(
     [in] CStakeholder.statePublicHousingAuthority CAdministration.video.statePublicHousingAuthorityId);

    GetVideo.StatePublicHousingAuthorityId(
     [out] CStakeholder.statePublicHousingAuthority* CAdministration.video.statePublicHousingAuthorityId);


   SetVideo.NCATId(
     [in] CRegulator.nCAT CAdministration.video.nCATId);

    GetVideo.NCATId(
     [out] CRegulator.nCAT* CAdministration.video.nCATId);


   SetVideo.RentalBondAuthorityId(
     [in] CRegulator.rentalBondAuthority CAdministration.video.rentalBondAuthorityId);

    GetVideo.RentalBondAuthorityId(
     [out] CRegulator.rentalBondAuthority* CAdministration.video.rentalBondAuthorityId);


   SetVideo.CommunityHousingRegulatorId(
     [in] CRegulator.communityHousingRegulator CAdministration.video.communityHousingRegulatorId);

    GetVideo.CommunityHousingRegulatorId(
     [out] CRegulator.communityHousingRegulator* CAdministration.video.communityHousingRegulatorId);


   SetVideo.CommunityId(
     [in] CStakeholder.community CAdministration.video.communityId);

    GetVideo.CommunityId(
     [out] CStakeholder.community* CAdministration.video.communityId);


   SetVideo.MediaId(
     [in] CStakeholder.media CAdministration.video.mediaId);

    GetVideo.MediaId(
     [out] CStakeholder.media* CAdministration.video.mediaId);


   SetVideo.PartnerId(
     [in] CStakeholder.partner CAdministration.video.partnerId);

    GetVideo.PartnerId(
     [out] CStakeholder.partner* CAdministration.video.partnerId);


   SetVideo.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.video.natRegId);

    GetVideo.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.video.natRegId);


   SetVideo.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CAdministration.video.stateBasedRegId);

    GetVideo.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CAdministration.video.stateBasedRegId);


   SetVideo.PropertyInspectionResId(
     [in] CProperty.propertyInspectionResidential CAdministration.video.propertyInspectionResId);

    GetVideo.PropertyInspectionResId(
     [out] CProperty.propertyInspectionResidential* CAdministration.video.propertyInspectionResId);


   SetVideo.PropertyInspectionCommercId(
     [in] CProperty.propertyInspectionCommercial CAdministration.video.propertyInspectionCommercId);

    GetVideo.PropertyInspectionCommercId(
     [out] CProperty.propertyInspectionCommercial* CAdministration.video.propertyInspectionCommercId);


   SetVideo.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.video.serviceIds);

    GetVideo.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.video.serviceIds);


   SetVideo.ItemIds(
     [in] ArrayOf<CAdministration.item> CAdministration.video.itemIds);

    GetVideo.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CAdministration.video.itemIds);


   SetVideo.JobIds(
     [in] ArrayOf<CAdministration.job> CAdministration.video.jobIds);

    GetVideo.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CAdministration.video.jobIds);


   SetVideo.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.video.docRefIds);

    GetVideo.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.video.docRefIds);


   SetVideo.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.video.imageRefIds);

    GetVideo.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.video.imageRefIds);


   SetVideo.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.video.audioRefIds);

    GetVideo.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.video.audioRefIds);


   SetVideo.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.video.videoRefIds);

    GetVideo.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.video.videoRefIds);


   SetItemType.ItemTypeId(
     [in] String CAdministration.itemType.itemTypeId);

    GetItemType.ItemTypeId(
     [out] String* CAdministration.itemType.itemTypeId);


   SetItemType.ItemTypeDescription(
     [in] String CAdministration.itemType.itemTypeDescription);

    GetItemType.ItemTypeDescription(
     [out] String* CAdministration.itemType.itemTypeDescription);


   SetItemType.ItemModelNumber(
     [in] String CAdministration.itemType.itemModelNumber);

    GetItemType.ItemModelNumber(
     [out] String* CAdministration.itemType.itemModelNumber);


   SetItemType.ItemName(
     [in] String CAdministration.itemType.itemName);

    GetItemType.ItemName(
     [out] String* CAdministration.itemType.itemName);


   SetItemType.NumberInInventory(
     [in] Int32 CAdministration.itemType.numberInInventory);

    GetItemType.NumberInInventory(
     [out] Int32* CAdministration.itemType.numberInInventory);


   SetItemType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.itemType.businessChannelOwnerId);

    GetItemType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.itemType.businessChannelOwnerId);


   SetItemType.OurProductTypeId(
     [in] CFactory.productType CAdministration.itemType.ourProductTypeId);

    GetItemType.OurProductTypeId(
     [out] CFactory.productType* CAdministration.itemType.ourProductTypeId);


   SetItemType.BranchId(
     [in] CAdministration.branch CAdministration.itemType.branchId);

    GetItemType.BranchId(
     [out] CAdministration.branch* CAdministration.itemType.branchId);


   SetItemType.DeptId(
     [in] CAdministration.department CAdministration.itemType.deptId);

    GetItemType.DeptId(
     [out] CAdministration.department* CAdministration.itemType.deptId);


   SetItemType.Suppliers(
     [in] ArrayOf<CSupplier.supplier> CAdministration.itemType.suppliers);

    GetItemType.Suppliers(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.itemType.suppliers);


   SetItemType.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.itemType.serviceIds);

    GetItemType.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.itemType.serviceIds);


   SetItemType.SupplierTypeIds(
     [in] ArrayOf<CSupplier.supplierType> CAdministration.itemType.supplierTypeIds);

    GetItemType.SupplierTypeIds(
     [out, callee] ArrayOf<CSupplier.supplierType>* CAdministration.itemType.supplierTypeIds);


   SetItemType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.itemType.docRefIds);

    GetItemType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.itemType.docRefIds);


   SetItemType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.itemType.imageRefIds);

    GetItemType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.itemType.imageRefIds);


   SetItemType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.itemType.videoRefIds);

    GetItemType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.itemType.videoRefIds);


   SetItem.ItemId(
     [in] String CAdministration.item.itemId);

    GetItem.ItemId(
     [out] String* CAdministration.item.itemId);


   SetItem.ItemName(
     [in] String CAdministration.item.itemName);

    GetItem.ItemName(
     [out] String* CAdministration.item.itemName);


   SetItem.ItemDescription(
     [in] String CAdministration.item.itemDescription);

    GetItem.ItemDescription(
     [out] String* CAdministration.item.itemDescription);


   SetItem.Fragile(
     [in] Boolean CAdministration.item.fragile);

    GetItem.Fragile(
     [out] Boolean* CAdministration.item.fragile);


   SetItem.Toxic(
     [in] Boolean CAdministration.item.toxic);

    GetItem.Toxic(
     [out] Boolean* CAdministration.item.toxic);


   SetItem.Corrosive(
     [in] Boolean CAdministration.item.corrosive);

    GetItem.Corrosive(
     [out] Boolean* CAdministration.item.corrosive);


   SetItem.ItemModelNumber(
     [in] String CAdministration.item.itemModelNumber);

    GetItem.ItemModelNumber(
     [out] String* CAdministration.item.itemModelNumber);


   SetItem.ItemSerialNumber(
     [in] String CAdministration.item.itemSerialNumber);

    GetItem.ItemSerialNumber(
     [out] String* CAdministration.item.itemSerialNumber);


   SetItem.ItemQualityDimensionsCheckedPassed(
     [in] Boolean CAdministration.item.itemQualityDimensionsCheckedPassed);

    GetItem.ItemQualityDimensionsCheckedPassed(
     [out] Boolean* CAdministration.item.itemQualityDimensionsCheckedPassed);


   SetItem.PricePerItem(
     [in] String CAdministration.item.pricePerItem);

    GetItem.PricePerItem(
     [out] String* CAdministration.item.pricePerItem);


   SetItem.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.item.businessChannelOwnerId);

    GetItem.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.item.businessChannelOwnerId);


   SetItem.OurProductId(
     [in] CFactory.product CAdministration.item.ourProductId);

    GetItem.OurProductId(
     [out] CFactory.product* CAdministration.item.ourProductId);


   SetItem.BranchId(
     [in] CAdministration.branch CAdministration.item.branchId);

    GetItem.BranchId(
     [out] CAdministration.branch* CAdministration.item.branchId);


   SetItem.DeptId(
     [in] CAdministration.department CAdministration.item.deptId);

    GetItem.DeptId(
     [out] CAdministration.department* CAdministration.item.deptId);


   SetItem.SupplierId(
     [in] CSupplier.supplier CAdministration.item.supplierId);

    GetItem.SupplierId(
     [out] CSupplier.supplier* CAdministration.item.supplierId);


   SetItem.ItemTypeId(
     [in] CAdministration.itemType CAdministration.item.itemTypeId);

    GetItem.ItemTypeId(
     [out] CAdministration.itemType* CAdministration.item.itemTypeId);


   SetItem.JobTypeIds(
     [in] ArrayOf<CAdministration.jobType> CAdministration.item.jobTypeIds);

    GetItem.JobTypeIds(
     [out, callee] ArrayOf<CAdministration.jobType>* CAdministration.item.jobTypeIds);


   SetItem.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.item.docRefIds);

    GetItem.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.item.docRefIds);


   SetItem.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.item.imageRefIds);

    GetItem.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.item.imageRefIds);


   SetItem.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.item.videoRefIds);

    GetItem.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.item.videoRefIds);


   SetJobType.JobTypeId(
     [in] String CAdministration.jobType.jobTypeId);

    GetJobType.JobTypeId(
     [out] String* CAdministration.jobType.jobTypeId);


   SetJobType.JobDescription(
     [in] String CAdministration.jobType.jobDescription);

    GetJobType.JobDescription(
     [out] String* CAdministration.jobType.jobDescription);


   SetJobType.JobCode(
     [in] String CAdministration.jobType.jobCode);

    GetJobType.JobCode(
     [out] String* CAdministration.jobType.jobCode);


   SetJobType.JobName(
     [in] String CAdministration.jobType.jobName);

    GetJobType.JobName(
     [out] String* CAdministration.jobType.jobName);


   SetJobType.TaskSequence(
     [in] ArrayOf<String> CAdministration.jobType.taskSequence);

    GetJobType.TaskSequence(
     [out, callee] ArrayOf<String>* CAdministration.jobType.taskSequence);


   SetJobType.NatRegId(
     [in] ArrayOf<String> CAdministration.jobType.natRegId);

    GetJobType.NatRegId(
     [out, callee] ArrayOf<String>* CAdministration.jobType.natRegId);


   SetJobType.StateBasedRegId(
     [in] ArrayOf<String> CAdministration.jobType.stateBasedRegId);

    GetJobType.StateBasedRegId(
     [out, callee] ArrayOf<String>* CAdministration.jobType.stateBasedRegId);


   SetJobType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.jobType.businessChannelOwnerId);

    GetJobType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.jobType.businessChannelOwnerId);


   SetJobType.BranchId(
     [in] CAdministration.branch CAdministration.jobType.branchId);

    GetJobType.BranchId(
     [out] CAdministration.branch* CAdministration.jobType.branchId);


   SetJobType.DeptId(
     [in] CAdministration.department CAdministration.jobType.deptId);

    GetJobType.DeptId(
     [out] CAdministration.department* CAdministration.jobType.deptId);


   SetJobType.Suppliers(
     [in] ArrayOf<CSupplier.supplier> CAdministration.jobType.suppliers);

    GetJobType.Suppliers(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.jobType.suppliers);


   SetJobType.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CAdministration.jobType.itemTypeIds);

    GetJobType.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CAdministration.jobType.itemTypeIds);


   SetJobType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.jobType.docRefIds);

    GetJobType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.jobType.docRefIds);


   SetJobType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.jobType.imageRefIds);

    GetJobType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.jobType.imageRefIds);


   SetJobType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.jobType.videoRefIds);

    GetJobType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.jobType.videoRefIds);


   SetJob.JobId(
     [in] String CAdministration.job.jobId);

    GetJob.JobId(
     [out] String* CAdministration.job.jobId);


   SetJob.JobDescription(
     [in] String CAdministration.job.jobDescription);

    GetJob.JobDescription(
     [out] String* CAdministration.job.jobDescription);


   SetJob.TaskDescriptionSequence(
     [in] ArrayOf<String> CAdministration.job.taskDescriptionSequence);

    GetJob.TaskDescriptionSequence(
     [out, callee] ArrayOf<String>* CAdministration.job.taskDescriptionSequence);


   SetJob.JobCode(
     [in] String CAdministration.job.jobCode);

    GetJob.JobCode(
     [out] String* CAdministration.job.jobCode);


   SetJob.JobName(
     [in] String CAdministration.job.jobName);

    GetJob.JobName(
     [out] String* CAdministration.job.jobName);


   SetJob.JobNum(
     [in] Int32 CAdministration.job.jobNum);

    GetJob.JobNum(
     [out] Int32* CAdministration.job.jobNum);


   SetJob.ResponsiveMaintenance(
     [in] Boolean CAdministration.job.responsiveMaintenance);

    GetJob.ResponsiveMaintenance(
     [out] Boolean* CAdministration.job.responsiveMaintenance);


   SetJob.PlannedMaintenance(
     [in] Boolean CAdministration.job.plannedMaintenance);

    GetJob.PlannedMaintenance(
     [out] Boolean* CAdministration.job.plannedMaintenance);


   SetJob.ImmediatePrevJobNums(
     [in] ArrayOf<Int32> CAdministration.job.immediatePrevJobNums);

    GetJob.ImmediatePrevJobNums(
     [out, callee] ArrayOf<Int32>* CAdministration.job.immediatePrevJobNums);


   SetJob.ImmediatePrevJobsQCPass(
     [in] ArrayOf<Boolean> CAdministration.job.immediatePrevJobsQCPass);

    GetJob.ImmediatePrevJobsQCPass(
     [out, callee] ArrayOf<Boolean>* CAdministration.job.immediatePrevJobsQCPass);


   SetJob.DateTimeTaskStartSequence(
     [in] ArrayOf<String> CAdministration.job.dateTimeTaskStartSequence);

    GetJob.DateTimeTaskStartSequence(
     [out, callee] ArrayOf<String>* CAdministration.job.dateTimeTaskStartSequence);


   SetJob.DateTimeTaskEndSequence(
     [in] ArrayOf<String> CAdministration.job.dateTimeTaskEndSequence);

    GetJob.DateTimeTaskEndSequence(
     [out, callee] ArrayOf<String>* CAdministration.job.dateTimeTaskEndSequence);


   SetJob.ActualTaskStartTime(
     [in] ArrayOf<String> CAdministration.job.actualTaskStartTime);

    GetJob.ActualTaskStartTime(
     [out, callee] ArrayOf<String>* CAdministration.job.actualTaskStartTime);


   SetJob.ActualTaskCompleteTime(
     [in] ArrayOf<String> CAdministration.job.actualTaskCompleteTime);

    GetJob.ActualTaskCompleteTime(
     [out, callee] ArrayOf<String>* CAdministration.job.actualTaskCompleteTime);


   SetJob.TaskCompletionQCPasses(
     [in] ArrayOf<Boolean> CAdministration.job.taskCompletionQCPasses);

    GetJob.TaskCompletionQCPasses(
     [out, callee] ArrayOf<Boolean>* CAdministration.job.taskCompletionQCPasses);


   SetJob.JobCompletionQCPass(
     [in] Boolean CAdministration.job.jobCompletionQCPass);

    GetJob.JobCompletionQCPass(
     [out] Boolean* CAdministration.job.jobCompletionQCPass);


   SetJob.NextJobTypeId(
     [in] String CAdministration.job.nextJobTypeId);

    GetJob.NextJobTypeId(
     [out] String* CAdministration.job.nextJobTypeId);


   SetJob.TenantDamages(
     [in] ArrayOf<Boolean> CAdministration.job.tenantDamages);

    GetJob.TenantDamages(
     [out, callee] ArrayOf<Boolean>* CAdministration.job.tenantDamages);


   SetJob.LesseeCustomerDamage(
     [in] ArrayOf<Boolean> CAdministration.job.lesseeCustomerDamage);

    GetJob.LesseeCustomerDamage(
     [out, callee] ArrayOf<Boolean>* CAdministration.job.lesseeCustomerDamage);


   SetJob.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.job.businessChannelOwnerId);

    GetJob.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.job.businessChannelOwnerId);


   SetJob.BranchId(
     [in] CAdministration.branch CAdministration.job.branchId);

    GetJob.BranchId(
     [out] CAdministration.branch* CAdministration.job.branchId);


   SetJob.DeptId(
     [in] CAdministration.department CAdministration.job.deptId);

    GetJob.DeptId(
     [out] CAdministration.department* CAdministration.job.deptId);


   SetJob.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.job.docRefIds);

    GetJob.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.job.docRefIds);


   SetJob.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.job.imageRefIds);

    GetJob.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.job.imageRefIds);


   SetJob.PropertyIds(
     [in] ArrayOf<CProperty.property> CAdministration.job.propertyIds);

    GetJob.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CAdministration.job.propertyIds);


   SetJob.MasterLedgerAssetId(
     [in] CFinance.masterAssetRegister CAdministration.job.masterLedgerAssetId);

    GetJob.MasterLedgerAssetId(
     [out] CFinance.masterAssetRegister* CAdministration.job.masterLedgerAssetId);


   SetJob.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CAdministration.job.customerIds);

    GetJob.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.job.customerIds);


   SetJob.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.job.employeeIds);

    GetJob.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.job.employeeIds);


   SetJob.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.job.supplierIds);

    GetJob.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.job.supplierIds);


   SetJob.JobTypeId(
     [in] CAdministration.jobType CAdministration.job.jobTypeId);

    GetJob.JobTypeId(
     [out] CAdministration.jobType* CAdministration.job.jobTypeId);


   SetJob.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CAdministration.job.itemTypeIds);

    GetJob.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CAdministration.job.itemTypeIds);


   SetJob.ItemIds(
     [in] ArrayOf<CAdministration.item> CAdministration.job.itemIds);

    GetJob.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CAdministration.job.itemIds);


   SetJob.ServiceTypeIds(
     [in] ArrayOf<CAdministration.serviceType> CAdministration.job.serviceTypeIds);

    GetJob.ServiceTypeIds(
     [out, callee] ArrayOf<CAdministration.serviceType>* CAdministration.job.serviceTypeIds);


   SetJob.ServiceIds(
     [in] ArrayOf<CAdministration.service> CAdministration.job.serviceIds);

    GetJob.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CAdministration.job.serviceIds);


   SetJob.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CAdministration.job.materialTypeIds);

    GetJob.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CAdministration.job.materialTypeIds);


   SetJob.MaterialIds(
     [in] ArrayOf<CFactory.material> CAdministration.job.materialIds);

    GetJob.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CAdministration.job.materialIds);


   SetJob.PartTypeIds(
     [in] ArrayOf<CFactory.partType> CAdministration.job.partTypeIds);

    GetJob.PartTypeIds(
     [out, callee] ArrayOf<CFactory.partType>* CAdministration.job.partTypeIds);


   SetJob.PartIds(
     [in] ArrayOf<CFactory.part> CAdministration.job.partIds);

    GetJob.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CAdministration.job.partIds);


   SetJob.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CAdministration.job.minorsubassemblyTypeIds);

    GetJob.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CAdministration.job.minorsubassemblyTypeIds);


   SetJob.MinorSubAssemblyIds(
     [in] ArrayOf<CFactory.minorsubassembly> CAdministration.job.minorsubassemblyIds);

    GetJob.MinorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.minorsubassembly>* CAdministration.job.minorsubassemblyIds);


   SetJob.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CAdministration.job.subassemblyTypeIds);

    GetJob.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CAdministration.job.subassemblyTypeIds);


   SetJob.SubAssemblyIds(
     [in] ArrayOf<CFactory.subassembly> CAdministration.job.subassemblyIds);

    GetJob.SubAssemblyIds(
     [out, callee] ArrayOf<CFactory.subassembly>* CAdministration.job.subassemblyIds);


   SetJob.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CAdministration.job.majorsubassemblyTypeIds);

    GetJob.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CAdministration.job.majorsubassemblyTypeIds);


   SetJob.MajorSubAssemblyIds(
     [in] ArrayOf<CFactory.majorsubassembly> CAdministration.job.majorsubassemblyIds);

    GetJob.MajorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.majorsubassembly>* CAdministration.job.majorsubassemblyIds);


   SetJob.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CAdministration.job.lesserassemblyTypeIds);

    GetJob.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CAdministration.job.lesserassemblyTypeIds);


   SetJob.LesserAssemblyIds(
     [in] ArrayOf<CFactory.lesserassembly> CAdministration.job.lesserassemblyIds);

    GetJob.LesserAssemblyIds(
     [out, callee] ArrayOf<CFactory.lesserassembly>* CAdministration.job.lesserassemblyIds);


   SetJob.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CAdministration.job.assemblyTypeIds);

    GetJob.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CAdministration.job.assemblyTypeIds);


   SetJob.AssemblyIds(
     [in] ArrayOf<CFactory.assembly> CAdministration.job.assemblyIds);

    GetJob.AssemblyIds(
     [out, callee] ArrayOf<CFactory.assembly>* CAdministration.job.assemblyIds);


   SetJob.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CAdministration.job.greaterassemblyTypeIds);

    GetJob.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CAdministration.job.greaterassemblyTypeIds);


   SetJob.GreaterAssemblyIds(
     [in] ArrayOf<CFactory.greaterassembly> CAdministration.job.greaterassemblyIds);

    GetJob.GreaterAssemblyIds(
     [out, callee] ArrayOf<CFactory.greaterassembly>* CAdministration.job.greaterassemblyIds);


   SetJob.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CAdministration.job.productTypeIds);

    GetJob.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CAdministration.job.productTypeIds);


   SetJob.ProductIds(
     [in] ArrayOf<CFactory.product> CAdministration.job.productIds);

    GetJob.ProductIds(
     [out, callee] ArrayOf<CFactory.product>* CAdministration.job.productIds);


   SetJob.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CAdministration.job.masterSalesOrderId);

    GetJob.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CAdministration.job.masterSalesOrderId);


   SetJob.PurchOrderId(
     [in] realEstatePurchOrders CAdministration.job.purchOrderId);

    GetJob.PurchOrderId(
     [out] realEstatePurchOrders* CAdministration.job.purchOrderId);


   SetJob.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.job.natRegId);

    GetJob.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.job.natRegId);


   SetJob.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CAdministration.job.stateBasedRegId);

    GetJob.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CAdministration.job.stateBasedRegId);


   SetLeaveTypesCodes.LeaveId(
     [in] String CAdministration.leaveTypesCodes.leaveId);

    GetLeaveTypesCodes.LeaveId(
     [out] String* CAdministration.leaveTypesCodes.leaveId);


   SetLeaveTypesCodes.LeaveCode(
     [in] String CAdministration.leaveTypesCodes.leaveCode);

    GetLeaveTypesCodes.LeaveCode(
     [out] String* CAdministration.leaveTypesCodes.leaveCode);


   SetLeaveTypesCodes.LeaveDescription(
     [in] String CAdministration.leaveTypesCodes.leaveDescription);

    GetLeaveTypesCodes.LeaveDescription(
     [out] String* CAdministration.leaveTypesCodes.leaveDescription);


   SetLeaveTypesCodes.AwardName(
     [in] String CAdministration.leaveTypesCodes.awardName);

    GetLeaveTypesCodes.AwardName(
     [out] String* CAdministration.leaveTypesCodes.awardName);


   SetLeaveTypesCodes.Notes(
     [in] String CAdministration.leaveTypesCodes.notes);

    GetLeaveTypesCodes.Notes(
     [out] String* CAdministration.leaveTypesCodes.notes);


   SetLeaveTypesCodes.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.leaveTypesCodes.businessChannelOwnerId);

    GetLeaveTypesCodes.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.leaveTypesCodes.businessChannelOwnerId);


   SetLeaveTypesCodes.BranchId(
     [in] CAdministration.branch CAdministration.leaveTypesCodes.branchId);

    GetLeaveTypesCodes.BranchId(
     [out] CAdministration.branch* CAdministration.leaveTypesCodes.branchId);


   SetLeaveTypesCodes.DeptId(
     [in] CAdministration.department CAdministration.leaveTypesCodes.deptId);

    GetLeaveTypesCodes.DeptId(
     [out] CAdministration.department* CAdministration.leaveTypesCodes.deptId);


   SetLeaveTypesCodes.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.leaveTypesCodes.docRefIds);

    GetLeaveTypesCodes.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.leaveTypesCodes.docRefIds);


   SetQuoteIn.QuoteInId(
     [in] String CAdministration.quoteIn.quoteInId);

    GetQuoteIn.QuoteInId(
     [out] String* CAdministration.quoteIn.quoteInId);


   SetQuoteIn.JobDescription(
     [in] ArrayOf<String> CAdministration.quoteIn.jobDescription);

    GetQuoteIn.JobDescription(
     [out, callee] ArrayOf<String>* CAdministration.quoteIn.jobDescription);


   SetQuoteIn.JobTypeId(
     [in] ArrayOf<String> CAdministration.quoteIn.jobTypeId);

    GetQuoteIn.JobTypeId(
     [out, callee] ArrayOf<String>* CAdministration.quoteIn.jobTypeId);


   SetQuoteIn.JobName(
     [in] ArrayOf<String> CAdministration.quoteIn.jobName);

    GetQuoteIn.JobName(
     [out, callee] ArrayOf<String>* CAdministration.quoteIn.jobName);


   SetQuoteIn.ItemId(
     [in] ArrayOf<String> CAdministration.quoteIn.itemId);

    GetQuoteIn.ItemId(
     [out, callee] ArrayOf<String>* CAdministration.quoteIn.itemId);


   SetQuoteIn.ConditionsUponCustomer(
     [in] ArrayOf<String> CAdministration.quoteIn.conditionsUponCustomer);

    GetQuoteIn.ConditionsUponCustomer(
     [out, callee] ArrayOf<String>* CAdministration.quoteIn.conditionsUponCustomer);


   SetQuoteIn.QuoteAmountEachJob(
     [in] ArrayOf<Double> CAdministration.quoteIn.quoteAmountEachJob);

    GetQuoteIn.QuoteAmountEachJob(
     [out, callee] ArrayOf<Double>* CAdministration.quoteIn.quoteAmountEachJob);


   SetQuoteIn.QuoteTotalForOrder(
     [in] Double CAdministration.quoteIn.quoteTotalForOrder);

    GetQuoteIn.QuoteTotalForOrder(
     [out] Double* CAdministration.quoteIn.quoteTotalForOrder);


   SetQuoteIn.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.quoteIn.businessChannelOwnerId);

    GetQuoteIn.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.quoteIn.businessChannelOwnerId);


   SetQuoteIn.BranchId(
     [in] CAdministration.branch CAdministration.quoteIn.branchId);

    GetQuoteIn.BranchId(
     [out] CAdministration.branch* CAdministration.quoteIn.branchId);


   SetQuoteIn.DeptId(
     [in] CAdministration.department CAdministration.quoteIn.deptId);

    GetQuoteIn.DeptId(
     [out] CAdministration.department* CAdministration.quoteIn.deptId);


   SetQuoteIn.SupplierId(
     [in] CSupplier.supplier CAdministration.quoteIn.supplierId);

    GetQuoteIn.SupplierId(
     [out] CSupplier.supplier* CAdministration.quoteIn.supplierId);


   SetQuoteIn.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.quoteIn.docRefIds);

    GetQuoteIn.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.quoteIn.docRefIds);


   SetQuoteIn.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.quoteIn.imageRefIds);

    GetQuoteIn.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.quoteIn.imageRefIds);


   SetQuoteIn.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.quoteIn.videoRefIds);

    GetQuoteIn.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.quoteIn.videoRefIds);


   SetQuoteIn.PurchOrderId(
     [in] realEstatePurchOrders CAdministration.quoteIn.purchOrderId);

    GetQuoteIn.PurchOrderId(
     [out] realEstatePurchOrders* CAdministration.quoteIn.purchOrderId);


   SetQuoteOut.QuoteOutId(
     [in] String CAdministration.quoteOut.quoteOutId);

    GetQuoteOut.QuoteOutId(
     [out] String* CAdministration.quoteOut.quoteOutId);


   SetQuoteOut.JobDescription(
     [in] ArrayOf<String> CAdministration.quoteOut.jobDescription);

    GetQuoteOut.JobDescription(
     [out, callee] ArrayOf<String>* CAdministration.quoteOut.jobDescription);


   SetQuoteOut.JobTypeId(
     [in] ArrayOf<String> CAdministration.quoteOut.jobTypeId);

    GetQuoteOut.JobTypeId(
     [out, callee] ArrayOf<String>* CAdministration.quoteOut.jobTypeId);


   SetQuoteOut.JobName(
     [in] ArrayOf<String> CAdministration.quoteOut.jobName);

    GetQuoteOut.JobName(
     [out, callee] ArrayOf<String>* CAdministration.quoteOut.jobName);


   SetQuoteOut.ItemId(
     [in] ArrayOf<String> CAdministration.quoteOut.itemId);

    GetQuoteOut.ItemId(
     [out, callee] ArrayOf<String>* CAdministration.quoteOut.itemId);


   SetQuoteOut.ConditionsUponCustomer(
     [in] ArrayOf<String> CAdministration.quoteOut.conditionsUponCustomer);

    GetQuoteOut.ConditionsUponCustomer(
     [out, callee] ArrayOf<String>* CAdministration.quoteOut.conditionsUponCustomer);


   SetQuoteOut.QuoteAmountEachJobItem(
     [in] ArrayOf<Double> CAdministration.quoteOut.quoteAmountEachJobItem);

    GetQuoteOut.QuoteAmountEachJobItem(
     [out, callee] ArrayOf<Double>* CAdministration.quoteOut.quoteAmountEachJobItem);


   SetQuoteOut.QuoteTotalForOrder(
     [in] Double CAdministration.quoteOut.quoteTotalForOrder);

    GetQuoteOut.QuoteTotalForOrder(
     [out] Double* CAdministration.quoteOut.quoteTotalForOrder);


   SetQuoteOut.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.quoteOut.businessChannelOwnerId);

    GetQuoteOut.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.quoteOut.businessChannelOwnerId);


   SetQuoteOut.BranchId(
     [in] CAdministration.branch CAdministration.quoteOut.branchId);

    GetQuoteOut.BranchId(
     [out] CAdministration.branch* CAdministration.quoteOut.branchId);


   SetQuoteOut.DeptId(
     [in] CAdministration.department CAdministration.quoteOut.deptId);

    GetQuoteOut.DeptId(
     [out] CAdministration.department* CAdministration.quoteOut.deptId);


   SetQuoteOut.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.quoteOut.docRefIds);

    GetQuoteOut.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.quoteOut.docRefIds);


   SetQuoteOut.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.quoteOut.imageRefIds);

    GetQuoteOut.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.quoteOut.imageRefIds);


   SetQuoteOut.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.quoteOut.videoRefIds);

    GetQuoteOut.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.quoteOut.videoRefIds);


   SetQuoteOut.Customers(
     [in] ArrayOf<CCustomer.customer> CAdministration.quoteOut.customers);

    GetQuoteOut.Customers(
     [out, callee] ArrayOf<CCustomer.customer>* CAdministration.quoteOut.customers);


   SetQuoteOut.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CAdministration.quoteOut.masterSalesOrderId);

    GetQuoteOut.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CAdministration.quoteOut.masterSalesOrderId);


   SetRiskRegister.RiskId(
     [in] String CAdministration.riskRegister.riskId);

    GetRiskRegister.RiskId(
     [out] String* CAdministration.riskRegister.riskId);


   SetRiskRegister.PropertyType(
     [in] CHelper.propertyType CAdministration.riskRegister.propertyType);

    GetRiskRegister.PropertyType(
     [out] CHelper.propertyType* CAdministration.riskRegister.propertyType);


   SetRiskRegister.RiskDescriptionSequence(
     [in] ArrayOf<String> CAdministration.riskRegister.riskDescriptionSequence);

    GetRiskRegister.RiskDescriptionSequence(
     [out, callee] ArrayOf<String>* CAdministration.riskRegister.riskDescriptionSequence);


   SetRiskRegister.RiskMitigationSequence(
     [in] ArrayOf<String> CAdministration.riskRegister.riskMitigationSequence);

    GetRiskRegister.RiskMitigationSequence(
     [out, callee] ArrayOf<String>* CAdministration.riskRegister.riskMitigationSequence);


   SetRiskRegister.StatementsOfRisksAssociated(
     [in] ArrayOf<String> CAdministration.riskRegister.statementsOfRisksAssociated);

    GetRiskRegister.StatementsOfRisksAssociated(
     [out, callee] ArrayOf<String>* CAdministration.riskRegister.statementsOfRisksAssociated);


   SetRiskRegister.RiskLikelihoodRating(
     [in] CHelper.riskLikelihoodOfOccurrenceRating CAdministration.riskRegister.riskLikelihoodRating);

    GetRiskRegister.RiskLikelihoodRating(
     [out] CHelper.riskLikelihoodOfOccurrenceRating* CAdministration.riskRegister.riskLikelihoodRating);


   SetRiskRegister.RiskConsequenceRating(
     [in] CHelper.riskConsequence CAdministration.riskRegister.riskConsequenceRating);

    GetRiskRegister.RiskConsequenceRating(
     [out] CHelper.riskConsequence* CAdministration.riskRegister.riskConsequenceRating);


   SetRiskRegister.ResidualRiskLevel(
     [in] CHelper.residualRiskLevel CAdministration.riskRegister.residualRiskLevel);

    GetRiskRegister.ResidualRiskLevel(
     [out] CHelper.residualRiskLevel* CAdministration.riskRegister.residualRiskLevel);


   SetRiskRegister.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.riskRegister.businessChannelOwnerId);

    GetRiskRegister.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.riskRegister.businessChannelOwnerId);


   SetRiskRegister.BranchId(
     [in] CAdministration.branch CAdministration.riskRegister.branchId);

    GetRiskRegister.BranchId(
     [out] CAdministration.branch* CAdministration.riskRegister.branchId);


   SetRiskRegister.DeptId(
     [in] CAdministration.department CAdministration.riskRegister.deptId);

    GetRiskRegister.DeptId(
     [out] CAdministration.department* CAdministration.riskRegister.deptId);


   SetRiskRegister.RoleId(
     [in] CAdministration.role CAdministration.riskRegister.roleId);

    GetRiskRegister.RoleId(
     [out] CAdministration.role* CAdministration.riskRegister.roleId);


   SetRiskRegister.PropertyId(
     [in] CProperty.property CAdministration.riskRegister.propertyId);

    GetRiskRegister.PropertyId(
     [out] CProperty.property* CAdministration.riskRegister.propertyId);


   SetRiskRegister.PropertyConstructionTypeId(
     [in] CProperty.propertyConstructionType CAdministration.riskRegister.propertyConstructionTypeId);

    GetRiskRegister.PropertyConstructionTypeId(
     [out] CProperty.propertyConstructionType* CAdministration.riskRegister.propertyConstructionTypeId);


   SetRiskRegister.MasterAssetTypeId(
     [in] CFinance.masterAssetType CAdministration.riskRegister.masterAssetTypeId);

    GetRiskRegister.MasterAssetTypeId(
     [out] CFinance.masterAssetType* CAdministration.riskRegister.masterAssetTypeId);


   SetRiskRegister.MasterAssetId(
     [in] CFinance.masterAssetRegister CAdministration.riskRegister.masterAssetId);

    GetRiskRegister.MasterAssetId(
     [out] CFinance.masterAssetRegister* CAdministration.riskRegister.masterAssetId);


   SetRiskRegister.ProgramId(
     [in] CProperty.program CAdministration.riskRegister.programId);

    GetRiskRegister.ProgramId(
     [out] CProperty.program* CAdministration.riskRegister.programId);


   SetRiskRegister.ProjectId(
     [in] CProperty.project CAdministration.riskRegister.projectId);

    GetRiskRegister.ProjectId(
     [out] CProperty.project* CAdministration.riskRegister.projectId);


   SetRiskRegister.JobTypeId(
     [in] CAdministration.jobType CAdministration.riskRegister.jobTypeId);

    GetRiskRegister.JobTypeId(
     [out] CAdministration.jobType* CAdministration.riskRegister.jobTypeId);


   SetRiskRegister.JobId(
     [in] CAdministration.job CAdministration.riskRegister.jobId);

    GetRiskRegister.JobId(
     [out] CAdministration.job* CAdministration.riskRegister.jobId);


   SetRiskRegister.PurchaseOrderId(
     [in] realEstatePurchOrders CAdministration.riskRegister.purchaseOrderId);

    GetRiskRegister.PurchaseOrderId(
     [out] realEstatePurchOrders* CAdministration.riskRegister.purchaseOrderId);


   SetRiskRegister.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CAdministration.riskRegister.masterSalesOrderId);

    GetRiskRegister.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CAdministration.riskRegister.masterSalesOrderId);


   SetRiskRegister.AllocationId(
     [in] CProperty.allocation CAdministration.riskRegister.allocationId);

    GetRiskRegister.AllocationId(
     [out] CProperty.allocation* CAdministration.riskRegister.allocationId);


   SetRiskRegister.ComplaintId(
     [in] CCustomer.complaint CAdministration.riskRegister.complaintId);

    GetRiskRegister.ComplaintId(
     [out] CCustomer.complaint* CAdministration.riskRegister.complaintId);


   SetRiskRegister.ServiceTypeId(
     [in] CAdministration.serviceType CAdministration.riskRegister.serviceTypeId);

    GetRiskRegister.ServiceTypeId(
     [out] CAdministration.serviceType* CAdministration.riskRegister.serviceTypeId);


   SetRiskRegister.ItemTypeId(
     [in] CAdministration.itemType CAdministration.riskRegister.itemTypeId);

    GetRiskRegister.ItemTypeId(
     [out] CAdministration.itemType* CAdministration.riskRegister.itemTypeId);


   SetRiskRegister.ItemId(
     [in] CAdministration.item CAdministration.riskRegister.itemId);

    GetRiskRegister.ItemId(
     [out] CAdministration.item* CAdministration.riskRegister.itemId);


   SetRiskRegister.MaterialTypeId(
     [in] CFactory.materialType CAdministration.riskRegister.materialTypeId);

    GetRiskRegister.MaterialTypeId(
     [out] CFactory.materialType* CAdministration.riskRegister.materialTypeId);


   SetRiskRegister.MaterialId(
     [in] CFactory.material CAdministration.riskRegister.materialId);

    GetRiskRegister.MaterialId(
     [out] CFactory.material* CAdministration.riskRegister.materialId);


   SetRiskRegister.PartTypeId(
     [in] CFactory.partType CAdministration.riskRegister.partTypeId);

    GetRiskRegister.PartTypeId(
     [out] CFactory.partType* CAdministration.riskRegister.partTypeId);


   SetRiskRegister.PartId(
     [in] CFactory.part CAdministration.riskRegister.partId);

    GetRiskRegister.PartId(
     [out] CFactory.part* CAdministration.riskRegister.partId);


   SetRiskRegister.MinorSubAssemblyTypeId(
     [in] CFactory.minorsubassemblyType CAdministration.riskRegister.minorsubassemblyTypeId);

    GetRiskRegister.MinorSubAssemblyTypeId(
     [out] CFactory.minorsubassemblyType* CAdministration.riskRegister.minorsubassemblyTypeId);


   SetRiskRegister.MinorSubAssemblyId(
     [in] CFactory.minorsubassembly CAdministration.riskRegister.minorsubassemblyId);

    GetRiskRegister.MinorSubAssemblyId(
     [out] CFactory.minorsubassembly* CAdministration.riskRegister.minorsubassemblyId);


   SetRiskRegister.SubAssemblyTypeId(
     [in] CFactory.subassemblyType CAdministration.riskRegister.subassemblyTypeId);

    GetRiskRegister.SubAssemblyTypeId(
     [out] CFactory.subassemblyType* CAdministration.riskRegister.subassemblyTypeId);


   SetRiskRegister.SubAssemblyId(
     [in] CFactory.subassembly CAdministration.riskRegister.subassemblyId);

    GetRiskRegister.SubAssemblyId(
     [out] CFactory.subassembly* CAdministration.riskRegister.subassemblyId);


   SetRiskRegister.MajorSubAssemblyTypeId(
     [in] CFactory.majorsubassemblyType CAdministration.riskRegister.majorsubassemblyTypeId);

    GetRiskRegister.MajorSubAssemblyTypeId(
     [out] CFactory.majorsubassemblyType* CAdministration.riskRegister.majorsubassemblyTypeId);


   SetRiskRegister.MajorSubAssemblyId(
     [in] CFactory.majorsubassembly CAdministration.riskRegister.majorsubassemblyId);

    GetRiskRegister.MajorSubAssemblyId(
     [out] CFactory.majorsubassembly* CAdministration.riskRegister.majorsubassemblyId);


   SetRiskRegister.LesserAssemblyTypeId(
     [in] CFactory.lesserassemblyType CAdministration.riskRegister.lesserassemblyTypeId);

    GetRiskRegister.LesserAssemblyTypeId(
     [out] CFactory.lesserassemblyType* CAdministration.riskRegister.lesserassemblyTypeId);


   SetRiskRegister.LesserAssemblyId(
     [in] CFactory.lesserassembly CAdministration.riskRegister.lesserassemblyId);

    GetRiskRegister.LesserAssemblyId(
     [out] CFactory.lesserassembly* CAdministration.riskRegister.lesserassemblyId);


   SetRiskRegister.AssemblyTypeId(
     [in] CFactory.assemblyType CAdministration.riskRegister.assemblyTypeId);

    GetRiskRegister.AssemblyTypeId(
     [out] CFactory.assemblyType* CAdministration.riskRegister.assemblyTypeId);


   SetRiskRegister.AssemblyId(
     [in] CFactory.assembly CAdministration.riskRegister.assemblyId);

    GetRiskRegister.AssemblyId(
     [out] CFactory.assembly* CAdministration.riskRegister.assemblyId);


   SetRiskRegister.GreaterAssemblyTypeId(
     [in] CFactory.greaterassemblyType CAdministration.riskRegister.greaterassemblyTypeId);

    GetRiskRegister.GreaterAssemblyTypeId(
     [out] CFactory.greaterassemblyType* CAdministration.riskRegister.greaterassemblyTypeId);


   SetRiskRegister.GreaterAssemblyId(
     [in] CFactory.greaterassembly CAdministration.riskRegister.greaterassemblyId);

    GetRiskRegister.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CAdministration.riskRegister.greaterassemblyId);


   SetRiskRegister.ProductTypeId(
     [in] CFactory.productType CAdministration.riskRegister.productTypeId);

    GetRiskRegister.ProductTypeId(
     [out] CFactory.productType* CAdministration.riskRegister.productTypeId);


   SetRiskRegister.ProductId(
     [in] CFactory.product CAdministration.riskRegister.productId);

    GetRiskRegister.ProductId(
     [out] CFactory.product* CAdministration.riskRegister.productId);


   SetRiskRegister.CustomerId(
     [in] CCustomer.customer CAdministration.riskRegister.customerId);

    GetRiskRegister.CustomerId(
     [out] CCustomer.customer* CAdministration.riskRegister.customerId);


   SetRiskRegister.CustomerTypeId(
     [in] CCustomer.customerType CAdministration.riskRegister.customerTypeId);

    GetRiskRegister.CustomerTypeId(
     [out] CCustomer.customerType* CAdministration.riskRegister.customerTypeId);


   SetRiskRegister.SupplierId(
     [in] CSupplier.supplier CAdministration.riskRegister.supplierId);

    GetRiskRegister.SupplierId(
     [out] CSupplier.supplier* CAdministration.riskRegister.supplierId);


   SetRiskRegister.SupplierTypeId(
     [in] CSupplier.supplierType CAdministration.riskRegister.supplierTypeId);

    GetRiskRegister.SupplierTypeId(
     [out] CSupplier.supplierType* CAdministration.riskRegister.supplierTypeId);


   SetRiskRegister.PartnerId(
     [in] CStakeholder.partner CAdministration.riskRegister.partnerId);

    GetRiskRegister.PartnerId(
     [out] CStakeholder.partner* CAdministration.riskRegister.partnerId);


   SetRiskRegister.MediaId(
     [in] CStakeholder.media CAdministration.riskRegister.mediaId);

    GetRiskRegister.MediaId(
     [out] CStakeholder.media* CAdministration.riskRegister.mediaId);


   SetRiskRegister.CommunityId(
     [in] CStakeholder.community CAdministration.riskRegister.communityId);

    GetRiskRegister.CommunityId(
     [out] CStakeholder.community* CAdministration.riskRegister.communityId);


   SetRiskRegister.BankId(
     [in] CFinance.bank CAdministration.riskRegister.bankId);

    GetRiskRegister.BankId(
     [out] CFinance.bank* CAdministration.riskRegister.bankId);


   SetRiskRegister.PropertyOwnerId(
     [in] CProperty.propertyOwner CAdministration.riskRegister.propertyOwnerId);

    GetRiskRegister.PropertyOwnerId(
     [out] CProperty.propertyOwner* CAdministration.riskRegister.propertyOwnerId);


   SetRiskRegister.ApplicantId(
     [in] CCustomer.applicant CAdministration.riskRegister.applicantId);

    GetRiskRegister.ApplicantId(
     [out] CCustomer.applicant* CAdministration.riskRegister.applicantId);


   SetRiskRegister.TenancyId(
     [in] CProperty.tenant CAdministration.riskRegister.tenancyId);

    GetRiskRegister.TenancyId(
     [out] CProperty.tenant* CAdministration.riskRegister.tenancyId);


   SetRiskRegister.EmployeeId(
     [in] CAdministration.staff CAdministration.riskRegister.employeeId);

    GetRiskRegister.EmployeeId(
     [out] CAdministration.staff* CAdministration.riskRegister.employeeId);


   SetRiskRegister.SuperFundId(
     [in] CSupplier.superannuationFund CAdministration.riskRegister.superFundId);

    GetRiskRegister.SuperFundId(
     [out] CSupplier.superannuationFund* CAdministration.riskRegister.superFundId);


   SetRiskRegister.SolicitorIds(
     [in] ArrayOf<CSolicitor.solicitor> CAdministration.riskRegister.solicitorIds);

    GetRiskRegister.SolicitorIds(
     [out, callee] ArrayOf<CSolicitor.solicitor>* CAdministration.riskRegister.solicitorIds);


   SetRiskRegister.AgentTypeIds(
     [in] ArrayOf<CStakeholder.agentType> CAdministration.riskRegister.agentTypeIds);

    GetRiskRegister.AgentTypeIds(
     [out, callee] ArrayOf<CStakeholder.agentType>* CAdministration.riskRegister.agentTypeIds);


   SetRiskRegister.AgentIds(
     [in] ArrayOf<CStakeholder.agent> CAdministration.riskRegister.agentIds);

    GetRiskRegister.AgentIds(
     [out, callee] ArrayOf<CStakeholder.agent>* CAdministration.riskRegister.agentIds);


   SetRiskRegister.NonGovStakeholderIds(
     [in] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.riskRegister.nonGovStakeholderIds);

    GetRiskRegister.NonGovStakeholderIds(
     [out] ArrayOf<CStakeholder.nonGovStakeholder>* CAdministration.riskRegister.nonGovStakeholderIds);


   SetRiskRegister.GovStakeholderIds(
     [in] ArrayOf<CStakeholder.govStakeholder> CAdministration.riskRegister.govStakeholderIds);

    GetRiskRegister.GovStakeholderIds(
     [out] ArrayOf<CStakeholder.govStakeholder>* CAdministration.riskRegister.govStakeholderIds);


   SetRiskRegister.CentrelinkId(
     [in] CFinance.centrelink CAdministration.riskRegister.centrelinkId);

    GetRiskRegister.CentrelinkId(
     [out] CFinance.centrelink* CAdministration.riskRegister.centrelinkId);


   SetRiskRegister.StateLAHAuthorityId(
     [in] CStakeholder.stateLAHAuthority CAdministration.riskRegister.stateLAHAuthorityId);

    GetRiskRegister.StateLAHAuthorityId(
     [out] CStakeholder.stateLAHAuthority* CAdministration.riskRegister.stateLAHAuthorityId);


   SetRiskRegister.StatePublicHousingAuthorityId(
     [in] CStakeholder.statePublicHousingAuthority CAdministration.riskRegister.statePublicHousingAuthorityId);

    GetRiskRegister.StatePublicHousingAuthorityId(
     [out] CStakeholder.statePublicHousingAuthority* CAdministration.riskRegister.statePublicHousingAuthorityId);


   SetRiskRegister.CommunityHousingRegulatorId(
     [in] CRegulator.communityHousingRegulator CAdministration.riskRegister.communityHousingRegulatorId);

    GetRiskRegister.CommunityHousingRegulatorId(
     [out] CRegulator.communityHousingRegulator* CAdministration.riskRegister.communityHousingRegulatorId);


   SetRiskRegister.ATOId(
     [in] CRegulator.aTO CAdministration.riskRegister.aTOId);

    GetRiskRegister.ATOId(
     [out] CRegulator.aTO* CAdministration.riskRegister.aTOId);


   SetRiskRegister.NatRegId(
     [in] CRegulator.nationalRegulator CAdministration.riskRegister.natRegId);

    GetRiskRegister.NatRegId(
     [out] CRegulator.nationalRegulator* CAdministration.riskRegister.natRegId);


   SetRiskRegister.TribunalId(
     [in] CRegulator.nCAT CAdministration.riskRegister.tribunalId);

    GetRiskRegister.TribunalId(
     [out] CRegulator.nCAT* CAdministration.riskRegister.tribunalId);


   SetRiskRegister.ApplicationId(
     [in] CCustomer.application CAdministration.riskRegister.applicationId);

    GetRiskRegister.ApplicationId(
     [out] CCustomer.application* CAdministration.riskRegister.applicationId);


   SetRiskRegister.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CAdministration.riskRegister.stateBasedRegId);

    GetRiskRegister.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CAdministration.riskRegister.stateBasedRegId);


   SetRiskRegister.ItemTraderId(
     [in] itemTrader CAdministration.riskRegister.itemTraderId);

    GetRiskRegister.ItemTraderId(
     [out] itemTrader* CAdministration.riskRegister.itemTraderId);


   SetRiskRegister.TenancyCaseMngmntId(
     [in] CProperty.tenancyCaseManagement CAdministration.riskRegister.tenancyCaseMngmntId);

    GetRiskRegister.TenancyCaseMngmntId(
     [out] CProperty.tenancyCaseManagement* CAdministration.riskRegister.tenancyCaseMngmntId);


   SetRiskRegister.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.riskRegister.docRefIds);

    GetRiskRegister.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.riskRegister.docRefIds);


   SetRiskRegister.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.riskRegister.imageRefIds);

    GetRiskRegister.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.riskRegister.imageRefIds);


   SetRole.RoleId(
     [in] String CAdministration.role.roleId);

    GetRole.RoleId(
     [out] String* CAdministration.role.roleId);


   SetRole.RoleTitle(
     [in] String CAdministration.role.roleTitle);

    GetRole.RoleTitle(
     [out] String* CAdministration.role.roleTitle);


   SetRole.RoleDescription(
     [in] String CAdministration.role.roleDescription);

    GetRole.RoleDescription(
     [out] String* CAdministration.role.roleDescription);


   SetRole.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.role.employeeIds);

    GetRole.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.role.employeeIds);


   SetRole.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.role.businessChannelOwnerId);

    GetRole.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.role.businessChannelOwnerId);


   SetRole.BranchIds(
     [in] ArrayOf<CAdministration.branch> CAdministration.role.branchIds);

    GetRole.BranchIds(
     [out, callee] ArrayOf<CAdministration.branch>* CAdministration.role.branchIds);


   SetRole.DeptIds(
     [in] ArrayOf<CAdministration.department> CAdministration.role.deptIds);

    GetRole.DeptIds(
     [out, callee] ArrayOf<CAdministration.department>* CAdministration.role.deptIds);


   SetRole.SubDeptIds(
     [in] ArrayOf<CAdministration.subdepartment> CAdministration.role.subDeptIds);

    GetRole.SubDeptIds(
     [out, callee] ArrayOf<CAdministration.subdepartment>* CAdministration.role.subDeptIds);


   SetRole.SubDeptLevel2Ids(
     [in] ArrayOf<CAdministration.subdepartmentLevel2> CAdministration.role.subDeptLevel2Ids);

    GetRole.SubDeptLevel2Ids(
     [out, callee] ArrayOf<CAdministration.subdepartmentLevel2>* CAdministration.role.subDeptLevel2Ids);


   SetRole.SubDeptLevel3Ids(
     [in] ArrayOf<CAdministration.subdepartmentLevel3> CAdministration.role.subDeptLevel3Ids);

    GetRole.SubDeptLevel3Ids(
     [out, callee] ArrayOf<CAdministration.subdepartmentLevel3>* CAdministration.role.subDeptLevel3Ids);


   SetRole.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.role.docRefIds);

    GetRole.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.role.docRefIds);


   SetRole.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.role.imageRefIds);

    GetRole.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.role.imageRefIds);


   SetRole.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CAdministration.role.videoRefIds);

    GetRole.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CAdministration.role.videoRefIds);


   SetStaffRoleJoins.StaffRoleJoinsId(
     [in] String CAdministration.staffRoleJoins.staffRoleJoinsId);

    GetStaffRoleJoins.StaffRoleJoinsId(
     [out] String* CAdministration.staffRoleJoins.staffRoleJoinsId);


   SetStaffRoleJoins.RoleId(
     [in] CAdministration.role CAdministration.staffRoleJoins.roleId);

    GetStaffRoleJoins.RoleId(
     [out] CAdministration.role* CAdministration.staffRoleJoins.roleId);


   SetStaffRoleJoins.EmployeeId(
     [in] CAdministration.staff CAdministration.staffRoleJoins.employeeId);

    GetStaffRoleJoins.EmployeeId(
     [out] CAdministration.staff* CAdministration.staffRoleJoins.employeeId);


   SetBusinessDirector.BusinessDirectorId(
     [in] String CAdministration.businessDirector.businessDirectorId);

    GetBusinessDirector.BusinessDirectorId(
     [out] String* CAdministration.businessDirector.businessDirectorId);


   SetBusinessDirector.FirstName(
     [in] String CAdministration.businessDirector.firstName);

    GetBusinessDirector.FirstName(
     [out] String* CAdministration.businessDirector.firstName);


   SetBusinessDirector.LastName(
     [in] String CAdministration.businessDirector.lastName);

    GetBusinessDirector.LastName(
     [out] String* CAdministration.businessDirector.lastName);


   SetBusinessDirector.ResidentialAddress(
     [in] String CAdministration.businessDirector.residentialAddress);

    GetBusinessDirector.ResidentialAddress(
     [out] String* CAdministration.businessDirector.residentialAddress);


   SetBusinessDirector.PostalAddress(
     [in] String CAdministration.businessDirector.postalAddress);

    GetBusinessDirector.PostalAddress(
     [out] String* CAdministration.businessDirector.postalAddress);


   SetBusinessDirector.Email(
     [in] String CAdministration.businessDirector.email);

    GetBusinessDirector.Email(
     [out] String* CAdministration.businessDirector.email);


   SetBusinessDirector.HomePhone(
     [in] Int32 CAdministration.businessDirector.homePhone);

    GetBusinessDirector.HomePhone(
     [out] Int32* CAdministration.businessDirector.homePhone);


   SetBusinessDirector.MobilePhone(
     [in] Int32 CAdministration.businessDirector.mobilePhone);

    GetBusinessDirector.MobilePhone(
     [out] Int32* CAdministration.businessDirector.mobilePhone);


   SetBusinessDirector.WorkPhone(
     [in] Int32 CAdministration.businessDirector.workPhone);

    GetBusinessDirector.WorkPhone(
     [out] Int32* CAdministration.businessDirector.workPhone);


   SetBusinessDirector.ContactedWithDetails(
     [in] ArrayOf<String> CAdministration.businessDirector.contactedWithDetails);

    GetBusinessDirector.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CAdministration.businessDirector.contactedWithDetails);


   SetBusinessDirector.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.businessDirector.businessChannelOwnerId);

    GetBusinessDirector.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.businessDirector.businessChannelOwnerId);


   SetBusinessDirector.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.businessDirector.docRefIds);

    GetBusinessDirector.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.businessDirector.docRefIds);


   SetBusinessDirector.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.businessDirector.imageRefIds);

    GetBusinessDirector.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.businessDirector.imageRefIds);


   SetStaff.EmployeeId(
     [in] String CAdministration.staff.employeeId);

    GetStaff.EmployeeId(
     [out] String* CAdministration.staff.employeeId);


   SetStaff.OurBranchId(
     [in] String CAdministration.staff.ourBranchId);

    GetStaff.OurBranchId(
     [out] String* CAdministration.staff.ourBranchId);


   SetStaff.FirstName(
     [in] String CAdministration.staff.firstName);

    GetStaff.FirstName(
     [out] String* CAdministration.staff.firstName);


   SetStaff.LastName(
     [in] String CAdministration.staff.lastName);

    GetStaff.LastName(
     [out] String* CAdministration.staff.lastName);


   SetStaff.ResidentialAddress(
     [in] String CAdministration.staff.residentialAddress);

    GetStaff.ResidentialAddress(
     [out] String* CAdministration.staff.residentialAddress);


   SetStaff.PostalAddress(
     [in] String CAdministration.staff.postalAddress);

    GetStaff.PostalAddress(
     [out] String* CAdministration.staff.postalAddress);


   SetStaff.Email(
     [in] String CAdministration.staff.email);

    GetStaff.Email(
     [out] String* CAdministration.staff.email);


   SetStaff.HomePhone(
     [in] Int32 CAdministration.staff.homePhone);

    GetStaff.HomePhone(
     [out] Int32* CAdministration.staff.homePhone);


   SetStaff.MobilePhone(
     [in] Int32 CAdministration.staff.mobilePhone);

    GetStaff.MobilePhone(
     [out] Int32* CAdministration.staff.mobilePhone);


   SetStaff.WorkPhone(
     [in] Int32 CAdministration.staff.workPhone);

    GetStaff.WorkPhone(
     [out] Int32* CAdministration.staff.workPhone);


   SetStaff.ATOTFN(
     [in] Int32 CAdministration.staff.aTOTFN);

    GetStaff.ATOTFN(
     [out] Int32* CAdministration.staff.aTOTFN);


   SetStaff.TaxFreeThreshold(
     [in] Boolean CAdministration.staff.taxFreeThreshold);

    GetStaff.TaxFreeThreshold(
     [out] Boolean* CAdministration.staff.taxFreeThreshold);


   SetStaff.DocRefIds(
     [in] ArrayOf<String> CAdministration.staff.docRefIds);

    GetStaff.DocRefIds(
     [out, callee] ArrayOf<String>* CAdministration.staff.docRefIds);


   SetStaff.ContactedWithDetails(
     [in] ArrayOf<String> CAdministration.staff.contactedWithDetails);

    GetStaff.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CAdministration.staff.contactedWithDetails);


   SetStaff.StaffImmedSuperRoleId(
     [in] CAdministration.role CAdministration.staff.staffImmedSuperRoleId);

    GetStaff.StaffImmedSuperRoleId(
     [out] CAdministration.role* CAdministration.staff.staffImmedSuperRoleId);


   SetStaff.PerformanceAgreementDocRefs(
     [in] ArrayOf<CAdministration.documents> CAdministration.staff.performanceAgreementDocRefs);

    GetStaff.PerformanceAgreementDocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.staff.performanceAgreementDocRefs);


   SetStaff.RoleIds(
     [in] ArrayOf<CAdministration.role> CAdministration.staff.roleIds);

    GetStaff.RoleIds(
     [out, callee] ArrayOf<CAdministration.role>* CAdministration.staff.roleIds);


   SetStaff.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.staff.imageRefIds);

    GetStaff.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.staff.imageRefIds);


   SetStaff.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.staff.businessChannelOwnerId);

    GetStaff.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.staff.businessChannelOwnerId);


   SetServicePurchaseRequest.ServicePurchRequestId(
     [in] String CAdministration.servicePurchaseRequest.servicePurchRequestId);

    GetServicePurchaseRequest.ServicePurchRequestId(
     [out] String* CAdministration.servicePurchaseRequest.servicePurchRequestId);


   SetServicePurchaseRequest.MRQIdIfRentalProperty(
     [in] String CAdministration.servicePurchaseRequest.mRQIdIfRentalProperty);

    GetServicePurchaseRequest.MRQIdIfRentalProperty(
     [out] String* CAdministration.servicePurchaseRequest.mRQIdIfRentalProperty);


   SetServicePurchaseRequest.DamageCausedByCustomerTenantOthers(
     [in] Boolean CAdministration.servicePurchaseRequest.damageCausedByCustomerTenantOthers);

    GetServicePurchaseRequest.DamageCausedByCustomerTenantOthers(
     [out] Boolean* CAdministration.servicePurchaseRequest.damageCausedByCustomerTenantOthers);


   SetServicePurchaseRequest.OwnerResponsible(
     [in] Boolean CAdministration.servicePurchaseRequest.ownerResponsible);

    GetServicePurchaseRequest.OwnerResponsible(
     [out] Boolean* CAdministration.servicePurchaseRequest.ownerResponsible);


   SetServicePurchaseRequest.SummaryDescriptionOfProblemItemised(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.summaryDescriptionOfProblemItemised);

    GetServicePurchaseRequest.SummaryDescriptionOfProblemItemised(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.summaryDescriptionOfProblemItemised);


   SetServicePurchaseRequest.JobTypeSequence(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.jobTypeSequence);

    GetServicePurchaseRequest.JobTypeSequence(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.jobTypeSequence);


   SetServicePurchaseRequest.QuoteIdsIn(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.quoteIdsIn);

    GetServicePurchaseRequest.QuoteIdsIn(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.quoteIdsIn);


   SetServicePurchaseRequest.MostAppropriateQuotesReceived(
     [in] ArrayOf<Double> CAdministration.servicePurchaseRequest.mostAppropriateQuotesReceived);

    GetServicePurchaseRequest.MostAppropriateQuotesReceived(
     [out, callee] ArrayOf<Double>* CAdministration.servicePurchaseRequest.mostAppropriateQuotesReceived);


   SetServicePurchaseRequest.QuotesFinalised(
     [in] String CAdministration.servicePurchaseRequest.quotesFinalised);

    GetServicePurchaseRequest.QuotesFinalised(
     [out] String* CAdministration.servicePurchaseRequest.quotesFinalised);


   SetServicePurchaseRequest.RequestsToLandlordDocRefs(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.requestsToLandlordDocRefs);

    GetServicePurchaseRequest.RequestsToLandlordDocRefs(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.requestsToLandlordDocRefs);


   SetServicePurchaseRequest.RequestsSentDates(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.requestsSentDates);

    GetServicePurchaseRequest.RequestsSentDates(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.requestsSentDates);


   SetServicePurchaseRequest.JobTypeSequenceApproved(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.jobTypeSequenceApproved);

    GetServicePurchaseRequest.JobTypeSequenceApproved(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.jobTypeSequenceApproved);


   SetServicePurchaseRequest.TribunalIds(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.tribunalIds);

    GetServicePurchaseRequest.TribunalIds(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.tribunalIds);


   SetServicePurchaseRequest.JobIds(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.jobIds);

    GetServicePurchaseRequest.JobIds(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.jobIds);


   SetServicePurchaseRequest.PurchaseOrderIdSequence(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.purchaseOrderIdSequence);

    GetServicePurchaseRequest.PurchaseOrderIdSequence(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.purchaseOrderIdSequence);


   SetServicePurchaseRequest.PurchaseOrderSupplierIdSequence(
     [in] ArrayOf<String> CAdministration.servicePurchaseRequest.purchaseOrderSupplierIdSequence);

    GetServicePurchaseRequest.PurchaseOrderSupplierIdSequence(
     [out, callee] ArrayOf<String>* CAdministration.servicePurchaseRequest.purchaseOrderSupplierIdSequence);


   SetServicePurchaseRequest.ExpectedCompletionDate(
     [in] String CAdministration.servicePurchaseRequest.expectedCompletionDate);

    GetServicePurchaseRequest.ExpectedCompletionDate(
     [out] String* CAdministration.servicePurchaseRequest.expectedCompletionDate);


   SetServicePurchaseRequest.WorkCheckedPassed(
     [in] ArrayOf<Boolean> CAdministration.servicePurchaseRequest.workCheckedPassed);

    GetServicePurchaseRequest.WorkCheckedPassed(
     [out, callee] ArrayOf<Boolean>* CAdministration.servicePurchaseRequest.workCheckedPassed);


   SetServicePurchaseRequest.TotalMaintPurchOrderAmount(
     [in] Double CAdministration.servicePurchaseRequest.totalMaintPurchOrderAmount);

    GetServicePurchaseRequest.TotalMaintPurchOrderAmount(
     [out] Double* CAdministration.servicePurchaseRequest.totalMaintPurchOrderAmount);


   SetServicePurchaseRequest.MasLedgeFinTxNumsReturned(
     [in] ArrayOf<Int32> CAdministration.servicePurchaseRequest.masLedgeFinTxNumsReturned);

    GetServicePurchaseRequest.MasLedgeFinTxNumsReturned(
     [out, callee] ArrayOf<Int32>* CAdministration.servicePurchaseRequest.masLedgeFinTxNumsReturned);


   SetServicePurchaseRequest.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.servicePurchaseRequest.businessChannelOwnerId);

    GetServicePurchaseRequest.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.servicePurchaseRequest.businessChannelOwnerId);


   SetServicePurchaseRequest.PropertyId(
     [in] CProperty.property CAdministration.servicePurchaseRequest.propertyId);

    GetServicePurchaseRequest.PropertyId(
     [out] CProperty.property* CAdministration.servicePurchaseRequest.propertyId);


   SetServicePurchaseRequest.BranchId(
     [in] CAdministration.branch CAdministration.servicePurchaseRequest.branchId);

    GetServicePurchaseRequest.BranchId(
     [out] CAdministration.branch* CAdministration.servicePurchaseRequest.branchId);


   SetServicePurchaseRequest.DeptId(
     [in] CAdministration.department CAdministration.servicePurchaseRequest.deptId);

    GetServicePurchaseRequest.DeptId(
     [out] CAdministration.department* CAdministration.servicePurchaseRequest.deptId);


   SetServicePurchaseRequest.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CAdministration.servicePurchaseRequest.supplierIds);

    GetServicePurchaseRequest.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CAdministration.servicePurchaseRequest.supplierIds);


   SetServicePurchaseRequest.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CAdministration.servicePurchaseRequest.itemTypeIds);

    GetServicePurchaseRequest.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CAdministration.servicePurchaseRequest.itemTypeIds);


   SetServicePurchaseRequest.JobTypeIds(
     [in] ArrayOf<CAdministration.jobType> CAdministration.servicePurchaseRequest.jobTypeIds);

    GetServicePurchaseRequest.JobTypeIds(
     [out, callee] ArrayOf<CAdministration.jobType>* CAdministration.servicePurchaseRequest.jobTypeIds);


   SetServicePurchaseRequest.ServiceTypeIds(
     [in] ArrayOf<CAdministration.serviceType> CAdministration.servicePurchaseRequest.serviceTypeIds);

    GetServicePurchaseRequest.ServiceTypeIds(
     [out, callee] ArrayOf<CAdministration.serviceType>* CAdministration.servicePurchaseRequest.serviceTypeIds);


   SetServicePurchaseRequest.EmployeesRequestingIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.servicePurchaseRequest.employeesRequestingIds);

    GetServicePurchaseRequest.EmployeesRequestingIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.servicePurchaseRequest.employeesRequestingIds);


   SetServicePurchaseRequest.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.servicePurchaseRequest.docRefIds);

    GetServicePurchaseRequest.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.servicePurchaseRequest.docRefIds);


   SetServicePurchaseRequest.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CAdministration.servicePurchaseRequest.imageRefIds);

    GetServicePurchaseRequest.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CAdministration.servicePurchaseRequest.imageRefIds);


   SetServicePurchaseRequest.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CAdministration.servicePurchaseRequest.audioRefIds);

    GetServicePurchaseRequest.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CAdministration.servicePurchaseRequest.audioRefIds);

   SetTimesheet.TimesheetId(
     [in] String CAdministration.timesheet.timesheetId);

    GetTimesheet.TimesheetId(
     [out] String* CAdministration.timesheet.timesheetId);


   SetTimesheet.RosteredStarts(
     [in] ArrayOf<String> CAdministration.timesheet.rosteredStarts);

    GetTimesheet.RosteredStarts(
     [out, callee] ArrayOf<String>* CAdministration.timesheet.rosteredStarts);


   SetTimesheet.RosteredFinishes(
     [in] ArrayOf<String> CAdministration.timesheet.rosteredFinishes);

    GetTimesheet.RosteredFinishes(
     [out, callee] ArrayOf<String>* CAdministration.timesheet.rosteredFinishes);


   SetTimesheet.ActualStarts(
     [in] ArrayOf<String> CAdministration.timesheet.actualStarts);

    GetTimesheet.ActualStarts(
     [out, callee] ArrayOf<String>* CAdministration.timesheet.actualStarts);


   SetTimesheet.ActualFinishes(
     [in] ArrayOf<String> CAdministration.timesheet.actualFinishes);

    GetTimesheet.ActualFinishes(
     [out, callee] ArrayOf<String>* CAdministration.timesheet.actualFinishes);


   SetTimesheet.Submitted(
     [in] String CAdministration.timesheet.submitted);

    GetTimesheet.Submitted(
     [out] String* CAdministration.timesheet.submitted);


   SetTimesheet.Checked(
     [in] String CAdministration.timesheet.checked);

    GetTimesheet.Checked(
     [out] String* CAdministration.timesheet.checked);


   SetTimesheet.Passed(
     [in] Boolean CAdministration.timesheet.passed);

    GetTimesheet.Passed(
     [out] Boolean* CAdministration.timesheet.passed);


   SetTimesheet.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.timesheet.businessChannelOwnerId);

    GetTimesheet.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.timesheet.businessChannelOwnerId);


   SetTimesheet.EmployeeIds(
     [in] ArrayOf<CAdministration.staff> CAdministration.timesheet.employeeIds);

    GetTimesheet.EmployeeIds(
     [out, callee] ArrayOf<CAdministration.staff>* CAdministration.timesheet.employeeIds);


   SetTimesheet.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.timesheet.docRefIds);

    GetTimesheet.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.timesheet.docRefIds);


   SetTimesheet.BranchId(
     [in] CAdministration.branch CAdministration.timesheet.branchId);

    GetTimesheet.BranchId(
     [out] CAdministration.branch* CAdministration.timesheet.branchId);


   SetWaitQueue.WaitQueueId(
     [in] String CAdministration.waitQueue.waitQueueId);

    GetWaitQueue.WaitQueueId(
     [out] String* CAdministration.waitQueue.waitQueueId);


   SetWaitQueue.QueueName(
     [in] String CAdministration.waitQueue.queueName);

    GetWaitQueue.QueueName(
     [out] String* CAdministration.waitQueue.queueName);


   SetWaitQueue.QueueCode(
     [in] String CAdministration.waitQueue.queueCode);

    GetWaitQueue.QueueCode(
     [out] String* CAdministration.waitQueue.queueCode);


   SetWaitQueue.QueueDescription(
     [in] String CAdministration.waitQueue.queueDescription);

    GetWaitQueue.QueueDescription(
     [out] String* CAdministration.waitQueue.queueDescription);


   SetWaitQueue.Notes(
     [in] String CAdministration.waitQueue.notes);

    GetWaitQueue.Notes(
     [out] String* CAdministration.waitQueue.notes);


   SetWaitQueue.AusState(
     [in] CHelper.ausState CAdministration.waitQueue.ausState);

    GetWaitQueue.AusState(
     [out] CHelper.ausState* CAdministration.waitQueue.ausState);


   SetWaitQueue.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CAdministration.waitQueue.businessChannelOwnerId);

    GetWaitQueue.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CAdministration.waitQueue.businessChannelOwnerId);


   SetWaitQueue.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CAdministration.waitQueue.docRefIds);

    GetWaitQueue.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CAdministration.waitQueue.docRefIds);


   SetBank.BankId(
     [in] String CFinance.bank.bankId);

    GetBank.BankId(
     [out] String* CFinance.bank.bankId);


   SetBank.BankName(
     [in] String CFinance.bank.bankName);

    GetBank.BankName(
     [out] String* CFinance.bank.bankName);


   SetBank.OurBranchBSB(
     [in] Int32 CFinance.bank.ourBranchBSB);

    GetBank.OurBranchBSB(
     [out] Int32* CFinance.bank.ourBranchBSB);


   SetBank.OurBranchName(
     [in] String CFinance.bank.ourBranchName);

    GetBank.OurBranchName(
     [out] String* CFinance.bank.ourBranchName);


   SetBank.LinkedToThisSupplierId(
     [in] String CFinance.bank.linkedToThisSupplierId);

    GetBank.LinkedToThisSupplierId(
     [out] String* CFinance.bank.linkedToThisSupplierId);


   SetBank.LinkedToThisCustomerId(
     [in] String CFinance.bank.linkedToThisCustomerId);

    GetBank.LinkedToThisCustomerId(
     [out] String* CFinance.bank.linkedToThisCustomerId);


   SetBank.ContactFirstNameList(
     [in] ArrayOf<String> CFinance.bank.contactFirstNameList);

    GetBank.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CFinance.bank.contactFirstNameList);


   SetBank.ContactLastNameList(
     [in] ArrayOf<String> CFinance.bank.contactLastNameList);

    GetBank.ContactLastNameList(
     [out, callee] ArrayOf<String>* CFinance.bank.contactLastNameList);


   SetBank.EmailAddresses(
     [in] ArrayOf<String> CFinance.bank.emailAddresses);

    GetBank.EmailAddresses(
     [out, callee] ArrayOf<String>* CFinance.bank.emailAddresses);


   SetBank.MobilePhone(
     [in] ArrayOf<Int32> CFinance.bank.mobilePhone);

    GetBank.MobilePhone(
     [out, callee] ArrayOf<Int32>* CFinance.bank.mobilePhone);


   SetBank.WorkPhone(
     [in] ArrayOf<Int32> CFinance.bank.workPhone);

    GetBank.WorkPhone(
     [out, callee] ArrayOf<Int32>* CFinance.bank.workPhone);


   SetBank.ContactedWithDetails(
     [in] ArrayOf<String> CFinance.bank.contactedWithDetails);

    GetBank.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CFinance.bank.contactedWithDetails);


   SetBank.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFinance.bank.docRefIds);

    GetBank.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.bank.docRefIds);


   SetBank.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFinance.bank.imageRefIds);

    GetBank.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFinance.bank.imageRefIds);


   SetBank.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.bank.businessChannelOwnerId);

    GetBank.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.bank.businessChannelOwnerId);


   SetCentrelink.CentrelinkId(
     [in] String CFinance.centrelink.centrelinkId);

    GetCentrelink.CentrelinkId(
     [out] String* CFinance.centrelink.centrelinkId);


   SetCentrelink.ContactFirstNameList(
     [in] ArrayOf<String> CFinance.centrelink.contactFirstNameList);

    GetCentrelink.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CFinance.centrelink.contactFirstNameList);


   SetCentrelink.ContactLastNameList(
     [in] ArrayOf<String> CFinance.centrelink.contactLastNameList);

    GetCentrelink.ContactLastNameList(
     [out, callee] ArrayOf<String>* CFinance.centrelink.contactLastNameList);


   SetCentrelink.StreetAddress(
     [in] String CFinance.centrelink.streetAddress);

    GetCentrelink.StreetAddress(
     [out] String* CFinance.centrelink.streetAddress);


   SetCentrelink.PostalAddress(
     [in] String CFinance.centrelink.postalAddress);

    GetCentrelink.PostalAddress(
     [out] String* CFinance.centrelink.postalAddress);


   SetCentrelink.EmailAddresses(
     [in] ArrayOf<String> CFinance.centrelink.emailAddresses);

    GetCentrelink.EmailAddresses(
     [out, callee] ArrayOf<String>* CFinance.centrelink.emailAddresses);


   SetCentrelink.MobilePhone(
     [in] ArrayOf<Int32> CFinance.centrelink.mobilePhone);

    GetCentrelink.MobilePhone(
     [out, callee] ArrayOf<Int32>* CFinance.centrelink.mobilePhone);


   SetCentrelink.WorkPhone(
     [in] ArrayOf<Int32> CFinance.centrelink.workPhone);

    GetCentrelink.WorkPhone(
     [out, callee] ArrayOf<Int32>* CFinance.centrelink.workPhone);


   SetCentrelink.Details(
     [in] String CFinance.centrelink.details);

    GetCentrelink.Details(
     [out] String* CFinance.centrelink.details);


   SetCentrelink.ContactedWithDetails(
     [in] ArrayOf<String> CFinance.centrelink.contactedWithDetails);

    GetCentrelink.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CFinance.centrelink.contactedWithDetails);


   SetCentrelink.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.centrelink.businessChannelOwnerId);

    GetCentrelink.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.centrelink.businessChannelOwnerId);


   SetCentrelink.BranchId(
     [in] CAdministration.branch CFinance.centrelink.branchId);

    GetCentrelink.BranchId(
     [out] CAdministration.branch* CFinance.centrelink.branchId);


   SetCentrelink.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFinance.centrelink.docRefIds);

    GetCentrelink.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.centrelink.docRefIds);


   SetCentrelink.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFinance.centrelink.imageRefIds);

    GetCentrelink.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFinance.centrelink.imageRefIds);


   SetMasterAssetRegister.MasterAssetId(
     [in] String CFinance.masterAssetRegister.masterAssetId);

    GetMasterAssetRegister.MasterAssetId(
     [out] String* CFinance.masterAssetRegister.masterAssetId);


   SetMasterAssetRegister.AssetTypeId(
     [in] String CFinance.masterAssetRegister.assetTypeId);

    GetMasterAssetRegister.AssetTypeId(
     [out] String* CFinance.masterAssetRegister.assetTypeId);


   SetMasterAssetRegister.AssetName(
     [in] String CFinance.masterAssetRegister.assetName);

    GetMasterAssetRegister.AssetName(
     [out] String* CFinance.masterAssetRegister.assetName);


   SetMasterAssetRegister.AssetDescription(
     [in] String CFinance.masterAssetRegister.assetDescription);

    GetMasterAssetRegister.AssetDescription(
     [out] String* CFinance.masterAssetRegister.assetDescription);


   SetMasterAssetRegister.OWDV(
     [in] Double CFinance.masterAssetRegister.OWDV);

    GetMasterAssetRegister.OWDV(
     [out] Double* CFinance.masterAssetRegister.OWDV);


   SetMasterAssetRegister.CapitalImprovements(
     [in] Double CFinance.masterAssetRegister.capitalImprovements);

    GetMasterAssetRegister.CapitalImprovements(
     [out] Double* CFinance.masterAssetRegister.capitalImprovements);


   SetMasterAssetRegister.Depreciation(
     [in] Double CFinance.masterAssetRegister.depreciation);

    GetMasterAssetRegister.Depreciation(
     [out] Double* CFinance.masterAssetRegister.depreciation);


   SetMasterAssetRegister.CWDV(
     [in] Double CFinance.masterAssetRegister.CWDV);

    GetMasterAssetRegister.CWDV(
     [out] Double* CFinance.masterAssetRegister.CWDV);


   SetMasterAssetRegister.LastInspectionService(
     [in] String CFinance.masterAssetRegister.lastInspectionService);

    GetMasterAssetRegister.LastInspectionService(
     [out] String* CFinance.masterAssetRegister.lastInspectionService);


   SetMasterAssetRegister.ThisInspectionService(
     [in] String CFinance.masterAssetRegister.thisInspectionService);

    GetMasterAssetRegister.ThisInspectionService(
     [out] String* CFinance.masterAssetRegister.thisInspectionService);


   SetMasterAssetRegister.Sequ(
     [in] String CFinance.masterAssetRegister.Sequ);

    GetMasterAssetRegister.Sequ(
     [out] String* CFinance.masterAssetRegister.Sequ);


   SetMasterAssetRegister.NextInspectionService(
     [in] String CFinance.masterAssetRegister.nextInspectionService);

    GetMasterAssetRegister.NextInspectionService(
     [out] String* CFinance.masterAssetRegister.nextInspectionService);


   SetMasterAssetRegister.ValueOfN(
     [in] Int32 CFinance.masterAssetRegister.valueOfN);

    GetMasterAssetRegister.ValueOfN(
     [out] Int32* CFinance.masterAssetRegister.valueOfN);


   SetMasterAssetRegister.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterAssetRegister.businessChannelOwnerId);

    GetMasterAssetRegister.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterAssetRegister.businessChannelOwnerId);


   SetMasterAssetRegister.DocRefs(
     [in] ArrayOf<CAdministration.documents> CFinance.masterAssetRegister.docRefs);

    GetMasterAssetRegister.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.masterAssetRegister.docRefs);


   SetMasterAssetRegister.ImageRefs(
     [in] ArrayOf<CAdministration.images> CFinance.masterAssetRegister.imageRefs);

    GetMasterAssetRegister.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CFinance.masterAssetRegister.imageRefs);


   SetMasterAssetRegister.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CFinance.masterAssetRegister.audioRefIds);

    GetMasterAssetRegister.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CFinance.masterAssetRegister.audioRefIds);


   SetMasterAssetRegister.VideoRefs(
     [in] ArrayOf<CAdministration.video> CFinance.masterAssetRegister.videoRefs);

    GetMasterAssetRegister.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CFinance.masterAssetRegister.videoRefs);


   SetMasterAssetRegister.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterAssetRegister.chartOfAccountsId);

    GetMasterAssetRegister.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterAssetRegister.chartOfAccountsId);


   SetMasterAssetRegister.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterAssetRegister.chartOfClassesId);

    GetMasterAssetRegister.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterAssetRegister.chartOfClassesId);


   SetMasterAssetRegister.BranchId(
     [in] CAdministration.branch CFinance.masterAssetRegister.branchId);

    GetMasterAssetRegister.BranchId(
     [out] CAdministration.branch* CFinance.masterAssetRegister.branchId);


   SetMasterAssetRegister.DeptId(
     [in] CAdministration.department CFinance.masterAssetRegister.deptId);

    GetMasterAssetRegister.DeptId(
     [out] CAdministration.department* CFinance.masterAssetRegister.deptId);


   SetMasterAssetRegister.MasterAssetTypeId(
     [in] CFinance.masterAssetType CFinance.masterAssetRegister.masterAssetTypeId);

    GetMasterAssetRegister.MasterAssetTypeId(
     [out] CFinance.masterAssetType* CFinance.masterAssetRegister.masterAssetTypeId);


   SetMasterAssetType.MasterAssetTypeId(
     [in] String CFinance.masterAssetType.masterAssetTypeId);

    GetMasterAssetType.MasterAssetTypeId(
     [out] String* CFinance.masterAssetType.masterAssetTypeId);


   SetMasterAssetType.AssetName(
     [in] String CFinance.masterAssetType.assetName);

    GetMasterAssetType.AssetName(
     [out] String* CFinance.masterAssetType.assetName);


   SetMasterAssetType.AssetDescription(
     [in] String CFinance.masterAssetType.assetDescription);

    GetMasterAssetType.AssetDescription(
     [out] String* CFinance.masterAssetType.assetDescription);


   SetMasterAssetType.InspectionTerm(
     [in] CHelper.inspectionTerm CFinance.masterAssetType.inspectionTerm);

    GetMasterAssetType.InspectionTerm(
     [out] CHelper.inspectionTerm* CFinance.masterAssetType.inspectionTerm);


   SetMasterAssetType.ValueOfN(
     [in] Int32 CFinance.masterAssetType.valueOfN);

    GetMasterAssetType.ValueOfN(
     [out] Int32* CFinance.masterAssetType.valueOfN);


   SetMasterAssetType.DocRefs(
     [in] ArrayOf<CAdministration.documents> CFinance.masterAssetType.docRefs);

    GetMasterAssetType.DocRefs(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.masterAssetType.docRefs);


   SetMasterAssetType.ImageRefs(
     [in] ArrayOf<CAdministration.images> CFinance.masterAssetType.imageRefs);

    GetMasterAssetType.ImageRefs(
     [out, callee] ArrayOf<CAdministration.images>* CFinance.masterAssetType.imageRefs);


   SetMasterAssetType.AudioRefIds(
     [in] ArrayOf<CAdministration.audio> CFinance.masterAssetType.audioRefIds);

    GetMasterAssetType.AudioRefIds(
     [out, callee] ArrayOf<CAdministration.audio>* CFinance.masterAssetType.audioRefIds);


   SetMasterAssetType.VideoRefs(
     [in] ArrayOf<CAdministration.video> CFinance.masterAssetType.videoRefs);

    GetMasterAssetType.VideoRefs(
     [out, callee] ArrayOf<CAdministration.video>* CFinance.masterAssetType.videoRefs);


   SetMasterAssetType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterAssetType.businessChannelOwnerId);

    GetMasterAssetType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterAssetType.businessChannelOwnerId);


   SetMasterAssetType.BranchId(
     [in] CAdministration.branch CFinance.masterAssetType.branchId);

    GetMasterAssetType.BranchId(
     [out] CAdministration.branch* CFinance.masterAssetType.branchId);


   SetMasterAssetType.DeptId(
     [in] CAdministration.department CFinance.masterAssetType.deptId);

    GetMasterAssetType.DeptId(
     [out] CAdministration.department* CFinance.masterAssetType.deptId);


   SetChartOfAccounts.ChartOfAccountsId(
     [in] String CFinance.chartOfAccounts.chartOfAccountsId);

    GetChartOfAccounts.ChartOfAccountsId(
     [out] String* CFinance.chartOfAccounts.chartOfAccountsId);


   SetChartOfAccounts.LedgerTitle(
     [in] CHelper.ledgerTitle CFinance.chartOfAccounts.ledgerTitle);

    GetChartOfAccounts.LedgerTitle(
     [out] CHelper.ledgerTitle* CFinance.chartOfAccounts.ledgerTitle);


   SetChartOfAccounts.Description(
     [in] String CFinance.chartOfAccounts.description);

    GetChartOfAccounts.Description(
     [out] String* CFinance.chartOfAccounts.description);


   SetChartOfAccounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.chartOfAccounts.businessChannelOwnerId);

    GetChartOfAccounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.chartOfAccounts.businessChannelOwnerId);


   SetChartOfAccounts.Level1AccountsId(
     [in] CFinance.level1Accounts CFinance.chartOfAccounts.level1AccountsId);

    GetChartOfAccounts.Level1AccountsId(
     [out] CFinance.level1Accounts* CFinance.chartOfAccounts.level1AccountsId);


   SetChartOfAccounts.Level2AccountsId(
     [in] CFinance.level2Accounts CFinance.chartOfAccounts.level2AccountsId);

    GetChartOfAccounts.Level2AccountsId(
     [out] CFinance.level2Accounts* CFinance.chartOfAccounts.level2AccountsId);


   SetChartOfAccounts.Level3AccountsId(
     [in] CFinance.level3Accounts CFinance.chartOfAccounts.level3AccountsId);

    GetChartOfAccounts.Level3AccountsId(
     [out] CFinance.level3Accounts* CFinance.chartOfAccounts.level3AccountsId);


   SetChartOfAccounts.Level4AccountsId(
     [in] CFinance.level4Accounts CFinance.chartOfAccounts.level4AccountsId);

    GetChartOfAccounts.Level4AccountsId(
     [out] CFinance.level4Accounts* CFinance.chartOfAccounts.level4AccountsId);


   SetChartOfAccounts.Level5AccountsId(
     [in] CFinance.level5Accounts CFinance.chartOfAccounts.level5AccountsId);

    GetChartOfAccounts.Level5AccountsId(
     [out] CFinance.level5Accounts* CFinance.chartOfAccounts.level5AccountsId);


   SetChartOfAccounts.Level6AccountsId(
     [in] CFinance.level6Accounts CFinance.chartOfAccounts.level6AccountsId);

    GetChartOfAccounts.Level6AccountsId(
     [out] CFinance.level6Accounts* CFinance.chartOfAccounts.level6AccountsId);


   SetLevel1Accounts.Level1AccountsId(
     [in] String CFinance.level1Accounts.level1AccountsId);

    GetLevel1Accounts.Level1AccountsId(
     [out] String* CFinance.level1Accounts.level1AccountsId);


   SetLevel1Accounts.Description(
     [in] String CFinance.level1Accounts.description);

    GetLevel1Accounts.Description(
     [out] String* CFinance.level1Accounts.description);


   SetLevel1Accounts.Level1AccountsName(
     [in] String CFinance.level1Accounts.level1AccountsName);

    GetLevel1Accounts.Level1AccountsName(
     [out] String* CFinance.level1Accounts.level1AccountsName);


   SetLevel1Accounts.Level1AccountsNum(
     [in] String CFinance.level1Accounts.level1AccountsNum);

    GetLevel1Accounts.Level1AccountsNum(
     [out] String* CFinance.level1Accounts.level1AccountsNum);


   SetLevel1Accounts.AssocLedger(
     [in] CHelper.ledgerTitle CFinance.level1Accounts.assocLedger);

    GetLevel1Accounts.AssocLedger(
     [out] CHelper.ledgerTitle* CFinance.level1Accounts.assocLedger);


   SetLevel1Accounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level1Accounts.businessChannelOwnerId);

    GetLevel1Accounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level1Accounts.businessChannelOwnerId);


   SetLevel2Accounts.Level2AccountsId(
     [in] String CFinance.level2Accounts.level2AccountsId);

    GetLevel2Accounts.Level2AccountsId(
     [out] String* CFinance.level2Accounts.level2AccountsId);


   SetLevel2Accounts.Description(
     [in] String CFinance.level2Accounts.description);

    GetLevel2Accounts.Description(
     [out] String* CFinance.level2Accounts.description);


   SetLevel2Accounts.Level2AccountsName(
     [in] String CFinance.level2Accounts.level2AccountsName);

    GetLevel2Accounts.Level2AccountsName(
     [out] String* CFinance.level2Accounts.level2AccountsName);


   SetLevel2Accounts.Level2AccountsNum(
     [in] String CFinance.level2Accounts.level2AccountsNum);

    GetLevel2Accounts.Level2AccountsNum(
     [out] String* CFinance.level2Accounts.level2AccountsNum);


   SetLevel2Accounts.AssocLedger(
     [in] CHelper.ledgerTitle CFinance.level2Accounts.assocLedger);

    GetLevel2Accounts.AssocLedger(
     [out] CHelper.ledgerTitle* CFinance.level2Accounts.assocLedger);


   SetLevel2Accounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level2Accounts.businessChannelOwnerId);

    GetLevel2Accounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level2Accounts.businessChannelOwnerId);


   SetLevel2Accounts.Level1AccountsId(
     [in] CFinance.level1Accounts CFinance.level2Accounts.level1AccountsId);

    GetLevel2Accounts.Level1AccountsId(
     [out] CFinance.level1Accounts* CFinance.level2Accounts.level1AccountsId);


   SetLevel3Accounts.Level3AccountsId(
     [in] String CFinance.level3Accounts.level3AccountsId);

    GetLevel3Accounts.Level3AccountsId(
     [out] String* CFinance.level3Accounts.level3AccountsId);


   SetLevel3Accounts.Description(
     [in] String CFinance.level3Accounts.description);

    GetLevel3Accounts.Description(
     [out] String* CFinance.level3Accounts.description);


   SetLevel3Accounts.Level3AccountsName(
     [in] String CFinance.level3Accounts.level3AccountsName);

    GetLevel3Accounts.Level3AccountsName(
     [out] String* CFinance.level3Accounts.level3AccountsName);


   SetLevel3Accounts.Level3AccountsNum(
     [in] String CFinance.level3Accounts.level3AccountsNum);

    GetLevel3Accounts.Level3AccountsNum(
     [out] String* CFinance.level3Accounts.level3AccountsNum);


   SetLevel3Accounts.AssocLedger(
     [in] CHelper.ledgerTitle CFinance.level3Accounts.assocLedger);

    GetLevel3Accounts.AssocLedger(
     [out] CHelper.ledgerTitle* CFinance.level3Accounts.assocLedger);


   SetLevel3Accounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level3Accounts.businessChannelOwnerId);

    GetLevel3Accounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level3Accounts.businessChannelOwnerId);


   SetLevel3Accounts.Level2AccountsId(
     [in] CFinance.level2Accounts CFinance.level3Accounts.level2AccountsId);

    GetLevel3Accounts.Level2AccountsId(
     [out] CFinance.level2Accounts* CFinance.level3Accounts.level2AccountsId);


   SetLevel4Accounts.Level4AccountsId(
     [in] String CFinance.level4Accounts.level4AccountsId);

    GetLevel4Accounts.Level4AccountsId(
     [out] String* CFinance.level4Accounts.level4AccountsId);


   SetLevel4Accounts.Description(
     [in] String CFinance.level4Accounts.description);

    GetLevel4Accounts.Description(
     [out] String* CFinance.level4Accounts.description);


   SetLevel4Accounts.Level4AccountsName(
     [in] String CFinance.level4Accounts.level4AccountsName);

    GetLevel4Accounts.Level4AccountsName(
     [out] String* CFinance.level4Accounts.level4AccountsName);


   SetLevel4Accounts.Level4AccountsNum(
     [in] String CFinance.level4Accounts.level4AccountsNum);

    GetLevel4Accounts.Level4AccountsNum(
     [out] String* CFinance.level4Accounts.level4AccountsNum);


   SetLevel4Accounts.AssocLedger(
     [in] CHelper.ledgerTitle CFinance.level4Accounts.assocLedger);

    GetLevel4Accounts.AssocLedger(
     [out] CHelper.ledgerTitle* CFinance.level4Accounts.assocLedger);


   SetLevel4Accounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level4Accounts.businessChannelOwnerId);

    GetLevel4Accounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level4Accounts.businessChannelOwnerId);


   SetLevel4Accounts.Level3AccountsId(
     [in] CFinance.level3Accounts CFinance.level4Accounts.level3AccountsId);

    GetLevel4Accounts.Level3AccountsId(
     [out] CFinance.level3Accounts* CFinance.level4Accounts.level3AccountsId);


   SetLevel5Accounts.Level5AccountsId(
     [in] String CFinance.level5Accounts.level5AccountsId);

    GetLevel5Accounts.Level5AccountsId(
     [out] String* CFinance.level5Accounts.level5AccountsId);


   SetLevel5Accounts.Description(
     [in] String CFinance.level5Accounts.description);

    GetLevel5Accounts.Description(
     [out] String* CFinance.level5Accounts.description);


   SetLevel5Accounts.Level5AccountsName(
     [in] String CFinance.level5Accounts.level5AccountsName);

    GetLevel5Accounts.Level5AccountsName(
     [out] String* CFinance.level5Accounts.level5AccountsName);


   SetLevel5Accounts.Level5AccountsNum(
     [in] String CFinance.level5Accounts.level5AccountsNum);

    GetLevel5Accounts.Level5AccountsNum(
     [out] String* CFinance.level5Accounts.level5AccountsNum);


   SetLevel5Accounts.AssocLedger(
     [in] CHelper.ledgerTitle CFinance.level5Accounts.assocLedger);

    GetLevel5Accounts.AssocLedger(
     [out] CHelper.ledgerTitle* CFinance.level5Accounts.assocLedger);


   SetLevel5Accounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level5Accounts.businessChannelOwnerId);

    GetLevel5Accounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level5Accounts.businessChannelOwnerId);


   SetLevel5Accounts.Level4AccountsId(
     [in] CFinance.level4Accounts CFinance.level5Accounts.level4AccountsId);

    GetLevel5Accounts.Level4AccountsId(
     [out] CFinance.level4Accounts* CFinance.level5Accounts.level4AccountsId);


   SetLevel6Accounts.Level6AccountsId(
     [in] String CFinance.level6Accounts.level6AccountsId);

    GetLevel6Accounts.Level6AccountsId(
     [out] String* CFinance.level6Accounts.level6AccountsId);


   SetLevel6Accounts.Description(
     [in] String CFinance.level6Accounts.description);

    GetLevel6Accounts.Description(
     [out] String* CFinance.level6Accounts.description);


   SetLevel6Accounts.Level6AccountsName(
     [in] String CFinance.level6Accounts.level6AccountsName);

    GetLevel6Accounts.Level6AccountsName(
     [out] String* CFinance.level6Accounts.level6AccountsName);


   SetLevel6Accounts.Level6AccountsNum(
     [in] String CFinance.level6Accounts.level6AccountsNum);

    GetLevel6Accounts.Level6AccountsNum(
     [out] String* CFinance.level6Accounts.level6AccountsNum);


   SetLevel6Accounts.AssocLedger(
     [in] CHelper.ledgerTitle CFinance.level6Accounts.assocLedger);

    GetLevel6Accounts.AssocLedger(
     [out] CHelper.ledgerTitle* CFinance.level6Accounts.assocLedger);


   SetLevel6Accounts.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level6Accounts.businessChannelOwnerId);

    GetLevel6Accounts.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level6Accounts.businessChannelOwnerId);


   SetLevel6Accounts.Level5AccountsId(
     [in] CFinance.level5Accounts CFinance.level6Accounts.level5AccountsId);

    GetLevel6Accounts.Level5AccountsId(
     [out] CFinance.level5Accounts* CFinance.level6Accounts.level5AccountsId);


   SetChartOfClasses.ChartOfClassesId(
     [in] String CFinance.chartOfClasses.chartOfClassesId);

    GetChartOfClasses.ChartOfClassesId(
     [out] String* CFinance.chartOfClasses.chartOfClassesId);


   SetChartOfClasses.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.chartOfClasses.businessChannelOwnerId);

    GetChartOfClasses.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.chartOfClasses.businessChannelOwnerId);


   SetChartOfClasses.Level1ClassId(
     [in] CFinance.level1Class CFinance.chartOfClasses.level1ClassId);

    GetChartOfClasses.Level1ClassId(
     [out] CFinance.level1Class* CFinance.chartOfClasses.level1ClassId);


   SetChartOfClasses.Level2ClassId(
     [in] CFinance.level2Class CFinance.chartOfClasses.level2ClassId);

    GetChartOfClasses.Level2ClassId(
     [out] CFinance.level2Class* CFinance.chartOfClasses.level2ClassId);


   SetChartOfClasses.Level3ClassId(
     [in] CFinance.level3Class CFinance.chartOfClasses.level3ClassId);

    GetChartOfClasses.Level3ClassId(
     [out] CFinance.level3Class* CFinance.chartOfClasses.level3ClassId);


   SetLevel1Class.Level1ClassId(
     [in] String CFinance.level1Class.level1ClassId);

    GetLevel1Class.Level1ClassId(
     [out] String* CFinance.level1Class.level1ClassId);


   SetLevel1Class.Description(
     [in] String CFinance.level1Class.description);

    GetLevel1Class.Description(
     [out] String* CFinance.level1Class.description);


   SetLevel1Class.ClassName(
     [in] String CFinance.level1Class.className);

    GetLevel1Class.ClassName(
     [out] String* CFinance.level1Class.className);


   SetLevel1Class.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level1Class.businessChannelOwnerId);

    GetLevel1Class.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level1Class.businessChannelOwnerId);


   SetLevel2Class.Level2ClassId(
     [in] String CFinance.level2Class.level2ClassId);

    GetLevel2Class.Level2ClassId(
     [out] String* CFinance.level2Class.level2ClassId);


   SetLevel2Class.Description(
     [in] String CFinance.level2Class.description);

    GetLevel2Class.Description(
     [out] String* CFinance.level2Class.description);


   SetLevel2Class.ClassName(
     [in] String CFinance.level2Class.className);

    GetLevel2Class.ClassName(
     [out] String* CFinance.level2Class.className);


   SetLevel2Class.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level2Class.businessChannelOwnerId);

    GetLevel2Class.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level2Class.businessChannelOwnerId);


   SetLevel2Class.Level1ClassId(
     [in] CFinance.level1Class CFinance.level2Class.level1ClassId);

    GetLevel2Class.Level1ClassId(
     [out] CFinance.level1Class* CFinance.level2Class.level1ClassId);


   SetLevel3Class.Level3ClassId(
     [in] String CFinance.level3Class.level3ClassId);

    GetLevel3Class.Level3ClassId(
     [out] String* CFinance.level3Class.level3ClassId);


   SetLevel3Class.Description(
     [in] String CFinance.level3Class.description);

    GetLevel3Class.Description(
     [out] String* CFinance.level3Class.description);


   SetLevel3Class.ClassName(
     [in] String CFinance.level3Class.className);

    GetLevel3Class.ClassName(
     [out] String* CFinance.level3Class.className);


   SetLevel3Class.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level3Class.businessChannelOwnerId);

    GetLevel3Class.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level3Class.businessChannelOwnerId);


   SetLevel3Class.Level2ClassId(
     [in] CFinance.level2Class CFinance.level3Class.level2ClassId);

    GetLevel3Class.Level2ClassId(
     [out] CFinance.level2Class* CFinance.level3Class.level2ClassId);


   SetMasterLedgerFinTxJoin.MasLedgeFinTxJoinId(
     [in] String CFinance.masterLedgerFinTxJoin.masLedgeFinTxJoinId);

    GetMasterLedgerFinTxJoin.MasLedgeFinTxJoinId(
     [out] String* CFinance.masterLedgerFinTxJoin.masLedgeFinTxJoinId);


   SetMasterLedgerFinTxJoin.MasLedgeFinTxIds(
     [in] ArrayOf<String> CFinance.masterLedgerFinTxJoin.masLedgeFinTxIds);

    GetMasterLedgerFinTxJoin.MasLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerFinTxJoin.masLedgeFinTxIds);


   SetMasterLedgerFinTxJoin.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerFinTxJoin.masLedgeFinTxNum);

    GetMasterLedgerFinTxJoin.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerFinTxJoin.masLedgeFinTxNum);


   SetMasterLedgerFinTxJoin.CreditedAccountIds(
     [in] ArrayOf<String> CFinance.masterLedgerFinTxJoin.creditedAccountIds);

    GetMasterLedgerFinTxJoin.CreditedAccountIds(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerFinTxJoin.creditedAccountIds);


   SetMasterLedgerFinTxJoin.DebitedAccountIds(
     [in] ArrayOf<String> CFinance.masterLedgerFinTxJoin.debitedAccountIds);

    GetMasterLedgerFinTxJoin.DebitedAccountIds(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerFinTxJoin.debitedAccountIds);


   SetMasterLedgerFinTxJoin.CreditedClassIds(
     [in] ArrayOf<String> CFinance.masterLedgerFinTxJoin.creditedClassIds);

    GetMasterLedgerFinTxJoin.CreditedClassIds(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerFinTxJoin.creditedClassIds);


   SetMasterLedgerFinTxJoin.DebitedClassIds(
     [in] ArrayOf<String> CFinance.masterLedgerFinTxJoin.debitedClassIds);

    GetMasterLedgerFinTxJoin.DebitedClassIds(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerFinTxJoin.debitedClassIds);


   SetMasterLedgerFinTxJoin.CreditedAmounts(
     [in] ArrayOf<Double> CFinance.masterLedgerFinTxJoin.creditedAmounts);

    GetMasterLedgerFinTxJoin.CreditedAmounts(
     [out, callee] ArrayOf<Double>* CFinance.masterLedgerFinTxJoin.creditedAmounts);


   SetMasterLedgerFinTxJoin.DebitedAmounts(
     [in] ArrayOf<Double> CFinance.masterLedgerFinTxJoin.debitedAmounts);

    GetMasterLedgerFinTxJoin.DebitedAmounts(
     [out, callee] ArrayOf<Double>* CFinance.masterLedgerFinTxJoin.debitedAmounts);


   SetMasterLedgerFinTxJoin.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerFinTxJoin.businessChannelOwnerId);

    GetMasterLedgerFinTxJoin.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerFinTxJoin.businessChannelOwnerId);


   SetMasterLedgerAsset.MasterLedgerAssetId(
     [in] String CFinance.masterLedgerAsset.masterLedgerAssetId);

    GetMasterLedgerAsset.MasterLedgerAssetId(
     [out] String* CFinance.masterLedgerAsset.masterLedgerAssetId);


   SetMasterLedgerAsset.BankBSB(
     [in] String CFinance.masterLedgerAsset.bankBSB);

    GetMasterLedgerAsset.BankBSB(
     [out] String* CFinance.masterLedgerAsset.bankBSB);


   SetMasterLedgerAsset.BankAccountNumber(
     [in] String CFinance.masterLedgerAsset.bankAccountNumber);

    GetMasterLedgerAsset.BankAccountNumber(
     [out] String* CFinance.masterLedgerAsset.bankAccountNumber);


   SetMasterLedgerAsset.NameOnBankAccount(
     [in] String CFinance.masterLedgerAsset.nameOnBankAccount);

    GetMasterLedgerAsset.NameOnBankAccount(
     [out] String* CFinance.masterLedgerAsset.nameOnBankAccount);


   SetMasterLedgerAsset.Description(
     [in] String CFinance.masterLedgerAsset.description);

    GetMasterLedgerAsset.Description(
     [out] String* CFinance.masterLedgerAsset.description);


   SetMasterLedgerAsset.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerAsset.docRefs);

    GetMasterLedgerAsset.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerAsset.docRefs);


   SetMasterLedgerAsset.FeeId(
     [in] String CFinance.masterLedgerAsset.feeId);

    GetMasterLedgerAsset.FeeId(
     [out] String* CFinance.masterLedgerAsset.feeId);


   SetMasterLedgerAsset.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerAsset.masLedgeFinTxNum);

    GetMasterLedgerAsset.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerAsset.masLedgeFinTxNum);


   SetMasterLedgerAsset.Level1AccountName(
     [in] String CFinance.masterLedgerAsset.level1AccountName);

    GetMasterLedgerAsset.Level1AccountName(
     [out] String* CFinance.masterLedgerAsset.level1AccountName);


   SetMasterLedgerAsset.Level1AccountNum(
     [in] String CFinance.masterLedgerAsset.level1AccountNum);

    GetMasterLedgerAsset.Level1AccountNum(
     [out] String* CFinance.masterLedgerAsset.level1AccountNum);


   SetMasterLedgerAsset.Level2AccountName(
     [in] String CFinance.masterLedgerAsset.level2AccountName);

    GetMasterLedgerAsset.Level2AccountName(
     [out] String* CFinance.masterLedgerAsset.level2AccountName);


   SetMasterLedgerAsset.Level2AccountNum(
     [in] String CFinance.masterLedgerAsset.level2AccountNum);

    GetMasterLedgerAsset.Level2AccountNum(
     [out] String* CFinance.masterLedgerAsset.level2AccountNum);


   SetMasterLedgerAsset.Level3AccountName(
     [in] String CFinance.masterLedgerAsset.level3AccountName);

    GetMasterLedgerAsset.Level3AccountName(
     [out] String* CFinance.masterLedgerAsset.level3AccountName);


   SetMasterLedgerAsset.Level3AccountNum(
     [in] String CFinance.masterLedgerAsset.level3AccountNum);

    GetMasterLedgerAsset.Level3AccountNum(
     [out] String* CFinance.masterLedgerAsset.level3AccountNum);


   SetMasterLedgerAsset.Level4AccountName(
     [in] String CFinance.masterLedgerAsset.level4AccountName);

    GetMasterLedgerAsset.Level4AccountName(
     [out] String* CFinance.masterLedgerAsset.level4AccountName);


   SetMasterLedgerAsset.Level4AccountNum(
     [in] String CFinance.masterLedgerAsset.level4AccountNum);

    GetMasterLedgerAsset.Level4AccountNum(
     [out] String* CFinance.masterLedgerAsset.level4AccountNum);


   SetMasterLedgerAsset.Level5AccountName(
     [in] String CFinance.masterLedgerAsset.level5AccountName);

    GetMasterLedgerAsset.Level5AccountName(
     [out] String* CFinance.masterLedgerAsset.level5AccountName);


   SetMasterLedgerAsset.Level5AccountNum(
     [in] String CFinance.masterLedgerAsset.level5AccountNum);

    GetMasterLedgerAsset.Level5AccountNum(
     [out] String* CFinance.masterLedgerAsset.level5AccountNum);


   SetMasterLedgerAsset.Level6AccountName(
     [in] String CFinance.masterLedgerAsset.level6AccountName);

    GetMasterLedgerAsset.Level6AccountName(
     [out] String* CFinance.masterLedgerAsset.level6AccountName);


   SetMasterLedgerAsset.Level6AccountNum(
     [in] String CFinance.masterLedgerAsset.level6AccountNum);

    GetMasterLedgerAsset.Level6AccountNum(
     [out] String* CFinance.masterLedgerAsset.level6AccountNum);


   SetMasterLedgerAsset.Level1ClassName(
     [in] String CFinance.masterLedgerAsset.level1ClassName);

    GetMasterLedgerAsset.Level1ClassName(
     [out] String* CFinance.masterLedgerAsset.level1ClassName);


   SetMasterLedgerAsset.Level2ClassName(
     [in] String CFinance.masterLedgerAsset.level2ClassName);

    GetMasterLedgerAsset.Level2ClassName(
     [out] String* CFinance.masterLedgerAsset.level2ClassName);


   SetMasterLedgerAsset.Level3ClassName(
     [in] String CFinance.masterLedgerAsset.level3ClassName);

    GetMasterLedgerAsset.Level3ClassName(
     [out] String* CFinance.masterLedgerAsset.level3ClassName);


   SetMasterLedgerAsset.TransactionEffective(
     [in] String CFinance.masterLedgerAsset.transactionEffective);

    GetMasterLedgerAsset.TransactionEffective(
     [out] String* CFinance.masterLedgerAsset.transactionEffective);


   SetMasterLedgerAsset.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerAsset.masLedgeFinTxId);

    GetMasterLedgerAsset.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerAsset.masLedgeFinTxId);


   SetMasterLedgerAsset.Cr(
     [in] Double CFinance.masterLedgerAsset.cr);

    GetMasterLedgerAsset.Cr(
     [out] Double* CFinance.masterLedgerAsset.cr);


   SetMasterLedgerAsset.Dr(
     [in] Double CFinance.masterLedgerAsset.dr);

    GetMasterLedgerAsset.Dr(
     [out] Double* CFinance.masterLedgerAsset.dr);


   SetMasterLedgerAsset.Bal(
     [in] Double CFinance.masterLedgerAsset.bal);

    GetMasterLedgerAsset.Bal(
     [out] Double* CFinance.masterLedgerAsset.bal);


   SetMasterLedgerAsset.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerAsset.businessChannelOwnerId);

    GetMasterLedgerAsset.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerAsset.businessChannelOwnerId);


   SetMasterLedgerAsset.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerAsset.masLedgeFinTxJoinId);

    GetMasterLedgerAsset.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerAsset.masLedgeFinTxJoinId);


   SetMasterLedgerAsset.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerAsset.chartOfAccountsId);

    GetMasterLedgerAsset.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerAsset.chartOfAccountsId);


   SetMasterLedgerAsset.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerAsset.chartOfClassesId);

    GetMasterLedgerAsset.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerAsset.chartOfClassesId);


   SetMasterLedgerAsset.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerAsset.branchId);

    GetMasterLedgerAsset.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerAsset.branchId);


   SetMasterLedgerAsset.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerAsset.departmentId);

    GetMasterLedgerAsset.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerAsset.departmentId);


   SetMasterLedgerAsset.BankId(
     [in] CFinance.bank CFinance.masterLedgerAsset.bankId);

    GetMasterLedgerAsset.BankId(
     [out] CFinance.bank* CFinance.masterLedgerAsset.bankId);


   SetMasterLedgerAsset.ProgramId(
     [in] CProperty.program CFinance.masterLedgerAsset.programId);

    GetMasterLedgerAsset.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerAsset.programId);


   SetMasterLedgerAsset.ProjectId(
     [in] CProperty.project CFinance.masterLedgerAsset.projectId);

    GetMasterLedgerAsset.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerAsset.projectId);


   SetMasterLedgerAsset.ItemId(
     [in] CAdministration.item CFinance.masterLedgerAsset.itemId);

    GetMasterLedgerAsset.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerAsset.itemId);


   SetMasterLedgerAsset.JobId(
     [in] CAdministration.job CFinance.masterLedgerAsset.jobId);

    GetMasterLedgerAsset.JobId(
     [out] CAdministration.job* CFinance.masterLedgerAsset.jobId);


   SetMasterLedgerAsset.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerAsset.serviceId);

    GetMasterLedgerAsset.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerAsset.serviceId);


   SetMasterLedgerAsset.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerAsset.customerId);

    GetMasterLedgerAsset.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerAsset.customerId);


   SetMasterLedgerAsset.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerAsset.supplierId);

    GetMasterLedgerAsset.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerAsset.supplierId);


   SetMasterLedgerAsset.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerAsset.purchOrderId);

    GetMasterLedgerAsset.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerAsset.purchOrderId);


   SetMasterLedgerAsset.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerAsset.masterSalesOrderId);

    GetMasterLedgerAsset.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerAsset.masterSalesOrderId);


   SetMasterLedgerAsset.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerAsset.invoiceId);

    GetMasterLedgerAsset.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerAsset.invoiceId);


   SetMasterLedgerAsset.BillId(
     [in] CFinance.bill CFinance.masterLedgerAsset.billId);

    GetMasterLedgerAsset.BillId(
     [out] CFinance.bill* CFinance.masterLedgerAsset.billId);


   SetMasterLedgerLiability.MasterLedgerLiabilityId(
     [in] String CFinance.masterLedgerLiability.masterLedgerLiabilityId);

    GetMasterLedgerLiability.MasterLedgerLiabilityId(
     [out] String* CFinance.masterLedgerLiability.masterLedgerLiabilityId);


   SetMasterLedgerLiability.BankBSB(
     [in] String CFinance.masterLedgerLiability.bankBSB);

    GetMasterLedgerLiability.BankBSB(
     [out] String* CFinance.masterLedgerLiability.bankBSB);


   SetMasterLedgerLiability.BankAccountNumber(
     [in] String CFinance.masterLedgerLiability.bankAccountNumber);

    GetMasterLedgerLiability.BankAccountNumber(
     [out] String* CFinance.masterLedgerLiability.bankAccountNumber);


   SetMasterLedgerLiability.NameOnBankAccount(
     [in] String CFinance.masterLedgerLiability.nameOnBankAccount);

    GetMasterLedgerLiability.NameOnBankAccount(
     [out] String* CFinance.masterLedgerLiability.nameOnBankAccount);


   SetMasterLedgerLiability.Description(
     [in] String CFinance.masterLedgerLiability.description);

    GetMasterLedgerLiability.Description(
     [out] String* CFinance.masterLedgerLiability.description);


   SetMasterLedgerLiability.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerLiability.docRefs);

    GetMasterLedgerLiability.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerLiability.docRefs);


   SetMasterLedgerLiability.FeeId(
     [in] String CFinance.masterLedgerLiability.feeId);

    GetMasterLedgerLiability.FeeId(
     [out] String* CFinance.masterLedgerLiability.feeId);


   SetMasterLedgerLiability.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerLiability.masLedgeFinTxNum);

    GetMasterLedgerLiability.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerLiability.masLedgeFinTxNum);


   SetMasterLedgerLiability.Level1AccountName(
     [in] String CFinance.masterLedgerLiability.level1AccountName);

    GetMasterLedgerLiability.Level1AccountName(
     [out] String* CFinance.masterLedgerLiability.level1AccountName);


   SetMasterLedgerLiability.Level1AccountNum(
     [in] String CFinance.masterLedgerLiability.level1AccountNum);

    GetMasterLedgerLiability.Level1AccountNum(
     [out] String* CFinance.masterLedgerLiability.level1AccountNum);


   SetMasterLedgerLiability.Level2AccountName(
     [in] String CFinance.masterLedgerLiability.level2AccountName);

    GetMasterLedgerLiability.Level2AccountName(
     [out] String* CFinance.masterLedgerLiability.level2AccountName);


   SetMasterLedgerLiability.Level2AccountNum(
     [in] String CFinance.masterLedgerLiability.level2AccountNum);

    GetMasterLedgerLiability.Level2AccountNum(
     [out] String* CFinance.masterLedgerLiability.level2AccountNum);


   SetMasterLedgerLiability.Level3AccountName(
     [in] String CFinance.masterLedgerLiability.level3AccountName);

    GetMasterLedgerLiability.Level3AccountName(
     [out] String* CFinance.masterLedgerLiability.level3AccountName);


   SetMasterLedgerLiability.Level3AccountNum(
     [in] String CFinance.masterLedgerLiability.level3AccountNum);

    GetMasterLedgerLiability.Level3AccountNum(
     [out] String* CFinance.masterLedgerLiability.level3AccountNum);


   SetMasterLedgerLiability.Level4AccountName(
     [in] String CFinance.masterLedgerLiability.level4AccountName);

    GetMasterLedgerLiability.Level4AccountName(
     [out] String* CFinance.masterLedgerLiability.level4AccountName);


   SetMasterLedgerLiability.Level4AccountNum(
     [in] String CFinance.masterLedgerLiability.level4AccountNum);

    GetMasterLedgerLiability.Level4AccountNum(
     [out] String* CFinance.masterLedgerLiability.level4AccountNum);


   SetMasterLedgerLiability.Level5AccountName(
     [in] String CFinance.masterLedgerLiability.level5AccountName);

    GetMasterLedgerLiability.Level5AccountName(
     [out] String* CFinance.masterLedgerLiability.level5AccountName);


   SetMasterLedgerLiability.Level5AccountNum(
     [in] String CFinance.masterLedgerLiability.level5AccountNum);

    GetMasterLedgerLiability.Level5AccountNum(
     [out] String* CFinance.masterLedgerLiability.level5AccountNum);


   SetMasterLedgerLiability.Level6AccountName(
     [in] String CFinance.masterLedgerLiability.level6AccountName);

    GetMasterLedgerLiability.Level6AccountName(
     [out] String* CFinance.masterLedgerLiability.level6AccountName);


   SetMasterLedgerLiability.Level6AccountNum(
     [in] String CFinance.masterLedgerLiability.level6AccountNum);

    GetMasterLedgerLiability.Level6AccountNum(
     [out] String* CFinance.masterLedgerLiability.level6AccountNum);


   SetMasterLedgerLiability.Level1ClassName(
     [in] String CFinance.masterLedgerLiability.level1ClassName);

    GetMasterLedgerLiability.Level1ClassName(
     [out] String* CFinance.masterLedgerLiability.level1ClassName);


   SetMasterLedgerLiability.Level2ClassName(
     [in] String CFinance.masterLedgerLiability.level2ClassName);

    GetMasterLedgerLiability.Level2ClassName(
     [out] String* CFinance.masterLedgerLiability.level2ClassName);


   SetMasterLedgerLiability.Level3ClassName(
     [in] String CFinance.masterLedgerLiability.level3ClassName);

    GetMasterLedgerLiability.Level3ClassName(
     [out] String* CFinance.masterLedgerLiability.level3ClassName);


   SetMasterLedgerLiability.TransactionEffective(
     [in] String CFinance.masterLedgerLiability.transactionEffective);

    GetMasterLedgerLiability.TransactionEffective(
     [out] String* CFinance.masterLedgerLiability.transactionEffective);


   SetMasterLedgerLiability.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerLiability.masLedgeFinTxId);

    GetMasterLedgerLiability.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerLiability.masLedgeFinTxId);


   SetMasterLedgerLiability.Cr(
     [in] Double CFinance.masterLedgerLiability.cr);

    GetMasterLedgerLiability.Cr(
     [out] Double* CFinance.masterLedgerLiability.cr);


   SetMasterLedgerLiability.Dr(
     [in] Double CFinance.masterLedgerLiability.dr);

    GetMasterLedgerLiability.Dr(
     [out] Double* CFinance.masterLedgerLiability.dr);


   SetMasterLedgerLiability.Bal(
     [in] Double CFinance.masterLedgerLiability.bal);

    GetMasterLedgerLiability.Bal(
     [out] Double* CFinance.masterLedgerLiability.bal);


   SetMasterLedgerLiability.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerLiability.businessChannelOwnerId);

    GetMasterLedgerLiability.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerLiability.businessChannelOwnerId);


   SetMasterLedgerLiability.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerLiability.masLedgeFinTxJoinId);

    GetMasterLedgerLiability.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerLiability.masLedgeFinTxJoinId);


   SetMasterLedgerLiability.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerLiability.chartOfAccountsId);

    GetMasterLedgerLiability.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerLiability.chartOfAccountsId);


   SetMasterLedgerLiability.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerLiability.chartOfClassesId);

    GetMasterLedgerLiability.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerLiability.chartOfClassesId);


   SetMasterLedgerLiability.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerLiability.branchId);

    GetMasterLedgerLiability.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerLiability.branchId);


   SetMasterLedgerLiability.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerLiability.departmentId);

    GetMasterLedgerLiability.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerLiability.departmentId);


   SetMasterLedgerLiability.BankId(
     [in] CFinance.bank CFinance.masterLedgerLiability.bankId);

    GetMasterLedgerLiability.BankId(
     [out] CFinance.bank* CFinance.masterLedgerLiability.bankId);


   SetMasterLedgerLiability.ProgramId(
     [in] CProperty.program CFinance.masterLedgerLiability.programId);

    GetMasterLedgerLiability.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerLiability.programId);


   SetMasterLedgerLiability.ProjectId(
     [in] CProperty.project CFinance.masterLedgerLiability.projectId);

    GetMasterLedgerLiability.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerLiability.projectId);


   SetMasterLedgerLiability.ItemId(
     [in] CAdministration.item CFinance.masterLedgerLiability.itemId);

    GetMasterLedgerLiability.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerLiability.itemId);


   SetMasterLedgerLiability.JobId(
     [in] CAdministration.job CFinance.masterLedgerLiability.jobId);

    GetMasterLedgerLiability.JobId(
     [out] CAdministration.job* CFinance.masterLedgerLiability.jobId);


   SetMasterLedgerLiability.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerLiability.serviceId);

    GetMasterLedgerLiability.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerLiability.serviceId);


   SetMasterLedgerLiability.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerLiability.customerId);

    GetMasterLedgerLiability.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerLiability.customerId);


   SetMasterLedgerLiability.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerLiability.supplierId);

    GetMasterLedgerLiability.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerLiability.supplierId);


   SetMasterLedgerLiability.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerLiability.purchOrderId);

    GetMasterLedgerLiability.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerLiability.purchOrderId);


   SetMasterLedgerLiability.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerLiability.masterSalesOrderId);

    GetMasterLedgerLiability.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerLiability.masterSalesOrderId);


   SetMasterLedgerLiability.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerLiability.invoiceId);

    GetMasterLedgerLiability.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerLiability.invoiceId);


   SetMasterLedgerLiability.BillId(
     [in] CFinance.bill CFinance.masterLedgerLiability.billId);

    GetMasterLedgerLiability.BillId(
     [out] CFinance.bill* CFinance.masterLedgerLiability.billId);


   SetMasterLedgerEquity.MasterLedgerEquityId(
     [in] String CFinance.masterLedgerEquity.masterLedgerEquityId);

    GetMasterLedgerEquity.MasterLedgerEquityId(
     [out] String* CFinance.masterLedgerEquity.masterLedgerEquityId);


   SetMasterLedgerEquity.BankBSB(
     [in] String CFinance.masterLedgerEquity.bankBSB);

    GetMasterLedgerEquity.BankBSB(
     [out] String* CFinance.masterLedgerEquity.bankBSB);


   SetMasterLedgerEquity.BankAccountNumber(
     [in] String CFinance.masterLedgerEquity.bankAccountNumber);

    GetMasterLedgerEquity.BankAccountNumber(
     [out] String* CFinance.masterLedgerEquity.bankAccountNumber);


   SetMasterLedgerEquity.NameOnBankAccount(
     [in] String CFinance.masterLedgerEquity.nameOnBankAccount);

    GetMasterLedgerEquity.NameOnBankAccount(
     [out] String* CFinance.masterLedgerEquity.nameOnBankAccount);


   SetMasterLedgerEquity.Description(
     [in] String CFinance.masterLedgerEquity.description);

    GetMasterLedgerEquity.Description(
     [out] String* CFinance.masterLedgerEquity.description);


   SetMasterLedgerEquity.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerEquity.docRefs);

    GetMasterLedgerEquity.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerEquity.docRefs);


   SetMasterLedgerEquity.FeeId(
     [in] String CFinance.masterLedgerEquity.feeId);

    GetMasterLedgerEquity.FeeId(
     [out] String* CFinance.masterLedgerEquity.feeId);


   SetMasterLedgerEquity.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerEquity.masLedgeFinTxNum);

    GetMasterLedgerEquity.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerEquity.masLedgeFinTxNum);


   SetMasterLedgerEquity.Level1AccountName(
     [in] String CFinance.masterLedgerEquity.level1AccountName);

    GetMasterLedgerEquity.Level1AccountName(
     [out] String* CFinance.masterLedgerEquity.level1AccountName);


   SetMasterLedgerEquity.Level1AccountNum(
     [in] String CFinance.masterLedgerEquity.level1AccountNum);

    GetMasterLedgerEquity.Level1AccountNum(
     [out] String* CFinance.masterLedgerEquity.level1AccountNum);


   SetMasterLedgerEquity.Level2AccountName(
     [in] String CFinance.masterLedgerEquity.level2AccountName);

    GetMasterLedgerEquity.Level2AccountName(
     [out] String* CFinance.masterLedgerEquity.level2AccountName);


   SetMasterLedgerEquity.Level2AccountNum(
     [in] String CFinance.masterLedgerEquity.level2AccountNum);

    GetMasterLedgerEquity.Level2AccountNum(
     [out] String* CFinance.masterLedgerEquity.level2AccountNum);


   SetMasterLedgerEquity.Level3AccountName(
     [in] String CFinance.masterLedgerEquity.level3AccountName);

    GetMasterLedgerEquity.Level3AccountName(
     [out] String* CFinance.masterLedgerEquity.level3AccountName);


   SetMasterLedgerEquity.Level3AccountNum(
     [in] String CFinance.masterLedgerEquity.level3AccountNum);

    GetMasterLedgerEquity.Level3AccountNum(
     [out] String* CFinance.masterLedgerEquity.level3AccountNum);


   SetMasterLedgerEquity.Level4AccountName(
     [in] String CFinance.masterLedgerEquity.level4AccountName);

    GetMasterLedgerEquity.Level4AccountName(
     [out] String* CFinance.masterLedgerEquity.level4AccountName);


   SetMasterLedgerEquity.Level4AccountNum(
     [in] String CFinance.masterLedgerEquity.level4AccountNum);

    GetMasterLedgerEquity.Level4AccountNum(
     [out] String* CFinance.masterLedgerEquity.level4AccountNum);


   SetMasterLedgerEquity.Level5AccountName(
     [in] String CFinance.masterLedgerEquity.level5AccountName);

    GetMasterLedgerEquity.Level5AccountName(
     [out] String* CFinance.masterLedgerEquity.level5AccountName);


   SetMasterLedgerEquity.Level5AccountNum(
     [in] String CFinance.masterLedgerEquity.level5AccountNum);

    GetMasterLedgerEquity.Level5AccountNum(
     [out] String* CFinance.masterLedgerEquity.level5AccountNum);


   SetMasterLedgerEquity.Level6AccountName(
     [in] String CFinance.masterLedgerEquity.level6AccountName);

    GetMasterLedgerEquity.Level6AccountName(
     [out] String* CFinance.masterLedgerEquity.level6AccountName);


   SetMasterLedgerEquity.Level6AccountNum(
     [in] String CFinance.masterLedgerEquity.level6AccountNum);

    GetMasterLedgerEquity.Level6AccountNum(
     [out] String* CFinance.masterLedgerEquity.level6AccountNum);


   SetMasterLedgerEquity.Level1ClassName(
     [in] String CFinance.masterLedgerEquity.level1ClassName);

    GetMasterLedgerEquity.Level1ClassName(
     [out] String* CFinance.masterLedgerEquity.level1ClassName);


   SetMasterLedgerEquity.Level2ClassName(
     [in] String CFinance.masterLedgerEquity.level2ClassName);

    GetMasterLedgerEquity.Level2ClassName(
     [out] String* CFinance.masterLedgerEquity.level2ClassName);


   SetMasterLedgerEquity.Level3ClassName(
     [in] String CFinance.masterLedgerEquity.level3ClassName);

    GetMasterLedgerEquity.Level3ClassName(
     [out] String* CFinance.masterLedgerEquity.level3ClassName);


   SetMasterLedgerEquity.TransactionEffective(
     [in] String CFinance.masterLedgerEquity.transactionEffective);

    GetMasterLedgerEquity.TransactionEffective(
     [out] String* CFinance.masterLedgerEquity.transactionEffective);


   SetMasterLedgerEquity.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerEquity.masLedgeFinTxId);

    GetMasterLedgerEquity.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerEquity.masLedgeFinTxId);


   SetMasterLedgerEquity.Cr(
     [in] Double CFinance.masterLedgerEquity.cr);

    GetMasterLedgerEquity.Cr(
     [out] Double* CFinance.masterLedgerEquity.cr);


   SetMasterLedgerEquity.Dr(
     [in] Double CFinance.masterLedgerEquity.dr);

    GetMasterLedgerEquity.Dr(
     [out] Double* CFinance.masterLedgerEquity.dr);


   SetMasterLedgerEquity.Bal(
     [in] Double CFinance.masterLedgerEquity.bal);

    GetMasterLedgerEquity.Bal(
     [out] Double* CFinance.masterLedgerEquity.bal);


   SetMasterLedgerEquity.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerEquity.businessChannelOwnerId);

    GetMasterLedgerEquity.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerEquity.businessChannelOwnerId);


   SetMasterLedgerEquity.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerEquity.masLedgeFinTxJoinId);

    GetMasterLedgerEquity.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerEquity.masLedgeFinTxJoinId);


   SetMasterLedgerEquity.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerEquity.chartOfAccountsId);

    GetMasterLedgerEquity.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerEquity.chartOfAccountsId);


   SetMasterLedgerEquity.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerEquity.chartOfClassesId);

    GetMasterLedgerEquity.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerEquity.chartOfClassesId);


   SetMasterLedgerEquity.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerEquity.branchId);

    GetMasterLedgerEquity.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerEquity.branchId);


   SetMasterLedgerEquity.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerEquity.departmentId);

    GetMasterLedgerEquity.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerEquity.departmentId);


   SetMasterLedgerEquity.BankId(
     [in] CFinance.bank CFinance.masterLedgerEquity.bankId);

    GetMasterLedgerEquity.BankId(
     [out] CFinance.bank* CFinance.masterLedgerEquity.bankId);


   SetMasterLedgerEquity.ProgramId(
     [in] CProperty.program CFinance.masterLedgerEquity.programId);

    GetMasterLedgerEquity.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerEquity.programId);


   SetMasterLedgerEquity.ProjectId(
     [in] CProperty.project CFinance.masterLedgerEquity.projectId);

    GetMasterLedgerEquity.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerEquity.projectId);


   SetMasterLedgerEquity.ItemId(
     [in] CAdministration.item CFinance.masterLedgerEquity.itemId);

    GetMasterLedgerEquity.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerEquity.itemId);


   SetMasterLedgerEquity.JobId(
     [in] CAdministration.job CFinance.masterLedgerEquity.jobId);

    GetMasterLedgerEquity.JobId(
     [out] CAdministration.job* CFinance.masterLedgerEquity.jobId);


   SetMasterLedgerEquity.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerEquity.serviceId);

    GetMasterLedgerEquity.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerEquity.serviceId);


   SetMasterLedgerEquity.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerEquity.customerId);

    GetMasterLedgerEquity.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerEquity.customerId);


   SetMasterLedgerEquity.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerEquity.supplierId);

    GetMasterLedgerEquity.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerEquity.supplierId);


   SetMasterLedgerEquity.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerEquity.purchOrderId);

    GetMasterLedgerEquity.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerEquity.purchOrderId);


   SetMasterLedgerEquity.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerEquity.masterSalesOrderId);

    GetMasterLedgerEquity.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerEquity.masterSalesOrderId);


   SetMasterLedgerEquity.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerEquity.invoiceId);

    GetMasterLedgerEquity.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerEquity.invoiceId);


   SetMasterLedgerEquity.BillId(
     [in] CFinance.bill CFinance.masterLedgerEquity.billId);

    GetMasterLedgerEquity.BillId(
     [out] CFinance.bill* CFinance.masterLedgerEquity.billId);


   SetMasterLedgerSuspense.MasterLedgerSuspenseId(
     [in] String CFinance.masterLedgerSuspense.masterLedgerSuspenseId);

    GetMasterLedgerSuspense.MasterLedgerSuspenseId(
     [out] String* CFinance.masterLedgerSuspense.masterLedgerSuspenseId);


   SetMasterLedgerSuspense.BankBSB(
     [in] String CFinance.masterLedgerSuspense.bankBSB);

    GetMasterLedgerSuspense.BankBSB(
     [out] String* CFinance.masterLedgerSuspense.bankBSB);


   SetMasterLedgerSuspense.BankAccountNumber(
     [in] String CFinance.masterLedgerSuspense.bankAccountNumber);

    GetMasterLedgerSuspense.BankAccountNumber(
     [out] String* CFinance.masterLedgerSuspense.bankAccountNumber);


   SetMasterLedgerSuspense.NameOnBankAccount(
     [in] String CFinance.masterLedgerSuspense.nameOnBankAccount);

    GetMasterLedgerSuspense.NameOnBankAccount(
     [out] String* CFinance.masterLedgerSuspense.nameOnBankAccount);


   SetMasterLedgerSuspense.Description(
     [in] String CFinance.masterLedgerSuspense.description);

    GetMasterLedgerSuspense.Description(
     [out] String* CFinance.masterLedgerSuspense.description);


   SetMasterLedgerSuspense.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerSuspense.docRefs);

    GetMasterLedgerSuspense.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerSuspense.docRefs);


   SetMasterLedgerSuspense.FeeId(
     [in] String CFinance.masterLedgerSuspense.feeId);

    GetMasterLedgerSuspense.FeeId(
     [out] String* CFinance.masterLedgerSuspense.feeId);


   SetMasterLedgerSuspense.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerSuspense.masLedgeFinTxNum);

    GetMasterLedgerSuspense.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerSuspense.masLedgeFinTxNum);


   SetMasterLedgerSuspense.Level1AccountName(
     [in] String CFinance.masterLedgerSuspense.level1AccountName);

    GetMasterLedgerSuspense.Level1AccountName(
     [out] String* CFinance.masterLedgerSuspense.level1AccountName);


   SetMasterLedgerSuspense.Level1AccountNum(
     [in] String CFinance.masterLedgerSuspense.level1AccountNum);

    GetMasterLedgerSuspense.Level1AccountNum(
     [out] String* CFinance.masterLedgerSuspense.level1AccountNum);


   SetMasterLedgerSuspense.Level2AccountName(
     [in] String CFinance.masterLedgerSuspense.level2AccountName);

    GetMasterLedgerSuspense.Level2AccountName(
     [out] String* CFinance.masterLedgerSuspense.level2AccountName);


   SetMasterLedgerSuspense.Level2AccountNum(
     [in] String CFinance.masterLedgerSuspense.level2AccountNum);

    GetMasterLedgerSuspense.Level2AccountNum(
     [out] String* CFinance.masterLedgerSuspense.level2AccountNum);


   SetMasterLedgerSuspense.Level3AccountName(
     [in] String CFinance.masterLedgerSuspense.level3AccountName);

    GetMasterLedgerSuspense.Level3AccountName(
     [out] String* CFinance.masterLedgerSuspense.level3AccountName);


   SetMasterLedgerSuspense.Level3AccountNum(
     [in] String CFinance.masterLedgerSuspense.level3AccountNum);

    GetMasterLedgerSuspense.Level3AccountNum(
     [out] String* CFinance.masterLedgerSuspense.level3AccountNum);


   SetMasterLedgerSuspense.Level4AccountName(
     [in] String CFinance.masterLedgerSuspense.level4AccountName);

    GetMasterLedgerSuspense.Level4AccountName(
     [out] String* CFinance.masterLedgerSuspense.level4AccountName);


   SetMasterLedgerSuspense.Level4AccountNum(
     [in] String CFinance.masterLedgerSuspense.level4AccountNum);

    GetMasterLedgerSuspense.Level4AccountNum(
     [out] String* CFinance.masterLedgerSuspense.level4AccountNum);


   SetMasterLedgerSuspense.Level5AccountName(
     [in] String CFinance.masterLedgerSuspense.level5AccountName);

    GetMasterLedgerSuspense.Level5AccountName(
     [out] String* CFinance.masterLedgerSuspense.level5AccountName);


   SetMasterLedgerSuspense.Level5AccountNum(
     [in] String CFinance.masterLedgerSuspense.level5AccountNum);

    GetMasterLedgerSuspense.Level5AccountNum(
     [out] String* CFinance.masterLedgerSuspense.level5AccountNum);


   SetMasterLedgerSuspense.Level6AccountName(
     [in] String CFinance.masterLedgerSuspense.level6AccountName);

    GetMasterLedgerSuspense.Level6AccountName(
     [out] String* CFinance.masterLedgerSuspense.level6AccountName);


   SetMasterLedgerSuspense.Level6AccountNum(
     [in] String CFinance.masterLedgerSuspense.level6AccountNum);

    GetMasterLedgerSuspense.Level6AccountNum(
     [out] String* CFinance.masterLedgerSuspense.level6AccountNum);


   SetMasterLedgerSuspense.Level1ClassName(
     [in] String CFinance.masterLedgerSuspense.level1ClassName);

    GetMasterLedgerSuspense.Level1ClassName(
     [out] String* CFinance.masterLedgerSuspense.level1ClassName);


   SetMasterLedgerSuspense.Level2ClassName(
     [in] String CFinance.masterLedgerSuspense.level2ClassName);

    GetMasterLedgerSuspense.Level2ClassName(
     [out] String* CFinance.masterLedgerSuspense.level2ClassName);


   SetMasterLedgerSuspense.Level3ClassName(
     [in] String CFinance.masterLedgerSuspense.level3ClassName);

    GetMasterLedgerSuspense.Level3ClassName(
     [out] String* CFinance.masterLedgerSuspense.level3ClassName);


   SetMasterLedgerSuspense.TransactionEffective(
     [in] String CFinance.masterLedgerSuspense.transactionEffective);

    GetMasterLedgerSuspense.TransactionEffective(
     [out] String* CFinance.masterLedgerSuspense.transactionEffective);


   SetMasterLedgerSuspense.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerSuspense.masLedgeFinTxId);

    GetMasterLedgerSuspense.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerSuspense.masLedgeFinTxId);


   SetMasterLedgerSuspense.Cr(
     [in] Double CFinance.masterLedgerSuspense.cr);

    GetMasterLedgerSuspense.Cr(
     [out] Double* CFinance.masterLedgerSuspense.cr);


   SetMasterLedgerSuspense.Dr(
     [in] Double CFinance.masterLedgerSuspense.dr);

    GetMasterLedgerSuspense.Dr(
     [out] Double* CFinance.masterLedgerSuspense.dr);


   SetMasterLedgerSuspense.Bal(
     [in] Double CFinance.masterLedgerSuspense.bal);

    GetMasterLedgerSuspense.Bal(
     [out] Double* CFinance.masterLedgerSuspense.bal);


   SetMasterLedgerSuspense.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerSuspense.businessChannelOwnerId);

    GetMasterLedgerSuspense.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerSuspense.businessChannelOwnerId);


   SetMasterLedgerSuspense.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerSuspense.masLedgeFinTxJoinId);

    GetMasterLedgerSuspense.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerSuspense.masLedgeFinTxJoinId);


   SetMasterLedgerSuspense.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerSuspense.chartOfAccountsId);

    GetMasterLedgerSuspense.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerSuspense.chartOfAccountsId);


   SetMasterLedgerSuspense.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerSuspense.chartOfClassesId);

    GetMasterLedgerSuspense.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerSuspense.chartOfClassesId);


   SetMasterLedgerSuspense.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerSuspense.branchId);

    GetMasterLedgerSuspense.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerSuspense.branchId);


   SetMasterLedgerSuspense.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerSuspense.departmentId);

    GetMasterLedgerSuspense.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerSuspense.departmentId);


   SetMasterLedgerSuspense.BankId(
     [in] CFinance.bank CFinance.masterLedgerSuspense.bankId);

    GetMasterLedgerSuspense.BankId(
     [out] CFinance.bank* CFinance.masterLedgerSuspense.bankId);


   SetMasterLedgerSuspense.ProgramId(
     [in] CProperty.program CFinance.masterLedgerSuspense.programId);

    GetMasterLedgerSuspense.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerSuspense.programId);


   SetMasterLedgerSuspense.ProjectId(
     [in] CProperty.project CFinance.masterLedgerSuspense.projectId);

    GetMasterLedgerSuspense.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerSuspense.projectId);


   SetMasterLedgerSuspense.ItemId(
     [in] CAdministration.item CFinance.masterLedgerSuspense.itemId);

    GetMasterLedgerSuspense.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerSuspense.itemId);


   SetMasterLedgerSuspense.JobId(
     [in] CAdministration.job CFinance.masterLedgerSuspense.jobId);

    GetMasterLedgerSuspense.JobId(
     [out] CAdministration.job* CFinance.masterLedgerSuspense.jobId);


   SetMasterLedgerSuspense.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerSuspense.serviceId);

    GetMasterLedgerSuspense.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerSuspense.serviceId);


   SetMasterLedgerSuspense.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerSuspense.customerId);

    GetMasterLedgerSuspense.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerSuspense.customerId);


   SetMasterLedgerSuspense.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerSuspense.supplierId);

    GetMasterLedgerSuspense.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerSuspense.supplierId);


   SetMasterLedgerSuspense.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerSuspense.purchOrderId);

    GetMasterLedgerSuspense.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerSuspense.purchOrderId);


   SetMasterLedgerSuspense.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerSuspense.masterSalesOrderId);

    GetMasterLedgerSuspense.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerSuspense.masterSalesOrderId);


   SetMasterLedgerSuspense.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerSuspense.invoiceId);

    GetMasterLedgerSuspense.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerSuspense.invoiceId);


   SetMasterLedgerSuspense.BillId(
     [in] CFinance.bill CFinance.masterLedgerSuspense.billId);

    GetMasterLedgerSuspense.BillId(
     [out] CFinance.bill* CFinance.masterLedgerSuspense.billId);


   SetMasterLedgerIncome.MasterLedgerIncomeId(
     [in] String CFinance.masterLedgerIncome.masterLedgerIncomeId);

    GetMasterLedgerIncome.MasterLedgerIncomeId(
     [out] String* CFinance.masterLedgerIncome.masterLedgerIncomeId);


   SetMasterLedgerIncome.BankBSB(
     [in] String CFinance.masterLedgerIncome.bankBSB);

    GetMasterLedgerIncome.BankBSB(
     [out] String* CFinance.masterLedgerIncome.bankBSB);


   SetMasterLedgerIncome.BankAccountNumber(
     [in] String CFinance.masterLedgerIncome.bankAccountNumber);

    GetMasterLedgerIncome.BankAccountNumber(
     [out] String* CFinance.masterLedgerIncome.bankAccountNumber);


   SetMasterLedgerIncome.NameOnBankAccount(
     [in] String CFinance.masterLedgerIncome.nameOnBankAccount);

    GetMasterLedgerIncome.NameOnBankAccount(
     [out] String* CFinance.masterLedgerIncome.nameOnBankAccount);


   SetMasterLedgerIncome.Description(
     [in] String CFinance.masterLedgerIncome.description);

    GetMasterLedgerIncome.Description(
     [out] String* CFinance.masterLedgerIncome.description);


   SetMasterLedgerIncome.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerIncome.docRefs);

    GetMasterLedgerIncome.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerIncome.docRefs);


   SetMasterLedgerIncome.FeeId(
     [in] String CFinance.masterLedgerIncome.feeId);

    GetMasterLedgerIncome.FeeId(
     [out] String* CFinance.masterLedgerIncome.feeId);


   SetMasterLedgerIncome.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerIncome.masLedgeFinTxNum);

    GetMasterLedgerIncome.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerIncome.masLedgeFinTxNum);


   SetMasterLedgerIncome.Level1AccountName(
     [in] String CFinance.masterLedgerIncome.level1AccountName);

    GetMasterLedgerIncome.Level1AccountName(
     [out] String* CFinance.masterLedgerIncome.level1AccountName);


   SetMasterLedgerIncome.Level1AccountNum(
     [in] String CFinance.masterLedgerIncome.level1AccountNum);

    GetMasterLedgerIncome.Level1AccountNum(
     [out] String* CFinance.masterLedgerIncome.level1AccountNum);


   SetMasterLedgerIncome.Level2AccountName(
     [in] String CFinance.masterLedgerIncome.level2AccountName);

    GetMasterLedgerIncome.Level2AccountName(
     [out] String* CFinance.masterLedgerIncome.level2AccountName);


   SetMasterLedgerIncome.Level2AccountNum(
     [in] String CFinance.masterLedgerIncome.level2AccountNum);

    GetMasterLedgerIncome.Level2AccountNum(
     [out] String* CFinance.masterLedgerIncome.level2AccountNum);


   SetMasterLedgerIncome.Level3AccountName(
     [in] String CFinance.masterLedgerIncome.level3AccountName);

    GetMasterLedgerIncome.Level3AccountName(
     [out] String* CFinance.masterLedgerIncome.level3AccountName);


   SetMasterLedgerIncome.Level3AccountNum(
     [in] String CFinance.masterLedgerIncome.level3AccountNum);

    GetMasterLedgerIncome.Level3AccountNum(
     [out] String* CFinance.masterLedgerIncome.level3AccountNum);


   SetMasterLedgerIncome.Level4AccountName(
     [in] String CFinance.masterLedgerIncome.level4AccountName);

    GetMasterLedgerIncome.Level4AccountName(
     [out] String* CFinance.masterLedgerIncome.level4AccountName);


   SetMasterLedgerIncome.Level4AccountNum(
     [in] String CFinance.masterLedgerIncome.level4AccountNum);

    GetMasterLedgerIncome.Level4AccountNum(
     [out] String* CFinance.masterLedgerIncome.level4AccountNum);


   SetMasterLedgerIncome.Level5AccountName(
     [in] String CFinance.masterLedgerIncome.level5AccountName);

    GetMasterLedgerIncome.Level5AccountName(
     [out] String* CFinance.masterLedgerIncome.level5AccountName);


   SetMasterLedgerIncome.Level5AccountNum(
     [in] String CFinance.masterLedgerIncome.level5AccountNum);

    GetMasterLedgerIncome.Level5AccountNum(
     [out] String* CFinance.masterLedgerIncome.level5AccountNum);


   SetMasterLedgerIncome.Level6AccountName(
     [in] String CFinance.masterLedgerIncome.level6AccountName);

    GetMasterLedgerIncome.Level6AccountName(
     [out] String* CFinance.masterLedgerIncome.level6AccountName);


   SetMasterLedgerIncome.Level6AccountNum(
     [in] String CFinance.masterLedgerIncome.level6AccountNum);

    GetMasterLedgerIncome.Level6AccountNum(
     [out] String* CFinance.masterLedgerIncome.level6AccountNum);


   SetMasterLedgerIncome.Level1ClassName(
     [in] String CFinance.masterLedgerIncome.level1ClassName);

    GetMasterLedgerIncome.Level1ClassName(
     [out] String* CFinance.masterLedgerIncome.level1ClassName);


   SetMasterLedgerIncome.Level2ClassName(
     [in] String CFinance.masterLedgerIncome.level2ClassName);

    GetMasterLedgerIncome.Level2ClassName(
     [out] String* CFinance.masterLedgerIncome.level2ClassName);


   SetMasterLedgerIncome.Level3ClassName(
     [in] String CFinance.masterLedgerIncome.level3ClassName);

    GetMasterLedgerIncome.Level3ClassName(
     [out] String* CFinance.masterLedgerIncome.level3ClassName);


   SetMasterLedgerIncome.TransactionEffective(
     [in] String CFinance.masterLedgerIncome.transactionEffective);

    GetMasterLedgerIncome.TransactionEffective(
     [out] String* CFinance.masterLedgerIncome.transactionEffective);


   SetMasterLedgerIncome.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerIncome.masLedgeFinTxId);

    GetMasterLedgerIncome.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerIncome.masLedgeFinTxId);


   SetMasterLedgerIncome.Cr(
     [in] Double CFinance.masterLedgerIncome.cr);

    GetMasterLedgerIncome.Cr(
     [out] Double* CFinance.masterLedgerIncome.cr);


   SetMasterLedgerIncome.Dr(
     [in] Double CFinance.masterLedgerIncome.dr);

    GetMasterLedgerIncome.Dr(
     [out] Double* CFinance.masterLedgerIncome.dr);


   SetMasterLedgerIncome.Bal(
     [in] Double CFinance.masterLedgerIncome.bal);

    GetMasterLedgerIncome.Bal(
     [out] Double* CFinance.masterLedgerIncome.bal);


   SetMasterLedgerIncome.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerIncome.businessChannelOwnerId);

    GetMasterLedgerIncome.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerIncome.businessChannelOwnerId);


   SetMasterLedgerIncome.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerIncome.masLedgeFinTxJoinId);

    GetMasterLedgerIncome.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerIncome.masLedgeFinTxJoinId);


   SetMasterLedgerIncome.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerIncome.chartOfAccountsId);

    GetMasterLedgerIncome.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerIncome.chartOfAccountsId);


   SetMasterLedgerIncome.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerIncome.chartOfClassesId);

    GetMasterLedgerIncome.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerIncome.chartOfClassesId);


   SetMasterLedgerIncome.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerIncome.branchId);

    GetMasterLedgerIncome.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerIncome.branchId);


   SetMasterLedgerIncome.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerIncome.departmentId);

    GetMasterLedgerIncome.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerIncome.departmentId);


   SetMasterLedgerIncome.BankId(
     [in] CFinance.bank CFinance.masterLedgerIncome.bankId);

    GetMasterLedgerIncome.BankId(
     [out] CFinance.bank* CFinance.masterLedgerIncome.bankId);


   SetMasterLedgerIncome.ProgramId(
     [in] CProperty.program CFinance.masterLedgerIncome.programId);

    GetMasterLedgerIncome.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerIncome.programId);


   SetMasterLedgerIncome.ProjectId(
     [in] CProperty.project CFinance.masterLedgerIncome.projectId);

    GetMasterLedgerIncome.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerIncome.projectId);


   SetMasterLedgerIncome.ItemId(
     [in] CAdministration.item CFinance.masterLedgerIncome.itemId);

    GetMasterLedgerIncome.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerIncome.itemId);


   SetMasterLedgerIncome.JobId(
     [in] CAdministration.job CFinance.masterLedgerIncome.jobId);

    GetMasterLedgerIncome.JobId(
     [out] CAdministration.job* CFinance.masterLedgerIncome.jobId);


   SetMasterLedgerIncome.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerIncome.serviceId);

    GetMasterLedgerIncome.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerIncome.serviceId);


   SetMasterLedgerIncome.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerIncome.customerId);

    GetMasterLedgerIncome.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerIncome.customerId);


   SetMasterLedgerIncome.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerIncome.supplierId);

    GetMasterLedgerIncome.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerIncome.supplierId);


   SetMasterLedgerIncome.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerIncome.purchOrderId);

    GetMasterLedgerIncome.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerIncome.purchOrderId);


   SetMasterLedgerIncome.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerIncome.masterSalesOrderId);

    GetMasterLedgerIncome.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerIncome.masterSalesOrderId);


   SetMasterLedgerIncome.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerIncome.invoiceId);

    GetMasterLedgerIncome.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerIncome.invoiceId);


   SetMasterLedgerIncome.BillId(
     [in] CFinance.bill CFinance.masterLedgerIncome.billId);

    GetMasterLedgerIncome.BillId(
     [out] CFinance.bill* CFinance.masterLedgerIncome.billId);


   SetMasterLedgerReturnsIn.MasterLedgerReturnsInId(
     [in] String CFinance.masterLedgerReturnsIn.masterLedgerReturnsInId);

    GetMasterLedgerReturnsIn.MasterLedgerReturnsInId(
     [out] String* CFinance.masterLedgerReturnsIn.masterLedgerReturnsInId);


   SetMasterLedgerReturnsIn.BankBSB(
     [in] String CFinance.masterLedgerReturnsIn.bankBSB);

    GetMasterLedgerReturnsIn.BankBSB(
     [out] String* CFinance.masterLedgerReturnsIn.bankBSB);


   SetMasterLedgerReturnsIn.BankAccountNumber(
     [in] String CFinance.masterLedgerReturnsIn.bankAccountNumber);

    GetMasterLedgerReturnsIn.BankAccountNumber(
     [out] String* CFinance.masterLedgerReturnsIn.bankAccountNumber);


   SetMasterLedgerReturnsIn.NameOnBankAccount(
     [in] String CFinance.masterLedgerReturnsIn.nameOnBankAccount);

    GetMasterLedgerReturnsIn.NameOnBankAccount(
     [out] String* CFinance.masterLedgerReturnsIn.nameOnBankAccount);


   SetMasterLedgerReturnsIn.Description(
     [in] String CFinance.masterLedgerReturnsIn.description);

    GetMasterLedgerReturnsIn.Description(
     [out] String* CFinance.masterLedgerReturnsIn.description);


   SetMasterLedgerReturnsIn.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerReturnsIn.docRefs);

    GetMasterLedgerReturnsIn.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerReturnsIn.docRefs);


   SetMasterLedgerReturnsIn.FeeId(
     [in] String CFinance.masterLedgerReturnsIn.feeId);

    GetMasterLedgerReturnsIn.FeeId(
     [out] String* CFinance.masterLedgerReturnsIn.feeId);


   SetMasterLedgerReturnsIn.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerReturnsIn.masLedgeFinTxNum);

    GetMasterLedgerReturnsIn.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerReturnsIn.masLedgeFinTxNum);


   SetMasterLedgerReturnsIn.Level1AccountName(
     [in] String CFinance.masterLedgerReturnsIn.level1AccountName);

    GetMasterLedgerReturnsIn.Level1AccountName(
     [out] String* CFinance.masterLedgerReturnsIn.level1AccountName);


   SetMasterLedgerReturnsIn.Level1AccountNum(
     [in] String CFinance.masterLedgerReturnsIn.level1AccountNum);

    GetMasterLedgerReturnsIn.Level1AccountNum(
     [out] String* CFinance.masterLedgerReturnsIn.level1AccountNum);


   SetMasterLedgerReturnsIn.Level2AccountName(
     [in] String CFinance.masterLedgerReturnsIn.level2AccountName);

    GetMasterLedgerReturnsIn.Level2AccountName(
     [out] String* CFinance.masterLedgerReturnsIn.level2AccountName);


   SetMasterLedgerReturnsIn.Level2AccountNum(
     [in] String CFinance.masterLedgerReturnsIn.level2AccountNum);

    GetMasterLedgerReturnsIn.Level2AccountNum(
     [out] String* CFinance.masterLedgerReturnsIn.level2AccountNum);


   SetMasterLedgerReturnsIn.Level3AccountName(
     [in] String CFinance.masterLedgerReturnsIn.level3AccountName);

    GetMasterLedgerReturnsIn.Level3AccountName(
     [out] String* CFinance.masterLedgerReturnsIn.level3AccountName);


   SetMasterLedgerReturnsIn.Level3AccountNum(
     [in] String CFinance.masterLedgerReturnsIn.level3AccountNum);

    GetMasterLedgerReturnsIn.Level3AccountNum(
     [out] String* CFinance.masterLedgerReturnsIn.level3AccountNum);


   SetMasterLedgerReturnsIn.Level4AccountName(
     [in] String CFinance.masterLedgerReturnsIn.level4AccountName);

    GetMasterLedgerReturnsIn.Level4AccountName(
     [out] String* CFinance.masterLedgerReturnsIn.level4AccountName);


   SetMasterLedgerReturnsIn.Level4AccountNum(
     [in] String CFinance.masterLedgerReturnsIn.level4AccountNum);

    GetMasterLedgerReturnsIn.Level4AccountNum(
     [out] String* CFinance.masterLedgerReturnsIn.level4AccountNum);


   SetMasterLedgerReturnsIn.Level5AccountName(
     [in] String CFinance.masterLedgerReturnsIn.level5AccountName);

    GetMasterLedgerReturnsIn.Level5AccountName(
     [out] String* CFinance.masterLedgerReturnsIn.level5AccountName);


   SetMasterLedgerReturnsIn.Level5AccountNum(
     [in] String CFinance.masterLedgerReturnsIn.level5AccountNum);

    GetMasterLedgerReturnsIn.Level5AccountNum(
     [out] String* CFinance.masterLedgerReturnsIn.level5AccountNum);


   SetMasterLedgerReturnsIn.Level6AccountName(
     [in] String CFinance.masterLedgerReturnsIn.level6AccountName);

    GetMasterLedgerReturnsIn.Level6AccountName(
     [out] String* CFinance.masterLedgerReturnsIn.level6AccountName);


   SetMasterLedgerReturnsIn.Level6AccountNum(
     [in] String CFinance.masterLedgerReturnsIn.level6AccountNum);

    GetMasterLedgerReturnsIn.Level6AccountNum(
     [out] String* CFinance.masterLedgerReturnsIn.level6AccountNum);


   SetMasterLedgerReturnsIn.Level1ClassName(
     [in] String CFinance.masterLedgerReturnsIn.level1ClassName);

    GetMasterLedgerReturnsIn.Level1ClassName(
     [out] String* CFinance.masterLedgerReturnsIn.level1ClassName);


   SetMasterLedgerReturnsIn.Level2ClassName(
     [in] String CFinance.masterLedgerReturnsIn.level2ClassName);

    GetMasterLedgerReturnsIn.Level2ClassName(
     [out] String* CFinance.masterLedgerReturnsIn.level2ClassName);


   SetMasterLedgerReturnsIn.Level3ClassName(
     [in] String CFinance.masterLedgerReturnsIn.level3ClassName);

    GetMasterLedgerReturnsIn.Level3ClassName(
     [out] String* CFinance.masterLedgerReturnsIn.level3ClassName);


   SetMasterLedgerReturnsIn.TransactionEffective(
     [in] String CFinance.masterLedgerReturnsIn.transactionEffective);

    GetMasterLedgerReturnsIn.TransactionEffective(
     [out] String* CFinance.masterLedgerReturnsIn.transactionEffective);


   SetMasterLedgerReturnsIn.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerReturnsIn.masLedgeFinTxId);

    GetMasterLedgerReturnsIn.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerReturnsIn.masLedgeFinTxId);


   SetMasterLedgerReturnsIn.Cr(
     [in] Double CFinance.masterLedgerReturnsIn.cr);

    GetMasterLedgerReturnsIn.Cr(
     [out] Double* CFinance.masterLedgerReturnsIn.cr);


   SetMasterLedgerReturnsIn.Dr(
     [in] Double CFinance.masterLedgerReturnsIn.dr);

    GetMasterLedgerReturnsIn.Dr(
     [out] Double* CFinance.masterLedgerReturnsIn.dr);


   SetMasterLedgerReturnsIn.Bal(
     [in] Double CFinance.masterLedgerReturnsIn.bal);

    GetMasterLedgerReturnsIn.Bal(
     [out] Double* CFinance.masterLedgerReturnsIn.bal);


   SetMasterLedgerReturnsIn.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerReturnsIn.businessChannelOwnerId);

    GetMasterLedgerReturnsIn.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerReturnsIn.businessChannelOwnerId);


   SetMasterLedgerReturnsIn.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerReturnsIn.masLedgeFinTxJoinId);

    GetMasterLedgerReturnsIn.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerReturnsIn.masLedgeFinTxJoinId);


   SetMasterLedgerReturnsIn.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerReturnsIn.chartOfAccountsId);

    GetMasterLedgerReturnsIn.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerReturnsIn.chartOfAccountsId);


   SetMasterLedgerReturnsIn.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerReturnsIn.chartOfClassesId);

    GetMasterLedgerReturnsIn.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerReturnsIn.chartOfClassesId);


   SetMasterLedgerReturnsIn.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerReturnsIn.branchId);

    GetMasterLedgerReturnsIn.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerReturnsIn.branchId);


   SetMasterLedgerReturnsIn.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerReturnsIn.departmentId);

    GetMasterLedgerReturnsIn.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerReturnsIn.departmentId);


   SetMasterLedgerReturnsIn.BankId(
     [in] CFinance.bank CFinance.masterLedgerReturnsIn.bankId);

    GetMasterLedgerReturnsIn.BankId(
     [out] CFinance.bank* CFinance.masterLedgerReturnsIn.bankId);


   SetMasterLedgerReturnsIn.ProgramId(
     [in] CProperty.program CFinance.masterLedgerReturnsIn.programId);

    GetMasterLedgerReturnsIn.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerReturnsIn.programId);


   SetMasterLedgerReturnsIn.ProjectId(
     [in] CProperty.project CFinance.masterLedgerReturnsIn.projectId);

    GetMasterLedgerReturnsIn.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerReturnsIn.projectId);


   SetMasterLedgerReturnsIn.ItemId(
     [in] CAdministration.item CFinance.masterLedgerReturnsIn.itemId);

    GetMasterLedgerReturnsIn.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerReturnsIn.itemId);


   SetMasterLedgerReturnsIn.JobId(
     [in] CAdministration.job CFinance.masterLedgerReturnsIn.jobId);

    GetMasterLedgerReturnsIn.JobId(
     [out] CAdministration.job* CFinance.masterLedgerReturnsIn.jobId);


   SetMasterLedgerReturnsIn.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerReturnsIn.serviceId);

    GetMasterLedgerReturnsIn.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerReturnsIn.serviceId);


   SetMasterLedgerReturnsIn.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerReturnsIn.customerId);

    GetMasterLedgerReturnsIn.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerReturnsIn.customerId);


   SetMasterLedgerReturnsIn.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerReturnsIn.supplierId);

    GetMasterLedgerReturnsIn.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerReturnsIn.supplierId);


   SetMasterLedgerReturnsIn.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerReturnsIn.purchOrderId);

    GetMasterLedgerReturnsIn.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerReturnsIn.purchOrderId);


   SetMasterLedgerReturnsIn.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerReturnsIn.masterSalesOrderId);

    GetMasterLedgerReturnsIn.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerReturnsIn.masterSalesOrderId);


   SetMasterLedgerReturnsIn.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerReturnsIn.invoiceId);

    GetMasterLedgerReturnsIn.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerReturnsIn.invoiceId);


   SetMasterLedgerReturnsIn.BillId(
     [in] CFinance.bill CFinance.masterLedgerReturnsIn.billId);

    GetMasterLedgerReturnsIn.BillId(
     [out] CFinance.bill* CFinance.masterLedgerReturnsIn.billId);


   SetMasterLedgerExpense.MasterLedgerExpenseId(
     [in] String CFinance.masterLedgerExpense.masterLedgerExpenseId);

    GetMasterLedgerExpense.MasterLedgerExpenseId(
     [out] String* CFinance.masterLedgerExpense.masterLedgerExpenseId);


   SetMasterLedgerExpense.BankBSB(
     [in] String CFinance.masterLedgerExpense.bankBSB);

    GetMasterLedgerExpense.BankBSB(
     [out] String* CFinance.masterLedgerExpense.bankBSB);


   SetMasterLedgerExpense.BankAccountNumber(
     [in] String CFinance.masterLedgerExpense.bankAccountNumber);

    GetMasterLedgerExpense.BankAccountNumber(
     [out] String* CFinance.masterLedgerExpense.bankAccountNumber);


   SetMasterLedgerExpense.NameOnBankAccount(
     [in] String CFinance.masterLedgerExpense.nameOnBankAccount);

    GetMasterLedgerExpense.NameOnBankAccount(
     [out] String* CFinance.masterLedgerExpense.nameOnBankAccount);


   SetMasterLedgerExpense.Description(
     [in] String CFinance.masterLedgerExpense.description);

    GetMasterLedgerExpense.Description(
     [out] String* CFinance.masterLedgerExpense.description);


   SetMasterLedgerExpense.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerExpense.docRefs);

    GetMasterLedgerExpense.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerExpense.docRefs);


   SetMasterLedgerExpense.FeeId(
     [in] String CFinance.masterLedgerExpense.feeId);

    GetMasterLedgerExpense.FeeId(
     [out] String* CFinance.masterLedgerExpense.feeId);


   SetMasterLedgerExpense.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerExpense.masLedgeFinTxNum);

    GetMasterLedgerExpense.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerExpense.masLedgeFinTxNum);


   SetMasterLedgerExpense.Level1AccountName(
     [in] String CFinance.masterLedgerExpense.level1AccountName);

    GetMasterLedgerExpense.Level1AccountName(
     [out] String* CFinance.masterLedgerExpense.level1AccountName);


   SetMasterLedgerExpense.Level1AccountNum(
     [in] String CFinance.masterLedgerExpense.level1AccountNum);

    GetMasterLedgerExpense.Level1AccountNum(
     [out] String* CFinance.masterLedgerExpense.level1AccountNum);


   SetMasterLedgerExpense.Level2AccountName(
     [in] String CFinance.masterLedgerExpense.level2AccountName);

    GetMasterLedgerExpense.Level2AccountName(
     [out] String* CFinance.masterLedgerExpense.level2AccountName);


   SetMasterLedgerExpense.Level2AccountNum(
     [in] String CFinance.masterLedgerExpense.level2AccountNum);

    GetMasterLedgerExpense.Level2AccountNum(
     [out] String* CFinance.masterLedgerExpense.level2AccountNum);


   SetMasterLedgerExpense.Level3AccountName(
     [in] String CFinance.masterLedgerExpense.level3AccountName);

    GetMasterLedgerExpense.Level3AccountName(
     [out] String* CFinance.masterLedgerExpense.level3AccountName);


   SetMasterLedgerExpense.Level3AccountNum(
     [in] String CFinance.masterLedgerExpense.level3AccountNum);

    GetMasterLedgerExpense.Level3AccountNum(
     [out] String* CFinance.masterLedgerExpense.level3AccountNum);


   SetMasterLedgerExpense.Level4AccountName(
     [in] String CFinance.masterLedgerExpense.level4AccountName);

    GetMasterLedgerExpense.Level4AccountName(
     [out] String* CFinance.masterLedgerExpense.level4AccountName);


   SetMasterLedgerExpense.Level4AccountNum(
     [in] String CFinance.masterLedgerExpense.level4AccountNum);

    GetMasterLedgerExpense.Level4AccountNum(
     [out] String* CFinance.masterLedgerExpense.level4AccountNum);


   SetMasterLedgerExpense.Level5AccountName(
     [in] String CFinance.masterLedgerExpense.level5AccountName);

    GetMasterLedgerExpense.Level5AccountName(
     [out] String* CFinance.masterLedgerExpense.level5AccountName);


   SetMasterLedgerExpense.Level5AccountNum(
     [in] String CFinance.masterLedgerExpense.level5AccountNum);

    GetMasterLedgerExpense.Level5AccountNum(
     [out] String* CFinance.masterLedgerExpense.level5AccountNum);


   SetMasterLedgerExpense.Level6AccountName(
     [in] String CFinance.masterLedgerExpense.level6AccountName);

    GetMasterLedgerExpense.Level6AccountName(
     [out] String* CFinance.masterLedgerExpense.level6AccountName);


   SetMasterLedgerExpense.Level6AccountNum(
     [in] String CFinance.masterLedgerExpense.level6AccountNum);

    GetMasterLedgerExpense.Level6AccountNum(
     [out] String* CFinance.masterLedgerExpense.level6AccountNum);


   SetMasterLedgerExpense.Level1ClassName(
     [in] String CFinance.masterLedgerExpense.level1ClassName);

    GetMasterLedgerExpense.Level1ClassName(
     [out] String* CFinance.masterLedgerExpense.level1ClassName);


   SetMasterLedgerExpense.Level2ClassName(
     [in] String CFinance.masterLedgerExpense.level2ClassName);

    GetMasterLedgerExpense.Level2ClassName(
     [out] String* CFinance.masterLedgerExpense.level2ClassName);


   SetMasterLedgerExpense.Level3ClassName(
     [in] String CFinance.masterLedgerExpense.level3ClassName);

    GetMasterLedgerExpense.Level3ClassName(
     [out] String* CFinance.masterLedgerExpense.level3ClassName);


   SetMasterLedgerExpense.TransactionEffective(
     [in] String CFinance.masterLedgerExpense.transactionEffective);

    GetMasterLedgerExpense.TransactionEffective(
     [out] String* CFinance.masterLedgerExpense.transactionEffective);


   SetMasterLedgerExpense.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerExpense.masLedgeFinTxId);

    GetMasterLedgerExpense.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerExpense.masLedgeFinTxId);


   SetMasterLedgerExpense.Cr(
     [in] Double CFinance.masterLedgerExpense.cr);

    GetMasterLedgerExpense.Cr(
     [out] Double* CFinance.masterLedgerExpense.cr);


   SetMasterLedgerExpense.Dr(
     [in] Double CFinance.masterLedgerExpense.dr);

    GetMasterLedgerExpense.Dr(
     [out] Double* CFinance.masterLedgerExpense.dr);


   SetMasterLedgerExpense.Bal(
     [in] Double CFinance.masterLedgerExpense.bal);

    GetMasterLedgerExpense.Bal(
     [out] Double* CFinance.masterLedgerExpense.bal);


   SetMasterLedgerExpense.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerExpense.businessChannelOwnerId);

    GetMasterLedgerExpense.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerExpense.businessChannelOwnerId);


   SetMasterLedgerExpense.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerExpense.masLedgeFinTxJoinId);

    GetMasterLedgerExpense.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerExpense.masLedgeFinTxJoinId);


   SetMasterLedgerExpense.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerExpense.chartOfAccountsId);

    GetMasterLedgerExpense.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerExpense.chartOfAccountsId);


   SetMasterLedgerExpense.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerExpense.chartOfClassesId);

    GetMasterLedgerExpense.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerExpense.chartOfClassesId);


   SetMasterLedgerExpense.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerExpense.branchId);

    GetMasterLedgerExpense.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerExpense.branchId);


   SetMasterLedgerExpense.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerExpense.departmentId);

    GetMasterLedgerExpense.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerExpense.departmentId);


   SetMasterLedgerExpense.BankId(
     [in] CFinance.bank CFinance.masterLedgerExpense.bankId);

    GetMasterLedgerExpense.BankId(
     [out] CFinance.bank* CFinance.masterLedgerExpense.bankId);


   SetMasterLedgerExpense.ProgramId(
     [in] CProperty.program CFinance.masterLedgerExpense.programId);

    GetMasterLedgerExpense.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerExpense.programId);


   SetMasterLedgerExpense.ProjectId(
     [in] CProperty.project CFinance.masterLedgerExpense.projectId);

    GetMasterLedgerExpense.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerExpense.projectId);


   SetMasterLedgerExpense.ItemId(
     [in] CAdministration.item CFinance.masterLedgerExpense.itemId);

    GetMasterLedgerExpense.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerExpense.itemId);


   SetMasterLedgerExpense.JobId(
     [in] CAdministration.job CFinance.masterLedgerExpense.jobId);

    GetMasterLedgerExpense.JobId(
     [out] CAdministration.job* CFinance.masterLedgerExpense.jobId);


   SetMasterLedgerExpense.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerExpense.serviceId);

    GetMasterLedgerExpense.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerExpense.serviceId);


   SetMasterLedgerExpense.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerExpense.customerId);

    GetMasterLedgerExpense.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerExpense.customerId);


   SetMasterLedgerExpense.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerExpense.supplierId);

    GetMasterLedgerExpense.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerExpense.supplierId);


   SetMasterLedgerExpense.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerExpense.purchOrderId);

    GetMasterLedgerExpense.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerExpense.purchOrderId);


   SetMasterLedgerExpense.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerExpense.masterSalesOrderId);

    GetMasterLedgerExpense.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerExpense.masterSalesOrderId);


   SetMasterLedgerExpense.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerExpense.invoiceId);

    GetMasterLedgerExpense.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerExpense.invoiceId);


   SetMasterLedgerExpense.BillId(
     [in] CFinance.bill CFinance.masterLedgerExpense.billId);

    GetMasterLedgerExpense.BillId(
     [out] CFinance.bill* CFinance.masterLedgerExpense.billId);


   SetMasterLedgerReturnsOut.MasterLedgerReturnsOutId(
     [in] String CFinance.masterLedgerReturnsOut.masterLedgerReturnsOutId);

    GetMasterLedgerReturnsOut.MasterLedgerReturnsOutId(
     [out] String* CFinance.masterLedgerReturnsOut.masterLedgerReturnsOutId);


   SetMasterLedgerReturnsOut.BankBSB(
     [in] String CFinance.masterLedgerReturnsOut.bankBSB);

    GetMasterLedgerReturnsOut.BankBSB(
     [out] String* CFinance.masterLedgerReturnsOut.bankBSB);


   SetMasterLedgerReturnsOut.BankAccountNumber(
     [in] String CFinance.masterLedgerReturnsOut.bankAccountNumber);

    GetMasterLedgerReturnsOut.BankAccountNumber(
     [out] String* CFinance.masterLedgerReturnsOut.bankAccountNumber);


   SetMasterLedgerReturnsOut.NameOnBankAccount(
     [in] String CFinance.masterLedgerReturnsOut.nameOnBankAccount);

    GetMasterLedgerReturnsOut.NameOnBankAccount(
     [out] String* CFinance.masterLedgerReturnsOut.nameOnBankAccount);


   SetMasterLedgerReturnsOut.Description(
     [in] String CFinance.masterLedgerReturnsOut.description);

    GetMasterLedgerReturnsOut.Description(
     [out] String* CFinance.masterLedgerReturnsOut.description);


   SetMasterLedgerReturnsOut.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerReturnsOut.docRefs);

    GetMasterLedgerReturnsOut.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerReturnsOut.docRefs);


   SetMasterLedgerReturnsOut.FeeId(
     [in] String CFinance.masterLedgerReturnsOut.feeId);

    GetMasterLedgerReturnsOut.FeeId(
     [out] String* CFinance.masterLedgerReturnsOut.feeId);


   SetMasterLedgerReturnsOut.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerReturnsOut.masLedgeFinTxNum);

    GetMasterLedgerReturnsOut.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerReturnsOut.masLedgeFinTxNum);


   SetMasterLedgerReturnsOut.Level1AccountName(
     [in] String CFinance.masterLedgerReturnsOut.level1AccountName);

    GetMasterLedgerReturnsOut.Level1AccountName(
     [out] String* CFinance.masterLedgerReturnsOut.level1AccountName);


   SetMasterLedgerReturnsOut.Level1AccountNum(
     [in] String CFinance.masterLedgerReturnsOut.level1AccountNum);

    GetMasterLedgerReturnsOut.Level1AccountNum(
     [out] String* CFinance.masterLedgerReturnsOut.level1AccountNum);


   SetMasterLedgerReturnsOut.Level2AccountName(
     [in] String CFinance.masterLedgerReturnsOut.level2AccountName);

    GetMasterLedgerReturnsOut.Level2AccountName(
     [out] String* CFinance.masterLedgerReturnsOut.level2AccountName);


   SetMasterLedgerReturnsOut.Level2AccountNum(
     [in] String CFinance.masterLedgerReturnsOut.level2AccountNum);

    GetMasterLedgerReturnsOut.Level2AccountNum(
     [out] String* CFinance.masterLedgerReturnsOut.level2AccountNum);


   SetMasterLedgerReturnsOut.Level3AccountName(
     [in] String CFinance.masterLedgerReturnsOut.level3AccountName);

    GetMasterLedgerReturnsOut.Level3AccountName(
     [out] String* CFinance.masterLedgerReturnsOut.level3AccountName);


   SetMasterLedgerReturnsOut.Level3AccountNum(
     [in] String CFinance.masterLedgerReturnsOut.level3AccountNum);

    GetMasterLedgerReturnsOut.Level3AccountNum(
     [out] String* CFinance.masterLedgerReturnsOut.level3AccountNum);


   SetMasterLedgerReturnsOut.Level4AccountName(
     [in] String CFinance.masterLedgerReturnsOut.level4AccountName);

    GetMasterLedgerReturnsOut.Level4AccountName(
     [out] String* CFinance.masterLedgerReturnsOut.level4AccountName);


   SetMasterLedgerReturnsOut.Level4AccountNum(
     [in] String CFinance.masterLedgerReturnsOut.level4AccountNum);

    GetMasterLedgerReturnsOut.Level4AccountNum(
     [out] String* CFinance.masterLedgerReturnsOut.level4AccountNum);


   SetMasterLedgerReturnsOut.Level5AccountName(
     [in] String CFinance.masterLedgerReturnsOut.level5AccountName);

    GetMasterLedgerReturnsOut.Level5AccountName(
     [out] String* CFinance.masterLedgerReturnsOut.level5AccountName);


   SetMasterLedgerReturnsOut.Level5AccountNum(
     [in] String CFinance.masterLedgerReturnsOut.level5AccountNum);

    GetMasterLedgerReturnsOut.Level5AccountNum(
     [out] String* CFinance.masterLedgerReturnsOut.level5AccountNum);


   SetMasterLedgerReturnsOut.Level6AccountName(
     [in] String CFinance.masterLedgerReturnsOut.level6AccountName);

    GetMasterLedgerReturnsOut.Level6AccountName(
     [out] String* CFinance.masterLedgerReturnsOut.level6AccountName);


   SetMasterLedgerReturnsOut.Level6AccountNum(
     [in] String CFinance.masterLedgerReturnsOut.level6AccountNum);

    GetMasterLedgerReturnsOut.Level6AccountNum(
     [out] String* CFinance.masterLedgerReturnsOut.level6AccountNum);


   SetMasterLedgerReturnsOut.Level1ClassName(
     [in] String CFinance.masterLedgerReturnsOut.level1ClassName);

    GetMasterLedgerReturnsOut.Level1ClassName(
     [out] String* CFinance.masterLedgerReturnsOut.level1ClassName);


   SetMasterLedgerReturnsOut.Level2ClassName(
     [in] String CFinance.masterLedgerReturnsOut.level2ClassName);

    GetMasterLedgerReturnsOut.Level2ClassName(
     [out] String* CFinance.masterLedgerReturnsOut.level2ClassName);


   SetMasterLedgerReturnsOut.Level3ClassName(
     [in] String CFinance.masterLedgerReturnsOut.level3ClassName);

    GetMasterLedgerReturnsOut.Level3ClassName(
     [out] String* CFinance.masterLedgerReturnsOut.level3ClassName);


   SetMasterLedgerReturnsOut.TransactionEffective(
     [in] String CFinance.masterLedgerReturnsOut.transactionEffective);

    GetMasterLedgerReturnsOut.TransactionEffective(
     [out] String* CFinance.masterLedgerReturnsOut.transactionEffective);


   SetMasterLedgerReturnsOut.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerReturnsOut.masLedgeFinTxId);

    GetMasterLedgerReturnsOut.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerReturnsOut.masLedgeFinTxId);


   SetMasterLedgerReturnsOut.Cr(
     [in] Double CFinance.masterLedgerReturnsOut.cr);

    GetMasterLedgerReturnsOut.Cr(
     [out] Double* CFinance.masterLedgerReturnsOut.cr);


   SetMasterLedgerReturnsOut.Dr(
     [in] Double CFinance.masterLedgerReturnsOut.dr);

    GetMasterLedgerReturnsOut.Dr(
     [out] Double* CFinance.masterLedgerReturnsOut.dr);


   SetMasterLedgerReturnsOut.Bal(
     [in] Double CFinance.masterLedgerReturnsOut.bal);

    GetMasterLedgerReturnsOut.Bal(
     [out] Double* CFinance.masterLedgerReturnsOut.bal);


   SetMasterLedgerReturnsOut.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerReturnsOut.businessChannelOwnerId);

    GetMasterLedgerReturnsOut.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerReturnsOut.businessChannelOwnerId);


   SetMasterLedgerReturnsOut.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerReturnsOut.masLedgeFinTxJoinId);

    GetMasterLedgerReturnsOut.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerReturnsOut.masLedgeFinTxJoinId);


   SetMasterLedgerReturnsOut.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerReturnsOut.chartOfAccountsId);

    GetMasterLedgerReturnsOut.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerReturnsOut.chartOfAccountsId);


   SetMasterLedgerReturnsOut.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerReturnsOut.chartOfClassesId);

    GetMasterLedgerReturnsOut.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerReturnsOut.chartOfClassesId);


   SetMasterLedgerReturnsOut.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerReturnsOut.branchId);

    GetMasterLedgerReturnsOut.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerReturnsOut.branchId);


   SetMasterLedgerReturnsOut.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerReturnsOut.departmentId);

    GetMasterLedgerReturnsOut.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerReturnsOut.departmentId);


   SetMasterLedgerReturnsOut.BankId(
     [in] CFinance.bank CFinance.masterLedgerReturnsOut.bankId);

    GetMasterLedgerReturnsOut.BankId(
     [out] CFinance.bank* CFinance.masterLedgerReturnsOut.bankId);


   SetMasterLedgerReturnsOut.ProgramId(
     [in] CProperty.program CFinance.masterLedgerReturnsOut.programId);

    GetMasterLedgerReturnsOut.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerReturnsOut.programId);


   SetMasterLedgerReturnsOut.ProjectId(
     [in] CProperty.project CFinance.masterLedgerReturnsOut.projectId);

    GetMasterLedgerReturnsOut.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerReturnsOut.projectId);


   SetMasterLedgerReturnsOut.ItemId(
     [in] CAdministration.item CFinance.masterLedgerReturnsOut.itemId);

    GetMasterLedgerReturnsOut.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerReturnsOut.itemId);


   SetMasterLedgerReturnsOut.JobId(
     [in] CAdministration.job CFinance.masterLedgerReturnsOut.jobId);

    GetMasterLedgerReturnsOut.JobId(
     [out] CAdministration.job* CFinance.masterLedgerReturnsOut.jobId);


   SetMasterLedgerReturnsOut.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerReturnsOut.serviceId);

    GetMasterLedgerReturnsOut.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerReturnsOut.serviceId);


   SetMasterLedgerReturnsOut.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerReturnsOut.customerId);

    GetMasterLedgerReturnsOut.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerReturnsOut.customerId);


   SetMasterLedgerReturnsOut.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerReturnsOut.supplierId);

    GetMasterLedgerReturnsOut.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerReturnsOut.supplierId);


   SetMasterLedgerReturnsOut.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerReturnsOut.purchOrderId);

    GetMasterLedgerReturnsOut.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerReturnsOut.purchOrderId);


   SetMasterLedgerReturnsOut.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerReturnsOut.masterSalesOrderId);

    GetMasterLedgerReturnsOut.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerReturnsOut.masterSalesOrderId);


   SetMasterLedgerReturnsOut.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerReturnsOut.invoiceId);

    GetMasterLedgerReturnsOut.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerReturnsOut.invoiceId);


   SetMasterLedgerReturnsOut.BillId(
     [in] CFinance.bill CFinance.masterLedgerReturnsOut.billId);

    GetMasterLedgerReturnsOut.BillId(
     [out] CFinance.bill* CFinance.masterLedgerReturnsOut.billId);


   SetMasterLedgerOtherIncome.MasterLedgerOtherIncomeId(
     [in] String CFinance.masterLedgerOtherIncome.masterLedgerOtherIncomeId);

    GetMasterLedgerOtherIncome.MasterLedgerOtherIncomeId(
     [out] String* CFinance.masterLedgerOtherIncome.masterLedgerOtherIncomeId);


   SetMasterLedgerOtherIncome.BankBSB(
     [in] String CFinance.masterLedgerOtherIncome.bankBSB);

    GetMasterLedgerOtherIncome.BankBSB(
     [out] String* CFinance.masterLedgerOtherIncome.bankBSB);


   SetMasterLedgerOtherIncome.BankAccountNumber(
     [in] String CFinance.masterLedgerOtherIncome.bankAccountNumber);

    GetMasterLedgerOtherIncome.BankAccountNumber(
     [out] String* CFinance.masterLedgerOtherIncome.bankAccountNumber);


   SetMasterLedgerOtherIncome.NameOnBankAccount(
     [in] String CFinance.masterLedgerOtherIncome.nameOnBankAccount);

    GetMasterLedgerOtherIncome.NameOnBankAccount(
     [out] String* CFinance.masterLedgerOtherIncome.nameOnBankAccount);


   SetMasterLedgerOtherIncome.Description(
     [in] String CFinance.masterLedgerOtherIncome.description);

    GetMasterLedgerOtherIncome.Description(
     [out] String* CFinance.masterLedgerOtherIncome.description);


   SetMasterLedgerOtherIncome.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerOtherIncome.docRefs);

    GetMasterLedgerOtherIncome.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerOtherIncome.docRefs);


   SetMasterLedgerOtherIncome.FeeId(
     [in] String CFinance.masterLedgerOtherIncome.feeId);

    GetMasterLedgerOtherIncome.FeeId(
     [out] String* CFinance.masterLedgerOtherIncome.feeId);


   SetMasterLedgerOtherIncome.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerOtherIncome.masLedgeFinTxNum);

    GetMasterLedgerOtherIncome.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerOtherIncome.masLedgeFinTxNum);


   SetMasterLedgerOtherIncome.Level1AccountName(
     [in] String CFinance.masterLedgerOtherIncome.level1AccountName);

    GetMasterLedgerOtherIncome.Level1AccountName(
     [out] String* CFinance.masterLedgerOtherIncome.level1AccountName);


   SetMasterLedgerOtherIncome.Level1AccountNum(
     [in] String CFinance.masterLedgerOtherIncome.level1AccountNum);

    GetMasterLedgerOtherIncome.Level1AccountNum(
     [out] String* CFinance.masterLedgerOtherIncome.level1AccountNum);


   SetMasterLedgerOtherIncome.Level2AccountName(
     [in] String CFinance.masterLedgerOtherIncome.level2AccountName);

    GetMasterLedgerOtherIncome.Level2AccountName(
     [out] String* CFinance.masterLedgerOtherIncome.level2AccountName);


   SetMasterLedgerOtherIncome.Level2AccountNum(
     [in] String CFinance.masterLedgerOtherIncome.level2AccountNum);

    GetMasterLedgerOtherIncome.Level2AccountNum(
     [out] String* CFinance.masterLedgerOtherIncome.level2AccountNum);


   SetMasterLedgerOtherIncome.Level3AccountName(
     [in] String CFinance.masterLedgerOtherIncome.level3AccountName);

    GetMasterLedgerOtherIncome.Level3AccountName(
     [out] String* CFinance.masterLedgerOtherIncome.level3AccountName);


   SetMasterLedgerOtherIncome.Level3AccountNum(
     [in] String CFinance.masterLedgerOtherIncome.level3AccountNum);

    GetMasterLedgerOtherIncome.Level3AccountNum(
     [out] String* CFinance.masterLedgerOtherIncome.level3AccountNum);


   SetMasterLedgerOtherIncome.Level4AccountName(
     [in] String CFinance.masterLedgerOtherIncome.level4AccountName);

    GetMasterLedgerOtherIncome.Level4AccountName(
     [out] String* CFinance.masterLedgerOtherIncome.level4AccountName);


   SetMasterLedgerOtherIncome.Level4AccountNum(
     [in] String CFinance.masterLedgerOtherIncome.level4AccountNum);

    GetMasterLedgerOtherIncome.Level4AccountNum(
     [out] String* CFinance.masterLedgerOtherIncome.level4AccountNum);


   SetMasterLedgerOtherIncome.Level5AccountName(
     [in] String CFinance.masterLedgerOtherIncome.level5AccountName);

    GetMasterLedgerOtherIncome.Level5AccountName(
     [out] String* CFinance.masterLedgerOtherIncome.level5AccountName);


   SetMasterLedgerOtherIncome.Level5AccountNum(
     [in] String CFinance.masterLedgerOtherIncome.level5AccountNum);

    GetMasterLedgerOtherIncome.Level5AccountNum(
     [out] String* CFinance.masterLedgerOtherIncome.level5AccountNum);


   SetMasterLedgerOtherIncome.Level6AccountName(
     [in] String CFinance.masterLedgerOtherIncome.level6AccountName);

    GetMasterLedgerOtherIncome.Level6AccountName(
     [out] String* CFinance.masterLedgerOtherIncome.level6AccountName);


   SetMasterLedgerOtherIncome.Level6AccountNum(
     [in] String CFinance.masterLedgerOtherIncome.level6AccountNum);

    GetMasterLedgerOtherIncome.Level6AccountNum(
     [out] String* CFinance.masterLedgerOtherIncome.level6AccountNum);


   SetMasterLedgerOtherIncome.Level1ClassName(
     [in] String CFinance.masterLedgerOtherIncome.level1ClassName);

    GetMasterLedgerOtherIncome.Level1ClassName(
     [out] String* CFinance.masterLedgerOtherIncome.level1ClassName);


   SetMasterLedgerOtherIncome.Level2ClassName(
     [in] String CFinance.masterLedgerOtherIncome.level2ClassName);

    GetMasterLedgerOtherIncome.Level2ClassName(
     [out] String* CFinance.masterLedgerOtherIncome.level2ClassName);


   SetMasterLedgerOtherIncome.Level3ClassName(
     [in] String CFinance.masterLedgerOtherIncome.level3ClassName);

    GetMasterLedgerOtherIncome.Level3ClassName(
     [out] String* CFinance.masterLedgerOtherIncome.level3ClassName);


   SetMasterLedgerOtherIncome.TransactionEffective(
     [in] String CFinance.masterLedgerOtherIncome.transactionEffective);

    GetMasterLedgerOtherIncome.TransactionEffective(
     [out] String* CFinance.masterLedgerOtherIncome.transactionEffective);


   SetMasterLedgerOtherIncome.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerOtherIncome.masLedgeFinTxId);

    GetMasterLedgerOtherIncome.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerOtherIncome.masLedgeFinTxId);


   SetMasterLedgerOtherIncome.Cr(
     [in] Double CFinance.masterLedgerOtherIncome.cr);

    GetMasterLedgerOtherIncome.Cr(
     [out] Double* CFinance.masterLedgerOtherIncome.cr);


   SetMasterLedgerOtherIncome.Dr(
     [in] Double CFinance.masterLedgerOtherIncome.dr);

    GetMasterLedgerOtherIncome.Dr(
     [out] Double* CFinance.masterLedgerOtherIncome.dr);


   SetMasterLedgerOtherIncome.Bal(
     [in] Double CFinance.masterLedgerOtherIncome.bal);

    GetMasterLedgerOtherIncome.Bal(
     [out] Double* CFinance.masterLedgerOtherIncome.bal);


   SetMasterLedgerOtherIncome.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerOtherIncome.businessChannelOwnerId);

    GetMasterLedgerOtherIncome.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerOtherIncome.businessChannelOwnerId);


   SetMasterLedgerOtherIncome.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerOtherIncome.masLedgeFinTxJoinId);

    GetMasterLedgerOtherIncome.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerOtherIncome.masLedgeFinTxJoinId);


   SetMasterLedgerOtherIncome.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerOtherIncome.chartOfAccountsId);

    GetMasterLedgerOtherIncome.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerOtherIncome.chartOfAccountsId);


   SetMasterLedgerOtherIncome.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerOtherIncome.chartOfClassesId);

    GetMasterLedgerOtherIncome.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerOtherIncome.chartOfClassesId);


   SetMasterLedgerOtherIncome.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerOtherIncome.branchId);

    GetMasterLedgerOtherIncome.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerOtherIncome.branchId);


   SetMasterLedgerOtherIncome.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerOtherIncome.departmentId);

    GetMasterLedgerOtherIncome.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerOtherIncome.departmentId);


   SetMasterLedgerOtherIncome.BankId(
     [in] CFinance.bank CFinance.masterLedgerOtherIncome.bankId);

    GetMasterLedgerOtherIncome.BankId(
     [out] CFinance.bank* CFinance.masterLedgerOtherIncome.bankId);


   SetMasterLedgerOtherIncome.ProgramId(
     [in] CProperty.program CFinance.masterLedgerOtherIncome.programId);

    GetMasterLedgerOtherIncome.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerOtherIncome.programId);


   SetMasterLedgerOtherIncome.ProjectId(
     [in] CProperty.project CFinance.masterLedgerOtherIncome.projectId);

    GetMasterLedgerOtherIncome.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerOtherIncome.projectId);


   SetMasterLedgerOtherIncome.ItemId(
     [in] CAdministration.item CFinance.masterLedgerOtherIncome.itemId);

    GetMasterLedgerOtherIncome.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerOtherIncome.itemId);


   SetMasterLedgerOtherIncome.JobId(
     [in] CAdministration.job CFinance.masterLedgerOtherIncome.jobId);

    GetMasterLedgerOtherIncome.JobId(
     [out] CAdministration.job* CFinance.masterLedgerOtherIncome.jobId);


   SetMasterLedgerOtherIncome.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerOtherIncome.serviceId);

    GetMasterLedgerOtherIncome.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerOtherIncome.serviceId);


   SetMasterLedgerOtherIncome.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerOtherIncome.customerId);

    GetMasterLedgerOtherIncome.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerOtherIncome.customerId);


   SetMasterLedgerOtherIncome.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerOtherIncome.supplierId);

    GetMasterLedgerOtherIncome.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerOtherIncome.supplierId);


   SetMasterLedgerOtherIncome.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerOtherIncome.purchOrderId);

    GetMasterLedgerOtherIncome.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerOtherIncome.purchOrderId);


   SetMasterLedgerOtherIncome.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerOtherIncome.masterSalesOrderId);

    GetMasterLedgerOtherIncome.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerOtherIncome.masterSalesOrderId);


   SetMasterLedgerOtherIncome.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerOtherIncome.invoiceId);

    GetMasterLedgerOtherIncome.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerOtherIncome.invoiceId);


   SetMasterLedgerOtherIncome.BillId(
     [in] CFinance.bill CFinance.masterLedgerOtherIncome.billId);

    GetMasterLedgerOtherIncome.BillId(
     [out] CFinance.bill* CFinance.masterLedgerOtherIncome.billId);


   SetMasterLedgerOtherExpense.MasterLedgerOtherExpenseId(
     [in] String CFinance.masterLedgerOtherExpense.masterLedgerOtherExpenseId);

    GetMasterLedgerOtherExpense.MasterLedgerOtherExpenseId(
     [out] String* CFinance.masterLedgerOtherExpense.masterLedgerOtherExpenseId);


   SetMasterLedgerOtherExpense.BankBSB(
     [in] String CFinance.masterLedgerOtherExpense.bankBSB);

    GetMasterLedgerOtherExpense.BankBSB(
     [out] String* CFinance.masterLedgerOtherExpense.bankBSB);


   SetMasterLedgerOtherExpense.BankAccountNumber(
     [in] String CFinance.masterLedgerOtherExpense.bankAccountNumber);

    GetMasterLedgerOtherExpense.BankAccountNumber(
     [out] String* CFinance.masterLedgerOtherExpense.bankAccountNumber);


   SetMasterLedgerOtherExpense.NameOnBankAccount(
     [in] String CFinance.masterLedgerOtherExpense.nameOnBankAccount);

    GetMasterLedgerOtherExpense.NameOnBankAccount(
     [out] String* CFinance.masterLedgerOtherExpense.nameOnBankAccount);


   SetMasterLedgerOtherExpense.Description(
     [in] String CFinance.masterLedgerOtherExpense.description);

    GetMasterLedgerOtherExpense.Description(
     [out] String* CFinance.masterLedgerOtherExpense.description);


   SetMasterLedgerOtherExpense.DocRefs(
     [in] ArrayOf<String> CFinance.masterLedgerOtherExpense.docRefs);

    GetMasterLedgerOtherExpense.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.masterLedgerOtherExpense.docRefs);


   SetMasterLedgerOtherExpense.FeeId(
     [in] String CFinance.masterLedgerOtherExpense.feeId);

    GetMasterLedgerOtherExpense.FeeId(
     [out] String* CFinance.masterLedgerOtherExpense.feeId);


   SetMasterLedgerOtherExpense.MasLedgeFinTxNum(
     [in] Int32 CFinance.masterLedgerOtherExpense.masLedgeFinTxNum);

    GetMasterLedgerOtherExpense.MasLedgeFinTxNum(
     [out] Int32* CFinance.masterLedgerOtherExpense.masLedgeFinTxNum);


   SetMasterLedgerOtherExpense.Level1AccountName(
     [in] String CFinance.masterLedgerOtherExpense.level1AccountName);

    GetMasterLedgerOtherExpense.Level1AccountName(
     [out] String* CFinance.masterLedgerOtherExpense.level1AccountName);


   SetMasterLedgerOtherExpense.Level1AccountNum(
     [in] String CFinance.masterLedgerOtherExpense.level1AccountNum);

    GetMasterLedgerOtherExpense.Level1AccountNum(
     [out] String* CFinance.masterLedgerOtherExpense.level1AccountNum);


   SetMasterLedgerOtherExpense.Level2AccountName(
     [in] String CFinance.masterLedgerOtherExpense.level2AccountName);

    GetMasterLedgerOtherExpense.Level2AccountName(
     [out] String* CFinance.masterLedgerOtherExpense.level2AccountName);


   SetMasterLedgerOtherExpense.Level2AccountNum(
     [in] String CFinance.masterLedgerOtherExpense.level2AccountNum);

    GetMasterLedgerOtherExpense.Level2AccountNum(
     [out] String* CFinance.masterLedgerOtherExpense.level2AccountNum);


   SetMasterLedgerOtherExpense.Level3AccountName(
     [in] String CFinance.masterLedgerOtherExpense.level3AccountName);

    GetMasterLedgerOtherExpense.Level3AccountName(
     [out] String* CFinance.masterLedgerOtherExpense.level3AccountName);


   SetMasterLedgerOtherExpense.Level3AccountNum(
     [in] String CFinance.masterLedgerOtherExpense.level3AccountNum);

    GetMasterLedgerOtherExpense.Level3AccountNum(
     [out] String* CFinance.masterLedgerOtherExpense.level3AccountNum);


   SetMasterLedgerOtherExpense.Level4AccountName(
     [in] String CFinance.masterLedgerOtherExpense.level4AccountName);

    GetMasterLedgerOtherExpense.Level4AccountName(
     [out] String* CFinance.masterLedgerOtherExpense.level4AccountName);


   SetMasterLedgerOtherExpense.Level4AccountNum(
     [in] String CFinance.masterLedgerOtherExpense.level4AccountNum);

    GetMasterLedgerOtherExpense.Level4AccountNum(
     [out] String* CFinance.masterLedgerOtherExpense.level4AccountNum);


   SetMasterLedgerOtherExpense.Level5AccountName(
     [in] String CFinance.masterLedgerOtherExpense.level5AccountName);

    GetMasterLedgerOtherExpense.Level5AccountName(
     [out] String* CFinance.masterLedgerOtherExpense.level5AccountName);


   SetMasterLedgerOtherExpense.Level5AccountNum(
     [in] String CFinance.masterLedgerOtherExpense.level5AccountNum);

    GetMasterLedgerOtherExpense.Level5AccountNum(
     [out] String* CFinance.masterLedgerOtherExpense.level5AccountNum);


   SetMasterLedgerOtherExpense.Level6AccountName(
     [in] String CFinance.masterLedgerOtherExpense.level6AccountName);

    GetMasterLedgerOtherExpense.Level6AccountName(
     [out] String* CFinance.masterLedgerOtherExpense.level6AccountName);


   SetMasterLedgerOtherExpense.Level6AccountNum(
     [in] String CFinance.masterLedgerOtherExpense.level6AccountNum);

    GetMasterLedgerOtherExpense.Level6AccountNum(
     [out] String* CFinance.masterLedgerOtherExpense.level6AccountNum);


   SetMasterLedgerOtherExpense.Level1ClassName(
     [in] String CFinance.masterLedgerOtherExpense.level1ClassName);

    GetMasterLedgerOtherExpense.Level1ClassName(
     [out] String* CFinance.masterLedgerOtherExpense.level1ClassName);


   SetMasterLedgerOtherExpense.Level2ClassName(
     [in] String CFinance.masterLedgerOtherExpense.level2ClassName);

    GetMasterLedgerOtherExpense.Level2ClassName(
     [out] String* CFinance.masterLedgerOtherExpense.level2ClassName);


   SetMasterLedgerOtherExpense.Level3ClassName(
     [in] String CFinance.masterLedgerOtherExpense.level3ClassName);

    GetMasterLedgerOtherExpense.Level3ClassName(
     [out] String* CFinance.masterLedgerOtherExpense.level3ClassName);


   SetMasterLedgerOtherExpense.TransactionEffective(
     [in] String CFinance.masterLedgerOtherExpense.transactionEffective);

    GetMasterLedgerOtherExpense.TransactionEffective(
     [out] String* CFinance.masterLedgerOtherExpense.transactionEffective);


   SetMasterLedgerOtherExpense.MasLedgeFinTxId(
     [in] String CFinance.masterLedgerOtherExpense.masLedgeFinTxId);

    GetMasterLedgerOtherExpense.MasLedgeFinTxId(
     [out] String* CFinance.masterLedgerOtherExpense.masLedgeFinTxId);


   SetMasterLedgerOtherExpense.Cr(
     [in] Double CFinance.masterLedgerOtherExpense.cr);

    GetMasterLedgerOtherExpense.Cr(
     [out] Double* CFinance.masterLedgerOtherExpense.cr);


   SetMasterLedgerOtherExpense.Dr(
     [in] Double CFinance.masterLedgerOtherExpense.dr);

    GetMasterLedgerOtherExpense.Dr(
     [out] Double* CFinance.masterLedgerOtherExpense.dr);


   SetMasterLedgerOtherExpense.Bal(
     [in] Double CFinance.masterLedgerOtherExpense.bal);

    GetMasterLedgerOtherExpense.Bal(
     [out] Double* CFinance.masterLedgerOtherExpense.bal);


   SetMasterLedgerOtherExpense.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterLedgerOtherExpense.businessChannelOwnerId);

    GetMasterLedgerOtherExpense.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterLedgerOtherExpense.businessChannelOwnerId);


   SetMasterLedgerOtherExpense.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterLedgerOtherExpense.masLedgeFinTxJoinId);

    GetMasterLedgerOtherExpense.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterLedgerOtherExpense.masLedgeFinTxJoinId);


   SetMasterLedgerOtherExpense.ChartOfAccountsId(
     [in] CFinance.chartOfAccounts CFinance.masterLedgerOtherExpense.chartOfAccountsId);

    GetMasterLedgerOtherExpense.ChartOfAccountsId(
     [out] CFinance.chartOfAccounts* CFinance.masterLedgerOtherExpense.chartOfAccountsId);


   SetMasterLedgerOtherExpense.ChartOfClassesId(
     [in] CFinance.chartOfClasses CFinance.masterLedgerOtherExpense.chartOfClassesId);

    GetMasterLedgerOtherExpense.ChartOfClassesId(
     [out] CFinance.chartOfClasses* CFinance.masterLedgerOtherExpense.chartOfClassesId);


   SetMasterLedgerOtherExpense.BranchId(
     [in] CAdministration.branch CFinance.masterLedgerOtherExpense.branchId);

    GetMasterLedgerOtherExpense.BranchId(
     [out] CAdministration.branch* CFinance.masterLedgerOtherExpense.branchId);


   SetMasterLedgerOtherExpense.DepartmentId(
     [in] CAdministration.department CFinance.masterLedgerOtherExpense.departmentId);

    GetMasterLedgerOtherExpense.DepartmentId(
     [out] CAdministration.department* CFinance.masterLedgerOtherExpense.departmentId);


   SetMasterLedgerOtherExpense.BankId(
     [in] CFinance.bank CFinance.masterLedgerOtherExpense.bankId);

    GetMasterLedgerOtherExpense.BankId(
     [out] CFinance.bank* CFinance.masterLedgerOtherExpense.bankId);


   SetMasterLedgerOtherExpense.ProgramId(
     [in] CProperty.program CFinance.masterLedgerOtherExpense.programId);

    GetMasterLedgerOtherExpense.ProgramId(
     [out] CProperty.program* CFinance.masterLedgerOtherExpense.programId);


   SetMasterLedgerOtherExpense.ProjectId(
     [in] CProperty.project CFinance.masterLedgerOtherExpense.projectId);

    GetMasterLedgerOtherExpense.ProjectId(
     [out] CProperty.project* CFinance.masterLedgerOtherExpense.projectId);


   SetMasterLedgerOtherExpense.ItemId(
     [in] CAdministration.item CFinance.masterLedgerOtherExpense.itemId);

    GetMasterLedgerOtherExpense.ItemId(
     [out] CAdministration.item* CFinance.masterLedgerOtherExpense.itemId);


   SetMasterLedgerOtherExpense.JobId(
     [in] CAdministration.job CFinance.masterLedgerOtherExpense.jobId);

    GetMasterLedgerOtherExpense.JobId(
     [out] CAdministration.job* CFinance.masterLedgerOtherExpense.jobId);


   SetMasterLedgerOtherExpense.ServiceId(
     [in] CAdministration.service CFinance.masterLedgerOtherExpense.serviceId);

    GetMasterLedgerOtherExpense.ServiceId(
     [out] CAdministration.service* CFinance.masterLedgerOtherExpense.serviceId);


   SetMasterLedgerOtherExpense.CustomerId(
     [in] CCustomer.customer CFinance.masterLedgerOtherExpense.customerId);

    GetMasterLedgerOtherExpense.CustomerId(
     [out] CCustomer.customer* CFinance.masterLedgerOtherExpense.customerId);


   SetMasterLedgerOtherExpense.SupplierId(
     [in] CSupplier.supplier CFinance.masterLedgerOtherExpense.supplierId);

    GetMasterLedgerOtherExpense.SupplierId(
     [out] CSupplier.supplier* CFinance.masterLedgerOtherExpense.supplierId);


   SetMasterLedgerOtherExpense.PurchOrderId(
     [in] realEstatePurchOrders CFinance.masterLedgerOtherExpense.purchOrderId);

    GetMasterLedgerOtherExpense.PurchOrderId(
     [out] realEstatePurchOrders* CFinance.masterLedgerOtherExpense.purchOrderId);


   SetMasterLedgerOtherExpense.MasterSalesOrderId(
     [in] CFinance.masterSalesOrder CFinance.masterLedgerOtherExpense.masterSalesOrderId);

    GetMasterLedgerOtherExpense.MasterSalesOrderId(
     [out] CFinance.masterSalesOrder* CFinance.masterLedgerOtherExpense.masterSalesOrderId);


   SetMasterLedgerOtherExpense.InvoiceId(
     [in] CFinance.invoice CFinance.masterLedgerOtherExpense.invoiceId);

    GetMasterLedgerOtherExpense.InvoiceId(
     [out] CFinance.invoice* CFinance.masterLedgerOtherExpense.invoiceId);


   SetMasterLedgerOtherExpense.BillId(
     [in] CFinance.bill CFinance.masterLedgerOtherExpense.billId);

    GetMasterLedgerOtherExpense.BillId(
     [out] CFinance.bill* CFinance.masterLedgerOtherExpense.billId);


   SetLevel1Budget.Level1BudgetId(
     [in] String CFinance.level1Budget.level1BudgetId);

    GetLevel1Budget.Level1BudgetId(
     [out] String* CFinance.level1Budget.level1BudgetId);


   SetLevel1Budget.BudgetName(
     [in] String CFinance.level1Budget.budgetName);

    GetLevel1Budget.BudgetName(
     [out] String* CFinance.level1Budget.budgetName);


   SetLevel1Budget.EndYearMonthyyyymm(
     [in] Int32 CFinance.level1Budget.endYearMonthyyyymm);

    GetLevel1Budget.EndYearMonthyyyymm(
     [out] Int32* CFinance.level1Budget.endYearMonthyyyymm);


   SetLevel1Budget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.level1Budget.twelveMonthSequence);

    GetLevel1Budget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.level1Budget.twelveMonthSequence);


   SetLevel1Budget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.incomeItemTypeIds);

    GetLevel1Budget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.incomeItemTypeIds);


   SetLevel1Budget.JanRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.janRevenues);

    GetLevel1Budget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.janRevenues);


   SetLevel1Budget.FebRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.febRevenues);

    GetLevel1Budget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.febRevenues);


   SetLevel1Budget.MarRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.marRevenues);

    GetLevel1Budget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.marRevenues);


   SetLevel1Budget.AprRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.aprRevenues);

    GetLevel1Budget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.aprRevenues);


   SetLevel1Budget.MayRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.mayRevenues);

    GetLevel1Budget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.mayRevenues);


   SetLevel1Budget.JunRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.junRevenues);

    GetLevel1Budget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.junRevenues);


   SetLevel1Budget.JulRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.julRevenues);

    GetLevel1Budget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.julRevenues);


   SetLevel1Budget.AugRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.augRevenues);

    GetLevel1Budget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.augRevenues);


   SetLevel1Budget.SepRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.sepRevenues);

    GetLevel1Budget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.sepRevenues);


   SetLevel1Budget.OctRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.octRevenues);

    GetLevel1Budget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.octRevenues);


   SetLevel1Budget.NovRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.novRevenues);

    GetLevel1Budget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.novRevenues);


   SetLevel1Budget.DecRevenues(
     [in] ArrayOf<Double> CFinance.level1Budget.decRevenues);

    GetLevel1Budget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.decRevenues);


   SetLevel1Budget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.janItemTypeIds);

    GetLevel1Budget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.janItemTypeIds);


   SetLevel1Budget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.febItemTypeIds);

    GetLevel1Budget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.febItemTypeIds);


   SetLevel1Budget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.marItemTypeIds);

    GetLevel1Budget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.marItemTypeIds);


   SetLevel1Budget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.aprItemTypeIds);

    GetLevel1Budget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.aprItemTypeIds);


   SetLevel1Budget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.mayItemTypeIds);

    GetLevel1Budget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.mayItemTypeIds);


   SetLevel1Budget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.junItemTypeIds);

    GetLevel1Budget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.junItemTypeIds);


   SetLevel1Budget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.julItemTypeIds);

    GetLevel1Budget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.julItemTypeIds);


   SetLevel1Budget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.augItemTypeIds);

    GetLevel1Budget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.augItemTypeIds);


   SetLevel1Budget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.sepItemTypeIds);

    GetLevel1Budget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.sepItemTypeIds);


   SetLevel1Budget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.octItemTypeIds);

    GetLevel1Budget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.octItemTypeIds);


   SetLevel1Budget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.novItemTypeIds);

    GetLevel1Budget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.novItemTypeIds);


   SetLevel1Budget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.decItemTypeIds);

    GetLevel1Budget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.decItemTypeIds);


   SetLevel1Budget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.janCostsItems);

    GetLevel1Budget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.janCostsItems);


   SetLevel1Budget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.febCostsItems);

    GetLevel1Budget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.febCostsItems);


   SetLevel1Budget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.marCostsItems);

    GetLevel1Budget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.marCostsItems);


   SetLevel1Budget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.aprCostsItems);

    GetLevel1Budget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.aprCostsItems);


   SetLevel1Budget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.mayCostsItems);

    GetLevel1Budget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.mayCostsItems);


   SetLevel1Budget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.junCostsItems);

    GetLevel1Budget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.junCostsItems);


   SetLevel1Budget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.julCostsItems);

    GetLevel1Budget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.julCostsItems);


   SetLevel1Budget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.augCostsItems);

    GetLevel1Budget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.augCostsItems);


   SetLevel1Budget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.sepCostsItems);

    GetLevel1Budget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.sepCostsItems);


   SetLevel1Budget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.octCostsItems);

    GetLevel1Budget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.octCostsItems);


   SetLevel1Budget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.novCostsItems);

    GetLevel1Budget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.novCostsItems);


   SetLevel1Budget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.level1Budget.decCostsItems);

    GetLevel1Budget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.decCostsItems);


   SetLevel1Budget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.janJobTypeIds);

    GetLevel1Budget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.janJobTypeIds);


   SetLevel1Budget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.febJobTypeIds);

    GetLevel1Budget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.febJobTypeIds);


   SetLevel1Budget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.marJobTypeIds);

    GetLevel1Budget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.marJobTypeIds);


   SetLevel1Budget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.aprJobTypeIds);

    GetLevel1Budget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.aprJobTypeIds);


   SetLevel1Budget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.mayJobTypeIds);

    GetLevel1Budget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.mayJobTypeIds);


   SetLevel1Budget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.junJobTypeIds);

    GetLevel1Budget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.junJobTypeIds);


   SetLevel1Budget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.julJobTypeIds);

    GetLevel1Budget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.julJobTypeIds);


   SetLevel1Budget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.augJobTypeIds);

    GetLevel1Budget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.augJobTypeIds);


   SetLevel1Budget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.sepJobTypeIds);

    GetLevel1Budget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.sepJobTypeIds);


   SetLevel1Budget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.octJobTypeIds);

    GetLevel1Budget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.octJobTypeIds);


   SetLevel1Budget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.novJobTypeIds);

    GetLevel1Budget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.novJobTypeIds);


   SetLevel1Budget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.decJobTypeIds);

    GetLevel1Budget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.decJobTypeIds);


   SetLevel1Budget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.janCostsJobs);

    GetLevel1Budget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.janCostsJobs);


   SetLevel1Budget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.febCostsJobs);

    GetLevel1Budget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.febCostsJobs);


   SetLevel1Budget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.marCostsJobs);

    GetLevel1Budget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.marCostsJobs);


   SetLevel1Budget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.aprCostsJobs);

    GetLevel1Budget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.aprCostsJobs);


   SetLevel1Budget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.mayCostsJobs);

    GetLevel1Budget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.mayCostsJobs);


   SetLevel1Budget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.junCostsJobs);

    GetLevel1Budget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.junCostsJobs);


   SetLevel1Budget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.julCostsJobs);

    GetLevel1Budget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.julCostsJobs);


   SetLevel1Budget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.augCostsJobs);

    GetLevel1Budget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.augCostsJobs);


   SetLevel1Budget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.sepCostsJobs);

    GetLevel1Budget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.sepCostsJobs);


   SetLevel1Budget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.octCostsJobs);

    GetLevel1Budget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.octCostsJobs);


   SetLevel1Budget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.novCostsJobs);

    GetLevel1Budget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.novCostsJobs);


   SetLevel1Budget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.level1Budget.decCostsJobs);

    GetLevel1Budget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.decCostsJobs);


   SetLevel1Budget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.janServiceTypeIds);

    GetLevel1Budget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.janServiceTypeIds);


   SetLevel1Budget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.febServiceTypeIds);

    GetLevel1Budget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.febServiceTypeIds);


   SetLevel1Budget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.marServiceTypeIds);

    GetLevel1Budget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.marServiceTypeIds);


   SetLevel1Budget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.aprServiceTypeIds);

    GetLevel1Budget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.aprServiceTypeIds);


   SetLevel1Budget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.mayServiceTypeIds);

    GetLevel1Budget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.mayServiceTypeIds);


   SetLevel1Budget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.junServiceTypeIds);

    GetLevel1Budget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.junServiceTypeIds);


   SetLevel1Budget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.julServiceTypeIds);

    GetLevel1Budget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.julServiceTypeIds);


   SetLevel1Budget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.augServiceTypeIds);

    GetLevel1Budget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.augServiceTypeIds);


   SetLevel1Budget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.sepServiceTypeIds);

    GetLevel1Budget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.sepServiceTypeIds);


   SetLevel1Budget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.octServiceTypeIds);

    GetLevel1Budget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.octServiceTypeIds);


   SetLevel1Budget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.novServiceTypeIds);

    GetLevel1Budget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.novServiceTypeIds);


   SetLevel1Budget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.level1Budget.decServiceTypeIds);

    GetLevel1Budget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level1Budget.decServiceTypeIds);


   SetLevel1Budget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.janCostsServices);

    GetLevel1Budget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.janCostsServices);


   SetLevel1Budget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.febCostsServices);

    GetLevel1Budget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.febCostsServices);


   SetLevel1Budget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.marCostsServices);

    GetLevel1Budget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.marCostsServices);


   SetLevel1Budget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.aprCostsServices);

    GetLevel1Budget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.aprCostsServices);


   SetLevel1Budget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.mayCostsServices);

    GetLevel1Budget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.mayCostsServices);


   SetLevel1Budget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.junCostsServices);

    GetLevel1Budget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.junCostsServices);


   SetLevel1Budget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.julCostsServices);

    GetLevel1Budget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.julCostsServices);


   SetLevel1Budget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.augCostsServices);

    GetLevel1Budget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.augCostsServices);


   SetLevel1Budget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.sepCostsServices);

    GetLevel1Budget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.sepCostsServices);


   SetLevel1Budget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.octCostsServices);

    GetLevel1Budget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.octCostsServices);


   SetLevel1Budget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.novCostsServices);

    GetLevel1Budget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.novCostsServices);


   SetLevel1Budget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.level1Budget.decCostsServices);

    GetLevel1Budget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.decCostsServices);


   SetLevel1Budget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.level1Budget.twelveTotalMonthlyCosts);

    GetLevel1Budget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.level1Budget.twelveTotalMonthlyCosts);


   SetLevel1Budget.YearCostThisBudgetId(
     [in] Double CFinance.level1Budget.yearCostThisBudgetId);

    GetLevel1Budget.YearCostThisBudgetId(
     [out] Double* CFinance.level1Budget.yearCostThisBudgetId);


   SetLevel1Budget.NetProfitLossThisLevel1BudgetId(
     [in] Double CFinance.level1Budget.netProfitLossThisLevel1BudgetId);

    GetLevel1Budget.NetProfitLossThisLevel1BudgetId(
     [out] Double* CFinance.level1Budget.netProfitLossThisLevel1BudgetId);


   SetLevel1Budget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.level1Budget.linkingInternalBudgetNum);

    GetLevel1Budget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.level1Budget.linkingInternalBudgetNum);


   SetLevel1Budget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.level1Budget.customerIds);

    GetLevel1Budget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.level1Budget.customerIds);


   SetLevel1Budget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.level1Budget.propertyIds);

    GetLevel1Budget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.level1Budget.propertyIds);


   SetLevel1Budget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.level1Budget.programIds);

    GetLevel1Budget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.level1Budget.programIds);


   SetLevel1Budget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.level1Budget.projectIds);

    GetLevel1Budget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.level1Budget.projectIds);


   SetLevel1Budget.LinkedToLevel2BudgetId(
     [in] CFinance.level2Budget CFinance.level1Budget.linkedToLevel2BudgetId);

    GetLevel1Budget.LinkedToLevel2BudgetId(
     [out] CFinance.level2Budget* CFinance.level1Budget.linkedToLevel2BudgetId);


   SetLevel1Budget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.level1Budget.masterAssetId);

    GetLevel1Budget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.level1Budget.masterAssetId);


   SetLevel1Budget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level1Budget.businessChannelOwnerId);

    GetLevel1Budget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level1Budget.businessChannelOwnerId);





   SetLevel2Budget.Level2BudgetId(
     [in] String CFinance.level2Budget.level2BudgetId);

    GetLevel2Budget.Level2BudgetId(
     [out] String* CFinance.level2Budget.level2BudgetId);


   SetLevel2Budget.BudgetName(
     [in] String CFinance.level2Budget.budgetName);

    GetLevel2Budget.BudgetName(
     [out] String* CFinance.level2Budget.budgetName);


   SetLevel2Budget.EndYearMonthyyyymm(
     [in] Int32 CFinance.level2Budget.endYearMonthyyyymm);

    GetLevel2Budget.EndYearMonthyyyymm(
     [out] Int32* CFinance.level2Budget.endYearMonthyyyymm);


   SetLevel2Budget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.level2Budget.twelveMonthSequence);

    GetLevel2Budget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.level2Budget.twelveMonthSequence);


   SetLevel2Budget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.incomeItemTypeIds);

    GetLevel2Budget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.incomeItemTypeIds);


   SetLevel2Budget.JanRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.janRevenues);

    GetLevel2Budget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.janRevenues);


   SetLevel2Budget.FebRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.febRevenues);

    GetLevel2Budget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.febRevenues);


   SetLevel2Budget.MarRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.marRevenues);

    GetLevel2Budget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.marRevenues);


   SetLevel2Budget.AprRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.aprRevenues);

    GetLevel2Budget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.aprRevenues);


   SetLevel2Budget.MayRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.mayRevenues);

    GetLevel2Budget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.mayRevenues);


   SetLevel2Budget.JunRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.junRevenues);

    GetLevel2Budget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.junRevenues);


   SetLevel2Budget.JulRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.julRevenues);

    GetLevel2Budget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.julRevenues);


   SetLevel2Budget.AugRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.augRevenues);

    GetLevel2Budget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.augRevenues);


   SetLevel2Budget.SepRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.sepRevenues);

    GetLevel2Budget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.sepRevenues);


   SetLevel2Budget.OctRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.octRevenues);

    GetLevel2Budget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.octRevenues);


   SetLevel2Budget.NovRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.novRevenues);

    GetLevel2Budget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.novRevenues);


   SetLevel2Budget.DecRevenues(
     [in] ArrayOf<Double> CFinance.level2Budget.decRevenues);

    GetLevel2Budget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.decRevenues);


   SetLevel2Budget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.janItemTypeIds);

    GetLevel2Budget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.janItemTypeIds);


   SetLevel2Budget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.febItemTypeIds);

    GetLevel2Budget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.febItemTypeIds);


   SetLevel2Budget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.marItemTypeIds);

    GetLevel2Budget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.marItemTypeIds);


   SetLevel2Budget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.aprItemTypeIds);

    GetLevel2Budget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.aprItemTypeIds);


   SetLevel2Budget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.mayItemTypeIds);

    GetLevel2Budget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.mayItemTypeIds);


   SetLevel2Budget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.junItemTypeIds);

    GetLevel2Budget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.junItemTypeIds);


   SetLevel2Budget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.julItemTypeIds);

    GetLevel2Budget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.julItemTypeIds);


   SetLevel2Budget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.augItemTypeIds);

    GetLevel2Budget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.augItemTypeIds);


   SetLevel2Budget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.sepItemTypeIds);

    GetLevel2Budget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.sepItemTypeIds);


   SetLevel2Budget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.octItemTypeIds);

    GetLevel2Budget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.octItemTypeIds);


   SetLevel2Budget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.novItemTypeIds);

    GetLevel2Budget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.novItemTypeIds);


   SetLevel2Budget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.decItemTypeIds);

    GetLevel2Budget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.decItemTypeIds);


   SetLevel2Budget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.janCostsItems);

    GetLevel2Budget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.janCostsItems);


   SetLevel2Budget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.febCostsItems);

    GetLevel2Budget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.febCostsItems);


   SetLevel2Budget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.marCostsItems);

    GetLevel2Budget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.marCostsItems);


   SetLevel2Budget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.aprCostsItems);

    GetLevel2Budget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.aprCostsItems);


   SetLevel2Budget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.mayCostsItems);

    GetLevel2Budget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.mayCostsItems);


   SetLevel2Budget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.junCostsItems);

    GetLevel2Budget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.junCostsItems);


   SetLevel2Budget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.julCostsItems);

    GetLevel2Budget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.julCostsItems);


   SetLevel2Budget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.augCostsItems);

    GetLevel2Budget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.augCostsItems);


   SetLevel2Budget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.sepCostsItems);

    GetLevel2Budget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.sepCostsItems);


   SetLevel2Budget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.octCostsItems);

    GetLevel2Budget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.octCostsItems);


   SetLevel2Budget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.novCostsItems);

    GetLevel2Budget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.novCostsItems);


   SetLevel2Budget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.level2Budget.decCostsItems);

    GetLevel2Budget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.decCostsItems);


   SetLevel2Budget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.janJobTypeIds);

    GetLevel2Budget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.janJobTypeIds);


   SetLevel2Budget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.febJobTypeIds);

    GetLevel2Budget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.febJobTypeIds);


   SetLevel2Budget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.marJobTypeIds);

    GetLevel2Budget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.marJobTypeIds);


   SetLevel2Budget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.aprJobTypeIds);

    GetLevel2Budget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.aprJobTypeIds);


   SetLevel2Budget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.mayJobTypeIds);

    GetLevel2Budget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.mayJobTypeIds);


   SetLevel2Budget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.junJobTypeIds);

    GetLevel2Budget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.junJobTypeIds);


   SetLevel2Budget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.julJobTypeIds);

    GetLevel2Budget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.julJobTypeIds);


   SetLevel2Budget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.augJobTypeIds);

    GetLevel2Budget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.augJobTypeIds);


   SetLevel2Budget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.sepJobTypeIds);

    GetLevel2Budget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.sepJobTypeIds);


   SetLevel2Budget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.octJobTypeIds);

    GetLevel2Budget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.octJobTypeIds);


   SetLevel2Budget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.novJobTypeIds);

    GetLevel2Budget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.novJobTypeIds);


   SetLevel2Budget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.decJobTypeIds);

    GetLevel2Budget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.decJobTypeIds);


   SetLevel2Budget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.janCostsJobs);

    GetLevel2Budget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.janCostsJobs);


   SetLevel2Budget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.febCostsJobs);

    GetLevel2Budget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.febCostsJobs);


   SetLevel2Budget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.marCostsJobs);

    GetLevel2Budget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.marCostsJobs);


   SetLevel2Budget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.aprCostsJobs);

    GetLevel2Budget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.aprCostsJobs);


   SetLevel2Budget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.mayCostsJobs);

    GetLevel2Budget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.mayCostsJobs);


   SetLevel2Budget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.junCostsJobs);

    GetLevel2Budget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.junCostsJobs);


   SetLevel2Budget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.julCostsJobs);

    GetLevel2Budget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.julCostsJobs);


   SetLevel2Budget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.augCostsJobs);

    GetLevel2Budget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.augCostsJobs);


   SetLevel2Budget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.sepCostsJobs);

    GetLevel2Budget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.sepCostsJobs);


   SetLevel2Budget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.octCostsJobs);

    GetLevel2Budget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.octCostsJobs);


   SetLevel2Budget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.novCostsJobs);

    GetLevel2Budget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.novCostsJobs);


   SetLevel2Budget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.level2Budget.decCostsJobs);

    GetLevel2Budget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.decCostsJobs);


   SetLevel2Budget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.janServiceTypeIds);

    GetLevel2Budget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.janServiceTypeIds);


   SetLevel2Budget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.febServiceTypeIds);

    GetLevel2Budget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.febServiceTypeIds);


   SetLevel2Budget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.marServiceTypeIds);

    GetLevel2Budget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.marServiceTypeIds);


   SetLevel2Budget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.aprServiceTypeIds);

    GetLevel2Budget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.aprServiceTypeIds);


   SetLevel2Budget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.mayServiceTypeIds);

    GetLevel2Budget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.mayServiceTypeIds);


   SetLevel2Budget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.junServiceTypeIds);

    GetLevel2Budget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.junServiceTypeIds);


   SetLevel2Budget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.julServiceTypeIds);

    GetLevel2Budget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.julServiceTypeIds);


   SetLevel2Budget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.augServiceTypeIds);

    GetLevel2Budget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.augServiceTypeIds);


   SetLevel2Budget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.sepServiceTypeIds);

    GetLevel2Budget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.sepServiceTypeIds);


   SetLevel2Budget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.octServiceTypeIds);

    GetLevel2Budget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.octServiceTypeIds);


   SetLevel2Budget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.novServiceTypeIds);

    GetLevel2Budget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.novServiceTypeIds);


   SetLevel2Budget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.level2Budget.decServiceTypeIds);

    GetLevel2Budget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level2Budget.decServiceTypeIds);


   SetLevel2Budget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.janCostsServices);

    GetLevel2Budget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.janCostsServices);


   SetLevel2Budget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.febCostsServices);

    GetLevel2Budget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.febCostsServices);


   SetLevel2Budget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.marCostsServices);

    GetLevel2Budget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.marCostsServices);


   SetLevel2Budget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.aprCostsServices);

    GetLevel2Budget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.aprCostsServices);


   SetLevel2Budget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.mayCostsServices);

    GetLevel2Budget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.mayCostsServices);


   SetLevel2Budget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.junCostsServices);

    GetLevel2Budget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.junCostsServices);


   SetLevel2Budget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.julCostsServices);

    GetLevel2Budget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.julCostsServices);


   SetLevel2Budget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.augCostsServices);

    GetLevel2Budget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.augCostsServices);


   SetLevel2Budget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.sepCostsServices);

    GetLevel2Budget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.sepCostsServices);


   SetLevel2Budget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.octCostsServices);

    GetLevel2Budget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.octCostsServices);


   SetLevel2Budget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.novCostsServices);

    GetLevel2Budget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.novCostsServices);


   SetLevel2Budget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.level2Budget.decCostsServices);

    GetLevel2Budget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.decCostsServices);


   SetLevel2Budget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.level2Budget.twelveTotalMonthlyCosts);

    GetLevel2Budget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.level2Budget.twelveTotalMonthlyCosts);


   SetLevel2Budget.YearCostThisBudgetId(
     [in] Double CFinance.level2Budget.yearCostThisBudgetId);

    GetLevel2Budget.YearCostThisBudgetId(
     [out] Double* CFinance.level2Budget.yearCostThisBudgetId);


   SetLevel2Budget.NetProfitLossThisLevel2BudgetId(
     [in] Double CFinance.level2Budget.netProfitLossThisLevel2BudgetId);

    GetLevel2Budget.NetProfitLossThisLevel2BudgetId(
     [out] Double* CFinance.level2Budget.netProfitLossThisLevel2BudgetId);


   SetLevel2Budget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.level2Budget.linkingInternalBudgetNum);

    GetLevel2Budget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.level2Budget.linkingInternalBudgetNum);


   SetLevel2Budget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.level2Budget.customerIds);

    GetLevel2Budget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.level2Budget.customerIds);


   SetLevel2Budget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.level2Budget.propertyIds);

    GetLevel2Budget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.level2Budget.propertyIds);


   SetLevel2Budget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.level2Budget.programIds);

    GetLevel2Budget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.level2Budget.programIds);


   SetLevel2Budget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.level2Budget.projectIds);

    GetLevel2Budget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.level2Budget.projectIds);


   SetLevel2Budget.LinkedToLevel3BudgetId(
     [in] CFinance.level3Budget CFinance.level2Budget.linkedToLevel3BudgetId);

    GetLevel2Budget.LinkedToLevel3BudgetId(
     [out] CFinance.level3Budget* CFinance.level2Budget.linkedToLevel3BudgetId);


   SetLevel2Budget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.level2Budget.masterAssetId);

    GetLevel2Budget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.level2Budget.masterAssetId);


   SetLevel2Budget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level2Budget.businessChannelOwnerId);

    GetLevel2Budget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level2Budget.businessChannelOwnerId);





   SetLevel3Budget.Level3BudgetId(
     [in] String CFinance.level3Budget.level3BudgetId);

    GetLevel3Budget.Level3BudgetId(
     [out] String* CFinance.level3Budget.level3BudgetId);


   SetLevel3Budget.BudgetName(
     [in] String CFinance.level3Budget.budgetName);

    GetLevel3Budget.BudgetName(
     [out] String* CFinance.level3Budget.budgetName);


   SetLevel3Budget.EndYearMonthyyyymm(
     [in] Int32 CFinance.level3Budget.endYearMonthyyyymm);

    GetLevel3Budget.EndYearMonthyyyymm(
     [out] Int32* CFinance.level3Budget.endYearMonthyyyymm);


   SetLevel3Budget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.level3Budget.twelveMonthSequence);

    GetLevel3Budget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.level3Budget.twelveMonthSequence);


   SetLevel3Budget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.incomeItemTypeIds);

    GetLevel3Budget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.incomeItemTypeIds);


   SetLevel3Budget.JanRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.janRevenues);

    GetLevel3Budget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.janRevenues);


   SetLevel3Budget.FebRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.febRevenues);

    GetLevel3Budget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.febRevenues);


   SetLevel3Budget.MarRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.marRevenues);

    GetLevel3Budget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.marRevenues);


   SetLevel3Budget.AprRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.aprRevenues);

    GetLevel3Budget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.aprRevenues);


   SetLevel3Budget.MayRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.mayRevenues);

    GetLevel3Budget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.mayRevenues);


   SetLevel3Budget.JunRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.junRevenues);

    GetLevel3Budget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.junRevenues);


   SetLevel3Budget.JulRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.julRevenues);

    GetLevel3Budget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.julRevenues);


   SetLevel3Budget.AugRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.augRevenues);

    GetLevel3Budget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.augRevenues);


   SetLevel3Budget.SepRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.sepRevenues);

    GetLevel3Budget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.sepRevenues);


   SetLevel3Budget.OctRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.octRevenues);

    GetLevel3Budget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.octRevenues);


   SetLevel3Budget.NovRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.novRevenues);

    GetLevel3Budget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.novRevenues);


   SetLevel3Budget.DecRevenues(
     [in] ArrayOf<Double> CFinance.level3Budget.decRevenues);

    GetLevel3Budget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.decRevenues);


   SetLevel3Budget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.janItemTypeIds);

    GetLevel3Budget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.janItemTypeIds);


   SetLevel3Budget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.febItemTypeIds);

    GetLevel3Budget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.febItemTypeIds);


   SetLevel3Budget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.marItemTypeIds);

    GetLevel3Budget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.marItemTypeIds);


   SetLevel3Budget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.aprItemTypeIds);

    GetLevel3Budget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.aprItemTypeIds);


   SetLevel3Budget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.mayItemTypeIds);

    GetLevel3Budget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.mayItemTypeIds);


   SetLevel3Budget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.junItemTypeIds);

    GetLevel3Budget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.junItemTypeIds);


   SetLevel3Budget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.julItemTypeIds);

    GetLevel3Budget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.julItemTypeIds);


   SetLevel3Budget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.augItemTypeIds);

    GetLevel3Budget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.augItemTypeIds);


   SetLevel3Budget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.sepItemTypeIds);

    GetLevel3Budget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.sepItemTypeIds);


   SetLevel3Budget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.octItemTypeIds);

    GetLevel3Budget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.octItemTypeIds);


   SetLevel3Budget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.novItemTypeIds);

    GetLevel3Budget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.novItemTypeIds);


   SetLevel3Budget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.decItemTypeIds);

    GetLevel3Budget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.decItemTypeIds);


   SetLevel3Budget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.janCostsItems);

    GetLevel3Budget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.janCostsItems);


   SetLevel3Budget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.febCostsItems);

    GetLevel3Budget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.febCostsItems);


   SetLevel3Budget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.marCostsItems);

    GetLevel3Budget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.marCostsItems);


   SetLevel3Budget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.aprCostsItems);

    GetLevel3Budget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.aprCostsItems);


   SetLevel3Budget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.mayCostsItems);

    GetLevel3Budget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.mayCostsItems);


   SetLevel3Budget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.junCostsItems);

    GetLevel3Budget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.junCostsItems);


   SetLevel3Budget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.julCostsItems);

    GetLevel3Budget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.julCostsItems);


   SetLevel3Budget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.augCostsItems);

    GetLevel3Budget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.augCostsItems);


   SetLevel3Budget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.sepCostsItems);

    GetLevel3Budget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.sepCostsItems);


   SetLevel3Budget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.octCostsItems);

    GetLevel3Budget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.octCostsItems);


   SetLevel3Budget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.novCostsItems);

    GetLevel3Budget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.novCostsItems);


   SetLevel3Budget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.level3Budget.decCostsItems);

    GetLevel3Budget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.decCostsItems);


   SetLevel3Budget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.janJobTypeIds);

    GetLevel3Budget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.janJobTypeIds);


   SetLevel3Budget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.febJobTypeIds);

    GetLevel3Budget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.febJobTypeIds);


   SetLevel3Budget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.marJobTypeIds);

    GetLevel3Budget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.marJobTypeIds);


   SetLevel3Budget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.aprJobTypeIds);

    GetLevel3Budget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.aprJobTypeIds);


   SetLevel3Budget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.mayJobTypeIds);

    GetLevel3Budget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.mayJobTypeIds);


   SetLevel3Budget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.junJobTypeIds);

    GetLevel3Budget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.junJobTypeIds);


   SetLevel3Budget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.julJobTypeIds);

    GetLevel3Budget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.julJobTypeIds);


   SetLevel3Budget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.augJobTypeIds);

    GetLevel3Budget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.augJobTypeIds);


   SetLevel3Budget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.sepJobTypeIds);

    GetLevel3Budget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.sepJobTypeIds);


   SetLevel3Budget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.octJobTypeIds);

    GetLevel3Budget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.octJobTypeIds);


   SetLevel3Budget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.novJobTypeIds);

    GetLevel3Budget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.novJobTypeIds);


   SetLevel3Budget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.decJobTypeIds);

    GetLevel3Budget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.decJobTypeIds);


   SetLevel3Budget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.janCostsJobs);

    GetLevel3Budget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.janCostsJobs);


   SetLevel3Budget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.febCostsJobs);

    GetLevel3Budget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.febCostsJobs);


   SetLevel3Budget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.marCostsJobs);

    GetLevel3Budget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.marCostsJobs);


   SetLevel3Budget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.aprCostsJobs);

    GetLevel3Budget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.aprCostsJobs);


   SetLevel3Budget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.mayCostsJobs);

    GetLevel3Budget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.mayCostsJobs);


   SetLevel3Budget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.junCostsJobs);

    GetLevel3Budget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.junCostsJobs);


   SetLevel3Budget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.julCostsJobs);

    GetLevel3Budget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.julCostsJobs);


   SetLevel3Budget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.augCostsJobs);

    GetLevel3Budget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.augCostsJobs);


   SetLevel3Budget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.sepCostsJobs);

    GetLevel3Budget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.sepCostsJobs);


   SetLevel3Budget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.octCostsJobs);

    GetLevel3Budget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.octCostsJobs);


   SetLevel3Budget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.novCostsJobs);

    GetLevel3Budget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.novCostsJobs);


   SetLevel3Budget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.level3Budget.decCostsJobs);

    GetLevel3Budget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.decCostsJobs);


   SetLevel3Budget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.janServiceTypeIds);

    GetLevel3Budget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.janServiceTypeIds);


   SetLevel3Budget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.febServiceTypeIds);

    GetLevel3Budget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.febServiceTypeIds);


   SetLevel3Budget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.marServiceTypeIds);

    GetLevel3Budget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.marServiceTypeIds);


   SetLevel3Budget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.aprServiceTypeIds);

    GetLevel3Budget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.aprServiceTypeIds);


   SetLevel3Budget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.mayServiceTypeIds);

    GetLevel3Budget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.mayServiceTypeIds);


   SetLevel3Budget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.junServiceTypeIds);

    GetLevel3Budget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.junServiceTypeIds);


   SetLevel3Budget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.julServiceTypeIds);

    GetLevel3Budget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.julServiceTypeIds);


   SetLevel3Budget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.augServiceTypeIds);

    GetLevel3Budget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.augServiceTypeIds);


   SetLevel3Budget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.sepServiceTypeIds);

    GetLevel3Budget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.sepServiceTypeIds);


   SetLevel3Budget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.octServiceTypeIds);

    GetLevel3Budget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.octServiceTypeIds);


   SetLevel3Budget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.novServiceTypeIds);

    GetLevel3Budget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.novServiceTypeIds);


   SetLevel3Budget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.level3Budget.decServiceTypeIds);

    GetLevel3Budget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level3Budget.decServiceTypeIds);


   SetLevel3Budget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.janCostsServices);

    GetLevel3Budget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.janCostsServices);


   SetLevel3Budget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.febCostsServices);

    GetLevel3Budget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.febCostsServices);


   SetLevel3Budget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.marCostsServices);

    GetLevel3Budget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.marCostsServices);


   SetLevel3Budget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.aprCostsServices);

    GetLevel3Budget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.aprCostsServices);


   SetLevel3Budget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.mayCostsServices);

    GetLevel3Budget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.mayCostsServices);


   SetLevel3Budget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.junCostsServices);

    GetLevel3Budget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.junCostsServices);


   SetLevel3Budget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.julCostsServices);

    GetLevel3Budget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.julCostsServices);


   SetLevel3Budget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.augCostsServices);

    GetLevel3Budget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.augCostsServices);


   SetLevel3Budget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.sepCostsServices);

    GetLevel3Budget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.sepCostsServices);


   SetLevel3Budget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.octCostsServices);

    GetLevel3Budget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.octCostsServices);


   SetLevel3Budget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.novCostsServices);

    GetLevel3Budget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.novCostsServices);


   SetLevel3Budget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.level3Budget.decCostsServices);

    GetLevel3Budget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.decCostsServices);


   SetLevel3Budget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.level3Budget.twelveTotalMonthlyCosts);

    GetLevel3Budget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.level3Budget.twelveTotalMonthlyCosts);


   SetLevel3Budget.YearCostThisBudgetId(
     [in] Double CFinance.level3Budget.yearCostThisBudgetId);

    GetLevel3Budget.YearCostThisBudgetId(
     [out] Double* CFinance.level3Budget.yearCostThisBudgetId);


   SetLevel3Budget.NetProfitLossThisLevel3BudgetId(
     [in] Double CFinance.level3Budget.netProfitLossThisLevel3BudgetId);

    GetLevel3Budget.NetProfitLossThisLevel3BudgetId(
     [out] Double* CFinance.level3Budget.netProfitLossThisLevel3BudgetId);


   SetLevel3Budget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.level3Budget.linkingInternalBudgetNum);

    GetLevel3Budget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.level3Budget.linkingInternalBudgetNum);


   SetLevel3Budget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.level3Budget.customerIds);

    GetLevel3Budget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.level3Budget.customerIds);


   SetLevel3Budget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.level3Budget.propertyIds);

    GetLevel3Budget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.level3Budget.propertyIds);


   SetLevel3Budget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.level3Budget.programIds);

    GetLevel3Budget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.level3Budget.programIds);


   SetLevel3Budget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.level3Budget.projectIds);

    GetLevel3Budget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.level3Budget.projectIds);


   SetLevel3Budget.LinkedToLevel4BudgetId(
     [in] CFinance.level4Budget CFinance.level3Budget.linkedToLevel4BudgetId);

    GetLevel3Budget.LinkedToLevel4BudgetId(
     [out] CFinance.level4Budget* CFinance.level3Budget.linkedToLevel4BudgetId);


   SetLevel3Budget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.level3Budget.masterAssetId);

    GetLevel3Budget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.level3Budget.masterAssetId);


   SetLevel3Budget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level3Budget.businessChannelOwnerId);

    GetLevel3Budget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level3Budget.businessChannelOwnerId);





   SetLevel4Budget.Level4BudgetId(
     [in] String CFinance.level4Budget.level4BudgetId);

    GetLevel4Budget.Level4BudgetId(
     [out] String* CFinance.level4Budget.level4BudgetId);


   SetLevel4Budget.BudgetName(
     [in] String CFinance.level4Budget.budgetName);

    GetLevel4Budget.BudgetName(
     [out] String* CFinance.level4Budget.budgetName);


   SetLevel4Budget.EndYearMonthyyyymm(
     [in] Int32 CFinance.level4Budget.endYearMonthyyyymm);

    GetLevel4Budget.EndYearMonthyyyymm(
     [out] Int32* CFinance.level4Budget.endYearMonthyyyymm);


   SetLevel4Budget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.level4Budget.twelveMonthSequence);

    GetLevel4Budget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.level4Budget.twelveMonthSequence);


   SetLevel4Budget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.incomeItemTypeIds);

    GetLevel4Budget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.incomeItemTypeIds);


   SetLevel4Budget.JanRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.janRevenues);

    GetLevel4Budget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.janRevenues);


   SetLevel4Budget.FebRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.febRevenues);

    GetLevel4Budget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.febRevenues);


   SetLevel4Budget.MarRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.marRevenues);

    GetLevel4Budget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.marRevenues);


   SetLevel4Budget.AprRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.aprRevenues);

    GetLevel4Budget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.aprRevenues);


   SetLevel4Budget.MayRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.mayRevenues);

    GetLevel4Budget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.mayRevenues);


   SetLevel4Budget.JunRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.junRevenues);

    GetLevel4Budget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.junRevenues);


   SetLevel4Budget.JulRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.julRevenues);

    GetLevel4Budget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.julRevenues);


   SetLevel4Budget.AugRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.augRevenues);

    GetLevel4Budget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.augRevenues);


   SetLevel4Budget.SepRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.sepRevenues);

    GetLevel4Budget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.sepRevenues);


   SetLevel4Budget.OctRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.octRevenues);

    GetLevel4Budget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.octRevenues);


   SetLevel4Budget.NovRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.novRevenues);

    GetLevel4Budget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.novRevenues);


   SetLevel4Budget.DecRevenues(
     [in] ArrayOf<Double> CFinance.level4Budget.decRevenues);

    GetLevel4Budget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.decRevenues);


   SetLevel4Budget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.janItemTypeIds);

    GetLevel4Budget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.janItemTypeIds);


   SetLevel4Budget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.febItemTypeIds);

    GetLevel4Budget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.febItemTypeIds);


   SetLevel4Budget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.marItemTypeIds);

    GetLevel4Budget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.marItemTypeIds);


   SetLevel4Budget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.aprItemTypeIds);

    GetLevel4Budget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.aprItemTypeIds);


   SetLevel4Budget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.mayItemTypeIds);

    GetLevel4Budget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.mayItemTypeIds);


   SetLevel4Budget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.junItemTypeIds);

    GetLevel4Budget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.junItemTypeIds);


   SetLevel4Budget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.julItemTypeIds);

    GetLevel4Budget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.julItemTypeIds);


   SetLevel4Budget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.augItemTypeIds);

    GetLevel4Budget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.augItemTypeIds);


   SetLevel4Budget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.sepItemTypeIds);

    GetLevel4Budget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.sepItemTypeIds);


   SetLevel4Budget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.octItemTypeIds);

    GetLevel4Budget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.octItemTypeIds);


   SetLevel4Budget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.novItemTypeIds);

    GetLevel4Budget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.novItemTypeIds);


   SetLevel4Budget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.decItemTypeIds);

    GetLevel4Budget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.decItemTypeIds);


   SetLevel4Budget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.janCostsItems);

    GetLevel4Budget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.janCostsItems);


   SetLevel4Budget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.febCostsItems);

    GetLevel4Budget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.febCostsItems);


   SetLevel4Budget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.marCostsItems);

    GetLevel4Budget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.marCostsItems);


   SetLevel4Budget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.aprCostsItems);

    GetLevel4Budget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.aprCostsItems);


   SetLevel4Budget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.mayCostsItems);

    GetLevel4Budget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.mayCostsItems);


   SetLevel4Budget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.junCostsItems);

    GetLevel4Budget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.junCostsItems);


   SetLevel4Budget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.julCostsItems);

    GetLevel4Budget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.julCostsItems);


   SetLevel4Budget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.augCostsItems);

    GetLevel4Budget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.augCostsItems);


   SetLevel4Budget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.sepCostsItems);

    GetLevel4Budget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.sepCostsItems);


   SetLevel4Budget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.octCostsItems);

    GetLevel4Budget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.octCostsItems);


   SetLevel4Budget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.novCostsItems);

    GetLevel4Budget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.novCostsItems);


   SetLevel4Budget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.level4Budget.decCostsItems);

    GetLevel4Budget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.decCostsItems);


   SetLevel4Budget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.janJobTypeIds);

    GetLevel4Budget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.janJobTypeIds);


   SetLevel4Budget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.febJobTypeIds);

    GetLevel4Budget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.febJobTypeIds);


   SetLevel4Budget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.marJobTypeIds);

    GetLevel4Budget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.marJobTypeIds);


   SetLevel4Budget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.aprJobTypeIds);

    GetLevel4Budget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.aprJobTypeIds);


   SetLevel4Budget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.mayJobTypeIds);

    GetLevel4Budget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.mayJobTypeIds);


   SetLevel4Budget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.junJobTypeIds);

    GetLevel4Budget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.junJobTypeIds);


   SetLevel4Budget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.julJobTypeIds);

    GetLevel4Budget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.julJobTypeIds);


   SetLevel4Budget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.augJobTypeIds);

    GetLevel4Budget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.augJobTypeIds);


   SetLevel4Budget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.sepJobTypeIds);

    GetLevel4Budget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.sepJobTypeIds);


   SetLevel4Budget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.octJobTypeIds);

    GetLevel4Budget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.octJobTypeIds);


   SetLevel4Budget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.novJobTypeIds);

    GetLevel4Budget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.novJobTypeIds);


   SetLevel4Budget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.decJobTypeIds);

    GetLevel4Budget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.decJobTypeIds);


   SetLevel4Budget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.janCostsJobs);

    GetLevel4Budget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.janCostsJobs);


   SetLevel4Budget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.febCostsJobs);

    GetLevel4Budget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.febCostsJobs);


   SetLevel4Budget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.marCostsJobs);

    GetLevel4Budget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.marCostsJobs);


   SetLevel4Budget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.aprCostsJobs);

    GetLevel4Budget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.aprCostsJobs);


   SetLevel4Budget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.mayCostsJobs);

    GetLevel4Budget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.mayCostsJobs);


   SetLevel4Budget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.junCostsJobs);

    GetLevel4Budget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.junCostsJobs);


   SetLevel4Budget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.julCostsJobs);

    GetLevel4Budget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.julCostsJobs);


   SetLevel4Budget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.augCostsJobs);

    GetLevel4Budget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.augCostsJobs);


   SetLevel4Budget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.sepCostsJobs);

    GetLevel4Budget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.sepCostsJobs);


   SetLevel4Budget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.octCostsJobs);

    GetLevel4Budget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.octCostsJobs);


   SetLevel4Budget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.novCostsJobs);

    GetLevel4Budget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.novCostsJobs);


   SetLevel4Budget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.level4Budget.decCostsJobs);

    GetLevel4Budget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.decCostsJobs);


   SetLevel4Budget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.janServiceTypeIds);

    GetLevel4Budget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.janServiceTypeIds);


   SetLevel4Budget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.febServiceTypeIds);

    GetLevel4Budget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.febServiceTypeIds);


   SetLevel4Budget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.marServiceTypeIds);

    GetLevel4Budget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.marServiceTypeIds);


   SetLevel4Budget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.aprServiceTypeIds);

    GetLevel4Budget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.aprServiceTypeIds);


   SetLevel4Budget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.mayServiceTypeIds);

    GetLevel4Budget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.mayServiceTypeIds);


   SetLevel4Budget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.junServiceTypeIds);

    GetLevel4Budget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.junServiceTypeIds);


   SetLevel4Budget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.julServiceTypeIds);

    GetLevel4Budget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.julServiceTypeIds);


   SetLevel4Budget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.augServiceTypeIds);

    GetLevel4Budget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.augServiceTypeIds);


   SetLevel4Budget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.sepServiceTypeIds);

    GetLevel4Budget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.sepServiceTypeIds);


   SetLevel4Budget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.octServiceTypeIds);

    GetLevel4Budget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.octServiceTypeIds);


   SetLevel4Budget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.novServiceTypeIds);

    GetLevel4Budget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.novServiceTypeIds);


   SetLevel4Budget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.level4Budget.decServiceTypeIds);

    GetLevel4Budget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level4Budget.decServiceTypeIds);


   SetLevel4Budget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.janCostsServices);

    GetLevel4Budget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.janCostsServices);


   SetLevel4Budget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.febCostsServices);

    GetLevel4Budget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.febCostsServices);


   SetLevel4Budget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.marCostsServices);

    GetLevel4Budget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.marCostsServices);


   SetLevel4Budget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.aprCostsServices);

    GetLevel4Budget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.aprCostsServices);


   SetLevel4Budget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.mayCostsServices);

    GetLevel4Budget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.mayCostsServices);


   SetLevel4Budget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.junCostsServices);

    GetLevel4Budget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.junCostsServices);


   SetLevel4Budget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.julCostsServices);

    GetLevel4Budget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.julCostsServices);


   SetLevel4Budget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.augCostsServices);

    GetLevel4Budget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.augCostsServices);


   SetLevel4Budget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.sepCostsServices);

    GetLevel4Budget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.sepCostsServices);


   SetLevel4Budget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.octCostsServices);

    GetLevel4Budget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.octCostsServices);


   SetLevel4Budget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.novCostsServices);

    GetLevel4Budget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.novCostsServices);


   SetLevel4Budget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.level4Budget.decCostsServices);

    GetLevel4Budget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.decCostsServices);


   SetLevel4Budget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.level4Budget.twelveTotalMonthlyCosts);

    GetLevel4Budget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.level4Budget.twelveTotalMonthlyCosts);


   SetLevel4Budget.YearCostThisBudgetId(
     [in] Double CFinance.level4Budget.yearCostThisBudgetId);

    GetLevel4Budget.YearCostThisBudgetId(
     [out] Double* CFinance.level4Budget.yearCostThisBudgetId);


   SetLevel4Budget.NetProfitLossThisLevel4BudgetId(
     [in] Double CFinance.level4Budget.netProfitLossThisLevel4BudgetId);

    GetLevel4Budget.NetProfitLossThisLevel4BudgetId(
     [out] Double* CFinance.level4Budget.netProfitLossThisLevel4BudgetId);


   SetLevel4Budget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.level4Budget.linkingInternalBudgetNum);

    GetLevel4Budget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.level4Budget.linkingInternalBudgetNum);


   SetLevel4Budget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.level4Budget.customerIds);

    GetLevel4Budget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.level4Budget.customerIds);


   SetLevel4Budget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.level4Budget.propertyIds);

    GetLevel4Budget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.level4Budget.propertyIds);


   SetLevel4Budget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.level4Budget.programIds);

    GetLevel4Budget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.level4Budget.programIds);


   SetLevel4Budget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.level4Budget.projectIds);

    GetLevel4Budget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.level4Budget.projectIds);


   SetLevel4Budget.LinkedToLevel5BudgetId(
     [in] CFinance.level5Budget CFinance.level4Budget.linkedToLevel5BudgetId);

    GetLevel4Budget.LinkedToLevel5BudgetId(
     [out] CFinance.level5Budget* CFinance.level4Budget.linkedToLevel5BudgetId);


   SetLevel4Budget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.level4Budget.masterAssetId);

    GetLevel4Budget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.level4Budget.masterAssetId);


   SetLevel4Budget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level4Budget.businessChannelOwnerId);

    GetLevel4Budget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level4Budget.businessChannelOwnerId);


   SetLevel5Budget.Level5BudgetId(
     [in] String CFinance.level5Budget.level5BudgetId);

    GetLevel5Budget.Level5BudgetId(
     [out] String* CFinance.level5Budget.level5BudgetId);


   SetLevel5Budget.BudgetName(
     [in] String CFinance.level5Budget.budgetName);

    GetLevel5Budget.BudgetName(
     [out] String* CFinance.level5Budget.budgetName);


   SetLevel5Budget.EndYearMonthyyyymm(
     [in] Int32 CFinance.level5Budget.endYearMonthyyyymm);

    GetLevel5Budget.EndYearMonthyyyymm(
     [out] Int32* CFinance.level5Budget.endYearMonthyyyymm);


   SetLevel5Budget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.level5Budget.twelveMonthSequence);

    GetLevel5Budget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.level5Budget.twelveMonthSequence);


   SetLevel5Budget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.incomeItemTypeIds);

    GetLevel5Budget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.incomeItemTypeIds);


   SetLevel5Budget.JanRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.janRevenues);

    GetLevel5Budget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.janRevenues);


   SetLevel5Budget.FebRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.febRevenues);

    GetLevel5Budget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.febRevenues);


   SetLevel5Budget.MarRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.marRevenues);

    GetLevel5Budget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.marRevenues);


   SetLevel5Budget.AprRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.aprRevenues);

    GetLevel5Budget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.aprRevenues);


   SetLevel5Budget.MayRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.mayRevenues);

    GetLevel5Budget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.mayRevenues);


   SetLevel5Budget.JunRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.junRevenues);

    GetLevel5Budget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.junRevenues);


   SetLevel5Budget.JulRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.julRevenues);

    GetLevel5Budget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.julRevenues);


   SetLevel5Budget.AugRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.augRevenues);

    GetLevel5Budget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.augRevenues);


   SetLevel5Budget.SepRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.sepRevenues);

    GetLevel5Budget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.sepRevenues);


   SetLevel5Budget.OctRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.octRevenues);

    GetLevel5Budget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.octRevenues);


   SetLevel5Budget.NovRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.novRevenues);

    GetLevel5Budget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.novRevenues);


   SetLevel5Budget.DecRevenues(
     [in] ArrayOf<Double> CFinance.level5Budget.decRevenues);

    GetLevel5Budget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.decRevenues);


   SetLevel5Budget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.janItemTypeIds);

    GetLevel5Budget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.janItemTypeIds);


   SetLevel5Budget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.febItemTypeIds);

    GetLevel5Budget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.febItemTypeIds);


   SetLevel5Budget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.marItemTypeIds);

    GetLevel5Budget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.marItemTypeIds);


   SetLevel5Budget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.aprItemTypeIds);

    GetLevel5Budget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.aprItemTypeIds);


   SetLevel5Budget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.mayItemTypeIds);

    GetLevel5Budget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.mayItemTypeIds);


   SetLevel5Budget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.junItemTypeIds);

    GetLevel5Budget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.junItemTypeIds);


   SetLevel5Budget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.julItemTypeIds);

    GetLevel5Budget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.julItemTypeIds);


   SetLevel5Budget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.augItemTypeIds);

    GetLevel5Budget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.augItemTypeIds);


   SetLevel5Budget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.sepItemTypeIds);

    GetLevel5Budget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.sepItemTypeIds);


   SetLevel5Budget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.octItemTypeIds);

    GetLevel5Budget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.octItemTypeIds);


   SetLevel5Budget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.novItemTypeIds);

    GetLevel5Budget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.novItemTypeIds);


   SetLevel5Budget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.decItemTypeIds);

    GetLevel5Budget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.decItemTypeIds);


   SetLevel5Budget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.janCostsItems);

    GetLevel5Budget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.janCostsItems);


   SetLevel5Budget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.febCostsItems);

    GetLevel5Budget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.febCostsItems);


   SetLevel5Budget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.marCostsItems);

    GetLevel5Budget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.marCostsItems);


   SetLevel5Budget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.aprCostsItems);

    GetLevel5Budget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.aprCostsItems);


   SetLevel5Budget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.mayCostsItems);

    GetLevel5Budget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.mayCostsItems);


   SetLevel5Budget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.junCostsItems);

    GetLevel5Budget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.junCostsItems);


   SetLevel5Budget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.julCostsItems);

    GetLevel5Budget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.julCostsItems);


   SetLevel5Budget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.augCostsItems);

    GetLevel5Budget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.augCostsItems);


   SetLevel5Budget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.sepCostsItems);

    GetLevel5Budget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.sepCostsItems);


   SetLevel5Budget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.octCostsItems);

    GetLevel5Budget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.octCostsItems);


   SetLevel5Budget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.novCostsItems);

    GetLevel5Budget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.novCostsItems);


   SetLevel5Budget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.level5Budget.decCostsItems);

    GetLevel5Budget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.decCostsItems);


   SetLevel5Budget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.janJobTypeIds);

    GetLevel5Budget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.janJobTypeIds);


   SetLevel5Budget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.febJobTypeIds);

    GetLevel5Budget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.febJobTypeIds);


   SetLevel5Budget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.marJobTypeIds);

    GetLevel5Budget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.marJobTypeIds);


   SetLevel5Budget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.aprJobTypeIds);

    GetLevel5Budget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.aprJobTypeIds);


   SetLevel5Budget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.mayJobTypeIds);

    GetLevel5Budget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.mayJobTypeIds);


   SetLevel5Budget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.junJobTypeIds);

    GetLevel5Budget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.junJobTypeIds);


   SetLevel5Budget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.julJobTypeIds);

    GetLevel5Budget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.julJobTypeIds);


   SetLevel5Budget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.augJobTypeIds);

    GetLevel5Budget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.augJobTypeIds);


   SetLevel5Budget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.sepJobTypeIds);

    GetLevel5Budget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.sepJobTypeIds);


   SetLevel5Budget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.octJobTypeIds);

    GetLevel5Budget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.octJobTypeIds);


   SetLevel5Budget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.novJobTypeIds);

    GetLevel5Budget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.novJobTypeIds);


   SetLevel5Budget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.decJobTypeIds);

    GetLevel5Budget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.decJobTypeIds);


   SetLevel5Budget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.janCostsJobs);

    GetLevel5Budget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.janCostsJobs);


   SetLevel5Budget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.febCostsJobs);

    GetLevel5Budget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.febCostsJobs);


   SetLevel5Budget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.marCostsJobs);

    GetLevel5Budget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.marCostsJobs);


   SetLevel5Budget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.aprCostsJobs);

    GetLevel5Budget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.aprCostsJobs);


   SetLevel5Budget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.mayCostsJobs);

    GetLevel5Budget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.mayCostsJobs);


   SetLevel5Budget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.junCostsJobs);

    GetLevel5Budget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.junCostsJobs);


   SetLevel5Budget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.julCostsJobs);

    GetLevel5Budget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.julCostsJobs);


   SetLevel5Budget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.augCostsJobs);

    GetLevel5Budget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.augCostsJobs);


   SetLevel5Budget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.sepCostsJobs);

    GetLevel5Budget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.sepCostsJobs);


   SetLevel5Budget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.octCostsJobs);

    GetLevel5Budget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.octCostsJobs);


   SetLevel5Budget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.novCostsJobs);

    GetLevel5Budget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.novCostsJobs);


   SetLevel5Budget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.level5Budget.decCostsJobs);

    GetLevel5Budget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.decCostsJobs);


   SetLevel5Budget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.janServiceTypeIds);

    GetLevel5Budget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.janServiceTypeIds);


   SetLevel5Budget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.febServiceTypeIds);

    GetLevel5Budget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.febServiceTypeIds);


   SetLevel5Budget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.marServiceTypeIds);

    GetLevel5Budget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.marServiceTypeIds);


   SetLevel5Budget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.aprServiceTypeIds);

    GetLevel5Budget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.aprServiceTypeIds);


   SetLevel5Budget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.mayServiceTypeIds);

    GetLevel5Budget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.mayServiceTypeIds);


   SetLevel5Budget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.junServiceTypeIds);

    GetLevel5Budget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.junServiceTypeIds);


   SetLevel5Budget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.julServiceTypeIds);

    GetLevel5Budget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.julServiceTypeIds);


   SetLevel5Budget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.augServiceTypeIds);

    GetLevel5Budget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.augServiceTypeIds);


   SetLevel5Budget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.sepServiceTypeIds);

    GetLevel5Budget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.sepServiceTypeIds);


   SetLevel5Budget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.octServiceTypeIds);

    GetLevel5Budget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.octServiceTypeIds);


   SetLevel5Budget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.novServiceTypeIds);

    GetLevel5Budget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.novServiceTypeIds);


   SetLevel5Budget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.level5Budget.decServiceTypeIds);

    GetLevel5Budget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level5Budget.decServiceTypeIds);


   SetLevel5Budget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.janCostsServices);

    GetLevel5Budget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.janCostsServices);


   SetLevel5Budget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.febCostsServices);

    GetLevel5Budget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.febCostsServices);


   SetLevel5Budget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.marCostsServices);

    GetLevel5Budget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.marCostsServices);


   SetLevel5Budget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.aprCostsServices);

    GetLevel5Budget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.aprCostsServices);


   SetLevel5Budget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.mayCostsServices);

    GetLevel5Budget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.mayCostsServices);


   SetLevel5Budget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.junCostsServices);

    GetLevel5Budget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.junCostsServices);


   SetLevel5Budget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.julCostsServices);

    GetLevel5Budget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.julCostsServices);


   SetLevel5Budget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.augCostsServices);

    GetLevel5Budget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.augCostsServices);


   SetLevel5Budget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.sepCostsServices);

    GetLevel5Budget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.sepCostsServices);


   SetLevel5Budget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.octCostsServices);

    GetLevel5Budget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.octCostsServices);


   SetLevel5Budget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.novCostsServices);

    GetLevel5Budget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.novCostsServices);


   SetLevel5Budget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.level5Budget.decCostsServices);

    GetLevel5Budget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.decCostsServices);


   SetLevel5Budget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.level5Budget.twelveTotalMonthlyCosts);

    GetLevel5Budget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.level5Budget.twelveTotalMonthlyCosts);


   SetLevel5Budget.YearCostThisBudgetId(
     [in] Double CFinance.level5Budget.yearCostThisBudgetId);

    GetLevel5Budget.YearCostThisBudgetId(
     [out] Double* CFinance.level5Budget.yearCostThisBudgetId);


   SetLevel5Budget.NetProfitLossThisLevel5BudgetId(
     [in] Double CFinance.level5Budget.netProfitLossThisLevel5BudgetId);

    GetLevel5Budget.NetProfitLossThisLevel5BudgetId(
     [out] Double* CFinance.level5Budget.netProfitLossThisLevel5BudgetId);


   SetLevel5Budget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.level5Budget.linkingInternalBudgetNum);

    GetLevel5Budget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.level5Budget.linkingInternalBudgetNum);


   SetLevel5Budget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.level5Budget.customerIds);

    GetLevel5Budget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.level5Budget.customerIds);


   SetLevel5Budget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.level5Budget.propertyIds);

    GetLevel5Budget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.level5Budget.propertyIds);


   SetLevel5Budget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.level5Budget.programIds);

    GetLevel5Budget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.level5Budget.programIds);


   SetLevel5Budget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.level5Budget.projectIds);

    GetLevel5Budget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.level5Budget.projectIds);


   SetLevel5Budget.LinkedToLevel6BudgetId(
     [in] CFinance.level6Budget CFinance.level5Budget.linkedToLevel6BudgetId);

    GetLevel5Budget.LinkedToLevel6BudgetId(
     [out] CFinance.level6Budget* CFinance.level5Budget.linkedToLevel6BudgetId);


   SetLevel5Budget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.level5Budget.masterAssetId);

    GetLevel5Budget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.level5Budget.masterAssetId);


   SetLevel5Budget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level5Budget.businessChannelOwnerId);

    GetLevel5Budget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level5Budget.businessChannelOwnerId);





   SetLevel6Budget.Level6BudgetId(
     [in] String CFinance.level6Budget.level6BudgetId);

    GetLevel6Budget.Level6BudgetId(
     [out] String* CFinance.level6Budget.level6BudgetId);


   SetLevel6Budget.BudgetName(
     [in] String CFinance.level6Budget.budgetName);

    GetLevel6Budget.BudgetName(
     [out] String* CFinance.level6Budget.budgetName);


   SetLevel6Budget.EndYearMonthyyyymm(
     [in] Int32 CFinance.level6Budget.endYearMonthyyyymm);

    GetLevel6Budget.EndYearMonthyyyymm(
     [out] Int32* CFinance.level6Budget.endYearMonthyyyymm);


   SetLevel6Budget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.level6Budget.twelveMonthSequence);

    GetLevel6Budget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.level6Budget.twelveMonthSequence);


   SetLevel6Budget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.incomeItemTypeIds);

    GetLevel6Budget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.incomeItemTypeIds);


   SetLevel6Budget.JanRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.janRevenues);

    GetLevel6Budget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.janRevenues);


   SetLevel6Budget.FebRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.febRevenues);

    GetLevel6Budget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.febRevenues);


   SetLevel6Budget.MarRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.marRevenues);

    GetLevel6Budget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.marRevenues);


   SetLevel6Budget.AprRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.aprRevenues);

    GetLevel6Budget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.aprRevenues);


   SetLevel6Budget.MayRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.mayRevenues);

    GetLevel6Budget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.mayRevenues);


   SetLevel6Budget.JunRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.junRevenues);

    GetLevel6Budget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.junRevenues);


   SetLevel6Budget.JulRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.julRevenues);

    GetLevel6Budget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.julRevenues);


   SetLevel6Budget.AugRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.augRevenues);

    GetLevel6Budget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.augRevenues);


   SetLevel6Budget.SepRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.sepRevenues);

    GetLevel6Budget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.sepRevenues);


   SetLevel6Budget.OctRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.octRevenues);

    GetLevel6Budget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.octRevenues);


   SetLevel6Budget.NovRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.novRevenues);

    GetLevel6Budget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.novRevenues);


   SetLevel6Budget.DecRevenues(
     [in] ArrayOf<Double> CFinance.level6Budget.decRevenues);

    GetLevel6Budget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.decRevenues);


   SetLevel6Budget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.janItemTypeIds);

    GetLevel6Budget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.janItemTypeIds);


   SetLevel6Budget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.febItemTypeIds);

    GetLevel6Budget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.febItemTypeIds);


   SetLevel6Budget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.marItemTypeIds);

    GetLevel6Budget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.marItemTypeIds);


   SetLevel6Budget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.aprItemTypeIds);

    GetLevel6Budget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.aprItemTypeIds);


   SetLevel6Budget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.mayItemTypeIds);

    GetLevel6Budget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.mayItemTypeIds);


   SetLevel6Budget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.junItemTypeIds);

    GetLevel6Budget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.junItemTypeIds);


   SetLevel6Budget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.julItemTypeIds);

    GetLevel6Budget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.julItemTypeIds);


   SetLevel6Budget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.augItemTypeIds);

    GetLevel6Budget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.augItemTypeIds);


   SetLevel6Budget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.sepItemTypeIds);

    GetLevel6Budget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.sepItemTypeIds);


   SetLevel6Budget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.octItemTypeIds);

    GetLevel6Budget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.octItemTypeIds);


   SetLevel6Budget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.novItemTypeIds);

    GetLevel6Budget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.novItemTypeIds);


   SetLevel6Budget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.decItemTypeIds);

    GetLevel6Budget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.decItemTypeIds);


   SetLevel6Budget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.janCostsItems);

    GetLevel6Budget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.janCostsItems);


   SetLevel6Budget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.febCostsItems);

    GetLevel6Budget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.febCostsItems);


   SetLevel6Budget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.marCostsItems);

    GetLevel6Budget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.marCostsItems);


   SetLevel6Budget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.aprCostsItems);

    GetLevel6Budget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.aprCostsItems);


   SetLevel6Budget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.mayCostsItems);

    GetLevel6Budget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.mayCostsItems);


   SetLevel6Budget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.junCostsItems);

    GetLevel6Budget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.junCostsItems);


   SetLevel6Budget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.julCostsItems);

    GetLevel6Budget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.julCostsItems);


   SetLevel6Budget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.augCostsItems);

    GetLevel6Budget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.augCostsItems);


   SetLevel6Budget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.sepCostsItems);

    GetLevel6Budget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.sepCostsItems);


   SetLevel6Budget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.octCostsItems);

    GetLevel6Budget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.octCostsItems);


   SetLevel6Budget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.novCostsItems);

    GetLevel6Budget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.novCostsItems);


   SetLevel6Budget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.level6Budget.decCostsItems);

    GetLevel6Budget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.decCostsItems);


   SetLevel6Budget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.janJobTypeIds);

    GetLevel6Budget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.janJobTypeIds);


   SetLevel6Budget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.febJobTypeIds);

    GetLevel6Budget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.febJobTypeIds);


   SetLevel6Budget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.marJobTypeIds);

    GetLevel6Budget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.marJobTypeIds);


   SetLevel6Budget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.aprJobTypeIds);

    GetLevel6Budget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.aprJobTypeIds);


   SetLevel6Budget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.mayJobTypeIds);

    GetLevel6Budget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.mayJobTypeIds);


   SetLevel6Budget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.junJobTypeIds);

    GetLevel6Budget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.junJobTypeIds);


   SetLevel6Budget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.julJobTypeIds);

    GetLevel6Budget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.julJobTypeIds);


   SetLevel6Budget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.augJobTypeIds);

    GetLevel6Budget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.augJobTypeIds);


   SetLevel6Budget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.sepJobTypeIds);

    GetLevel6Budget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.sepJobTypeIds);


   SetLevel6Budget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.octJobTypeIds);

    GetLevel6Budget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.octJobTypeIds);


   SetLevel6Budget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.novJobTypeIds);

    GetLevel6Budget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.novJobTypeIds);


   SetLevel6Budget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.decJobTypeIds);

    GetLevel6Budget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.decJobTypeIds);


   SetLevel6Budget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.janCostsJobs);

    GetLevel6Budget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.janCostsJobs);


   SetLevel6Budget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.febCostsJobs);

    GetLevel6Budget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.febCostsJobs);


   SetLevel6Budget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.marCostsJobs);

    GetLevel6Budget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.marCostsJobs);


   SetLevel6Budget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.aprCostsJobs);

    GetLevel6Budget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.aprCostsJobs);


   SetLevel6Budget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.mayCostsJobs);

    GetLevel6Budget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.mayCostsJobs);


   SetLevel6Budget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.junCostsJobs);

    GetLevel6Budget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.junCostsJobs);


   SetLevel6Budget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.julCostsJobs);

    GetLevel6Budget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.julCostsJobs);


   SetLevel6Budget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.augCostsJobs);

    GetLevel6Budget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.augCostsJobs);


   SetLevel6Budget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.sepCostsJobs);

    GetLevel6Budget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.sepCostsJobs);


   SetLevel6Budget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.octCostsJobs);

    GetLevel6Budget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.octCostsJobs);


   SetLevel6Budget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.novCostsJobs);

    GetLevel6Budget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.novCostsJobs);


   SetLevel6Budget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.level6Budget.decCostsJobs);

    GetLevel6Budget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.decCostsJobs);


   SetLevel6Budget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.janServiceTypeIds);

    GetLevel6Budget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.janServiceTypeIds);


   SetLevel6Budget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.febServiceTypeIds);

    GetLevel6Budget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.febServiceTypeIds);


   SetLevel6Budget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.marServiceTypeIds);

    GetLevel6Budget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.marServiceTypeIds);


   SetLevel6Budget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.aprServiceTypeIds);

    GetLevel6Budget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.aprServiceTypeIds);


   SetLevel6Budget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.mayServiceTypeIds);

    GetLevel6Budget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.mayServiceTypeIds);


   SetLevel6Budget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.junServiceTypeIds);

    GetLevel6Budget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.junServiceTypeIds);


   SetLevel6Budget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.julServiceTypeIds);

    GetLevel6Budget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.julServiceTypeIds);


   SetLevel6Budget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.augServiceTypeIds);

    GetLevel6Budget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.augServiceTypeIds);


   SetLevel6Budget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.sepServiceTypeIds);

    GetLevel6Budget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.sepServiceTypeIds);


   SetLevel6Budget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.octServiceTypeIds);

    GetLevel6Budget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.octServiceTypeIds);


   SetLevel6Budget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.novServiceTypeIds);

    GetLevel6Budget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.novServiceTypeIds);


   SetLevel6Budget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.level6Budget.decServiceTypeIds);

    GetLevel6Budget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.level6Budget.decServiceTypeIds);


   SetLevel6Budget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.janCostsServices);

    GetLevel6Budget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.janCostsServices);


   SetLevel6Budget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.febCostsServices);

    GetLevel6Budget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.febCostsServices);


   SetLevel6Budget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.marCostsServices);

    GetLevel6Budget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.marCostsServices);


   SetLevel6Budget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.aprCostsServices);

    GetLevel6Budget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.aprCostsServices);


   SetLevel6Budget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.mayCostsServices);

    GetLevel6Budget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.mayCostsServices);


   SetLevel6Budget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.junCostsServices);

    GetLevel6Budget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.junCostsServices);


   SetLevel6Budget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.julCostsServices);

    GetLevel6Budget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.julCostsServices);


   SetLevel6Budget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.augCostsServices);

    GetLevel6Budget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.augCostsServices);


   SetLevel6Budget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.sepCostsServices);

    GetLevel6Budget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.sepCostsServices);


   SetLevel6Budget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.octCostsServices);

    GetLevel6Budget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.octCostsServices);


   SetLevel6Budget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.novCostsServices);

    GetLevel6Budget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.novCostsServices);


   SetLevel6Budget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.level6Budget.decCostsServices);

    GetLevel6Budget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.decCostsServices);


   SetLevel6Budget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.level6Budget.twelveTotalMonthlyCosts);

    GetLevel6Budget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.level6Budget.twelveTotalMonthlyCosts);


   SetLevel6Budget.YearCostThisBudgetId(
     [in] Double CFinance.level6Budget.yearCostThisBudgetId);

    GetLevel6Budget.YearCostThisBudgetId(
     [out] Double* CFinance.level6Budget.yearCostThisBudgetId);


   SetLevel6Budget.NetProfitLossThisLevel6BudgetId(
     [in] Double CFinance.level6Budget.netProfitLossThisLevel6BudgetId);

    GetLevel6Budget.NetProfitLossThisLevel6BudgetId(
     [out] Double* CFinance.level6Budget.netProfitLossThisLevel6BudgetId);


   SetLevel6Budget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.level6Budget.linkingInternalBudgetNum);

    GetLevel6Budget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.level6Budget.linkingInternalBudgetNum);


   SetLevel6Budget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.level6Budget.customerIds);

    GetLevel6Budget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.level6Budget.customerIds);


   SetLevel6Budget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.level6Budget.propertyIds);

    GetLevel6Budget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.level6Budget.propertyIds);


   SetLevel6Budget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.level6Budget.programIds);

    GetLevel6Budget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.level6Budget.programIds);


   SetLevel6Budget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.level6Budget.projectIds);

    GetLevel6Budget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.level6Budget.projectIds);


   SetLevel6Budget.LinkedToHyperBudgetId(
     [in] CFinance.hyperBudget CFinance.level6Budget.linkedToHyperBudgetId);

    GetLevel6Budget.LinkedToHyperBudgetId(
     [out] CFinance.hyperBudget* CFinance.level6Budget.linkedToHyperBudgetId);


   SetLevel6Budget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.level6Budget.masterAssetId);

    GetLevel6Budget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.level6Budget.masterAssetId);


   SetLevel6Budget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.level6Budget.businessChannelOwnerId);

    GetLevel6Budget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.level6Budget.businessChannelOwnerId);





   SetHyperBudget.HyperBudgetId(
     [in] String CFinance.hyperBudget.hyperBudgetId);

    GetHyperBudget.HyperBudgetId(
     [out] String* CFinance.hyperBudget.hyperBudgetId);


   SetHyperBudget.BudgetName(
     [in] String CFinance.hyperBudget.budgetName);

    GetHyperBudget.BudgetName(
     [out] String* CFinance.hyperBudget.budgetName);


   SetHyperBudget.EndYearMonthyyyymm(
     [in] Int32 CFinance.hyperBudget.endYearMonthyyyymm);

    GetHyperBudget.EndYearMonthyyyymm(
     [out] Int32* CFinance.hyperBudget.endYearMonthyyyymm);


   SetHyperBudget.TwelveMonthSequence(
     [in] ArrayOf<CHelper.month> CFinance.hyperBudget.twelveMonthSequence);

    GetHyperBudget.TwelveMonthSequence(
     [out, callee] ArrayOf<CHelper.month>* CFinance.hyperBudget.twelveMonthSequence);


   SetHyperBudget.IncomeItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.incomeItemTypeIds);

    GetHyperBudget.IncomeItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.incomeItemTypeIds);


   SetHyperBudget.JanRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.janRevenues);

    GetHyperBudget.JanRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.janRevenues);


   SetHyperBudget.FebRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.febRevenues);

    GetHyperBudget.FebRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.febRevenues);


   SetHyperBudget.MarRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.marRevenues);

    GetHyperBudget.MarRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.marRevenues);


   SetHyperBudget.AprRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.aprRevenues);

    GetHyperBudget.AprRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.aprRevenues);


   SetHyperBudget.MayRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.mayRevenues);

    GetHyperBudget.MayRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.mayRevenues);


   SetHyperBudget.JunRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.junRevenues);

    GetHyperBudget.JunRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.junRevenues);


   SetHyperBudget.JulRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.julRevenues);

    GetHyperBudget.JulRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.julRevenues);


   SetHyperBudget.AugRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.augRevenues);

    GetHyperBudget.AugRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.augRevenues);


   SetHyperBudget.SepRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.sepRevenues);

    GetHyperBudget.SepRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.sepRevenues);


   SetHyperBudget.OctRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.octRevenues);

    GetHyperBudget.OctRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.octRevenues);


   SetHyperBudget.NovRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.novRevenues);

    GetHyperBudget.NovRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.novRevenues);


   SetHyperBudget.DecRevenues(
     [in] ArrayOf<Double> CFinance.hyperBudget.decRevenues);

    GetHyperBudget.DecRevenues(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.decRevenues);


   SetHyperBudget.JanItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.janItemTypeIds);

    GetHyperBudget.JanItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.janItemTypeIds);


   SetHyperBudget.FebItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.febItemTypeIds);

    GetHyperBudget.FebItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.febItemTypeIds);


   SetHyperBudget.MarItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.marItemTypeIds);

    GetHyperBudget.MarItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.marItemTypeIds);


   SetHyperBudget.AprItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.aprItemTypeIds);

    GetHyperBudget.AprItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.aprItemTypeIds);


   SetHyperBudget.MayItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.mayItemTypeIds);

    GetHyperBudget.MayItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.mayItemTypeIds);


   SetHyperBudget.JunItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.junItemTypeIds);

    GetHyperBudget.JunItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.junItemTypeIds);


   SetHyperBudget.JulItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.julItemTypeIds);

    GetHyperBudget.JulItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.julItemTypeIds);


   SetHyperBudget.AugItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.augItemTypeIds);

    GetHyperBudget.AugItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.augItemTypeIds);


   SetHyperBudget.SepItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.sepItemTypeIds);

    GetHyperBudget.SepItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.sepItemTypeIds);


   SetHyperBudget.OctItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.octItemTypeIds);

    GetHyperBudget.OctItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.octItemTypeIds);


   SetHyperBudget.NovItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.novItemTypeIds);

    GetHyperBudget.NovItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.novItemTypeIds);


   SetHyperBudget.DecItemTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.decItemTypeIds);

    GetHyperBudget.DecItemTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.decItemTypeIds);


   SetHyperBudget.JanCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.janCostsItems);

    GetHyperBudget.JanCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.janCostsItems);


   SetHyperBudget.FebCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.febCostsItems);

    GetHyperBudget.FebCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.febCostsItems);


   SetHyperBudget.MarCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.marCostsItems);

    GetHyperBudget.MarCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.marCostsItems);


   SetHyperBudget.AprCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.aprCostsItems);

    GetHyperBudget.AprCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.aprCostsItems);


   SetHyperBudget.MayCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.mayCostsItems);

    GetHyperBudget.MayCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.mayCostsItems);


   SetHyperBudget.JunCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.junCostsItems);

    GetHyperBudget.JunCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.junCostsItems);


   SetHyperBudget.JulCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.julCostsItems);

    GetHyperBudget.JulCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.julCostsItems);


   SetHyperBudget.AugCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.augCostsItems);

    GetHyperBudget.AugCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.augCostsItems);


   SetHyperBudget.SepCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.sepCostsItems);

    GetHyperBudget.SepCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.sepCostsItems);


   SetHyperBudget.OctCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.octCostsItems);

    GetHyperBudget.OctCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.octCostsItems);


   SetHyperBudget.NovCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.novCostsItems);

    GetHyperBudget.NovCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.novCostsItems);


   SetHyperBudget.DecCostsItems(
     [in] ArrayOf<Double> CFinance.hyperBudget.decCostsItems);

    GetHyperBudget.DecCostsItems(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.decCostsItems);


   SetHyperBudget.JanJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.janJobTypeIds);

    GetHyperBudget.JanJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.janJobTypeIds);


   SetHyperBudget.FebJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.febJobTypeIds);

    GetHyperBudget.FebJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.febJobTypeIds);


   SetHyperBudget.MarJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.marJobTypeIds);

    GetHyperBudget.MarJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.marJobTypeIds);


   SetHyperBudget.AprJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.aprJobTypeIds);

    GetHyperBudget.AprJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.aprJobTypeIds);


   SetHyperBudget.MayJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.mayJobTypeIds);

    GetHyperBudget.MayJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.mayJobTypeIds);


   SetHyperBudget.JunJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.junJobTypeIds);

    GetHyperBudget.JunJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.junJobTypeIds);


   SetHyperBudget.JulJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.julJobTypeIds);

    GetHyperBudget.JulJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.julJobTypeIds);


   SetHyperBudget.AugJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.augJobTypeIds);

    GetHyperBudget.AugJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.augJobTypeIds);


   SetHyperBudget.SepJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.sepJobTypeIds);

    GetHyperBudget.SepJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.sepJobTypeIds);


   SetHyperBudget.OctJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.octJobTypeIds);

    GetHyperBudget.OctJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.octJobTypeIds);


   SetHyperBudget.NovJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.novJobTypeIds);

    GetHyperBudget.NovJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.novJobTypeIds);


   SetHyperBudget.DecJobTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.decJobTypeIds);

    GetHyperBudget.DecJobTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.decJobTypeIds);


   SetHyperBudget.JanCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.janCostsJobs);

    GetHyperBudget.JanCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.janCostsJobs);


   SetHyperBudget.FebCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.febCostsJobs);

    GetHyperBudget.FebCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.febCostsJobs);


   SetHyperBudget.MarCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.marCostsJobs);

    GetHyperBudget.MarCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.marCostsJobs);


   SetHyperBudget.AprCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.aprCostsJobs);

    GetHyperBudget.AprCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.aprCostsJobs);


   SetHyperBudget.MayCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.mayCostsJobs);

    GetHyperBudget.MayCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.mayCostsJobs);


   SetHyperBudget.JunCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.junCostsJobs);

    GetHyperBudget.JunCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.junCostsJobs);


   SetHyperBudget.JulCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.julCostsJobs);

    GetHyperBudget.JulCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.julCostsJobs);


   SetHyperBudget.AugCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.augCostsJobs);

    GetHyperBudget.AugCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.augCostsJobs);


   SetHyperBudget.SepCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.sepCostsJobs);

    GetHyperBudget.SepCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.sepCostsJobs);


   SetHyperBudget.OctCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.octCostsJobs);

    GetHyperBudget.OctCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.octCostsJobs);


   SetHyperBudget.NovCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.novCostsJobs);

    GetHyperBudget.NovCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.novCostsJobs);


   SetHyperBudget.DecCostsJobs(
     [in] ArrayOf<Double> CFinance.hyperBudget.decCostsJobs);

    GetHyperBudget.DecCostsJobs(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.decCostsJobs);


   SetHyperBudget.JanServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.janServiceTypeIds);

    GetHyperBudget.JanServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.janServiceTypeIds);


   SetHyperBudget.FebServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.febServiceTypeIds);

    GetHyperBudget.FebServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.febServiceTypeIds);


   SetHyperBudget.MarServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.marServiceTypeIds);

    GetHyperBudget.MarServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.marServiceTypeIds);


   SetHyperBudget.AprServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.aprServiceTypeIds);

    GetHyperBudget.AprServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.aprServiceTypeIds);


   SetHyperBudget.MayServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.mayServiceTypeIds);

    GetHyperBudget.MayServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.mayServiceTypeIds);


   SetHyperBudget.JunServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.junServiceTypeIds);

    GetHyperBudget.JunServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.junServiceTypeIds);


   SetHyperBudget.JulServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.julServiceTypeIds);

    GetHyperBudget.JulServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.julServiceTypeIds);


   SetHyperBudget.AugServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.augServiceTypeIds);

    GetHyperBudget.AugServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.augServiceTypeIds);


   SetHyperBudget.SepServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.sepServiceTypeIds);

    GetHyperBudget.SepServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.sepServiceTypeIds);


   SetHyperBudget.OctServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.octServiceTypeIds);

    GetHyperBudget.OctServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.octServiceTypeIds);


   SetHyperBudget.NovServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.novServiceTypeIds);

    GetHyperBudget.NovServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.novServiceTypeIds);


   SetHyperBudget.DecServiceTypeIds(
     [in] ArrayOf<String> CFinance.hyperBudget.decServiceTypeIds);

    GetHyperBudget.DecServiceTypeIds(
     [out, callee] ArrayOf<String>* CFinance.hyperBudget.decServiceTypeIds);


   SetHyperBudget.JanCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.janCostsServices);

    GetHyperBudget.JanCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.janCostsServices);


   SetHyperBudget.FebCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.febCostsServices);

    GetHyperBudget.FebCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.febCostsServices);


   SetHyperBudget.MarCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.marCostsServices);

    GetHyperBudget.MarCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.marCostsServices);


   SetHyperBudget.AprCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.aprCostsServices);

    GetHyperBudget.AprCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.aprCostsServices);


   SetHyperBudget.MayCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.mayCostsServices);

    GetHyperBudget.MayCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.mayCostsServices);


   SetHyperBudget.JunCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.junCostsServices);

    GetHyperBudget.JunCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.junCostsServices);


   SetHyperBudget.JulCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.julCostsServices);

    GetHyperBudget.JulCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.julCostsServices);


   SetHyperBudget.AugCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.augCostsServices);

    GetHyperBudget.AugCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.augCostsServices);


   SetHyperBudget.SepCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.sepCostsServices);

    GetHyperBudget.SepCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.sepCostsServices);


   SetHyperBudget.OctCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.octCostsServices);

    GetHyperBudget.OctCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.octCostsServices);


   SetHyperBudget.NovCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.novCostsServices);

    GetHyperBudget.NovCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.novCostsServices);


   SetHyperBudget.DecCostsServices(
     [in] ArrayOf<Double> CFinance.hyperBudget.decCostsServices);

    GetHyperBudget.DecCostsServices(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.decCostsServices);


   SetHyperBudget.TwelveTotalMonthlyCosts(
     [in] ArrayOf<Double> CFinance.hyperBudget.twelveTotalMonthlyCosts);

    GetHyperBudget.TwelveTotalMonthlyCosts(
     [out, callee] ArrayOf<Double>* CFinance.hyperBudget.twelveTotalMonthlyCosts);


   SetHyperBudget.YearCostThisBudgetId(
     [in] Double CFinance.hyperBudget.yearCostThisBudgetId);

    GetHyperBudget.YearCostThisBudgetId(
     [out] Double* CFinance.hyperBudget.yearCostThisBudgetId);


   SetHyperBudget.NetProfitLossThisHyperBudgetId(
     [in] Double CFinance.hyperBudget.netProfitLossThisHyperBudgetId);

    GetHyperBudget.NetProfitLossThisHyperBudgetId(
     [out] Double* CFinance.hyperBudget.netProfitLossThisHyperBudgetId);


   SetHyperBudget.LinkingInternalBudgetNum(
     [in] Int32 CFinance.hyperBudget.linkingInternalBudgetNum);

    GetHyperBudget.LinkingInternalBudgetNum(
     [out] Int32* CFinance.hyperBudget.linkingInternalBudgetNum);


   SetHyperBudget.CustomerIds(
     [in] ArrayOf<CCustomer.customer> CFinance.hyperBudget.customerIds);

    GetHyperBudget.CustomerIds(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.hyperBudget.customerIds);


   SetHyperBudget.PropertyIds(
     [in] ArrayOf<CProperty.property> CFinance.hyperBudget.propertyIds);

    GetHyperBudget.PropertyIds(
     [out, callee] ArrayOf<CProperty.property>* CFinance.hyperBudget.propertyIds);


   SetHyperBudget.ProgramIds(
     [in] ArrayOf<CProperty.program> CFinance.hyperBudget.programIds);

    GetHyperBudget.ProgramIds(
     [out, callee] ArrayOf<CProperty.program>* CFinance.hyperBudget.programIds);


   SetHyperBudget.ProjectIds(
     [in] ArrayOf<CProperty.project> CFinance.hyperBudget.projectIds);

    GetHyperBudget.ProjectIds(
     [out, callee] ArrayOf<CProperty.project>* CFinance.hyperBudget.projectIds);


   SetHyperBudget.MasterAssetId(
     [in] CFinance.masterAssetRegister CFinance.hyperBudget.masterAssetId);

    GetHyperBudget.MasterAssetId(
     [out] CFinance.masterAssetRegister* CFinance.hyperBudget.masterAssetId);


   SetHyperBudget.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.hyperBudget.businessChannelOwnerId);

    GetHyperBudget.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.hyperBudget.businessChannelOwnerId);


   SetInvoice.InvoiceId(
     [in] String CFinance.invoice.invoiceId);

    GetInvoice.InvoiceId(
     [out] String* CFinance.invoice.invoiceId);


   SetInvoice.InvoiceDate(
     [in] String CFinance.invoice.invoiceDate);

    GetInvoice.InvoiceDate(
     [out] String* CFinance.invoice.invoiceDate);


   SetInvoice.InvoiceAmount(
     [in] Double CFinance.invoice.invoiceAmount);

    GetInvoice.InvoiceAmount(
     [out] Double* CFinance.invoice.invoiceAmount);


   SetInvoice.DocRefs(
     [in] ArrayOf<String> CFinance.invoice.docRefs);

    GetInvoice.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.invoice.docRefs);


   SetInvoice.PaidDate(
     [in] String CFinance.invoice.paidDate);

    GetInvoice.PaidDate(
     [out] String* CFinance.invoice.paidDate);


   SetInvoice.GenLedgeFinTxIds(
     [in] ArrayOf<String> CFinance.invoice.genLedgeFinTxIds);

    GetInvoice.GenLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFinance.invoice.genLedgeFinTxIds);


   SetInvoice.MasLedgeFinTxIds(
     [in] ArrayOf<String> CFinance.invoice.masLedgeFinTxIds);

    GetInvoice.MasLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFinance.invoice.masLedgeFinTxIds);


   SetInvoice.GenLedgeFinTxNum(
     [in] Int32 CFinance.invoice.genLedgeFinTxNum);

    GetInvoice.GenLedgeFinTxNum(
     [out] Int32* CFinance.invoice.genLedgeFinTxNum);


   SetInvoice.MasLedgeFinTxNum(
     [in] Int32 CFinance.invoice.masLedgeFinTxNum);

    GetInvoice.MasLedgeFinTxNum(
     [out] Int32* CFinance.invoice.masLedgeFinTxNum);


   SetInvoice.FeesAndChargesIds(
     [in] ArrayOf<String> CFinance.invoice.feesAndChargesIds);

    GetInvoice.FeesAndChargesIds(
     [out, callee] ArrayOf<String>* CFinance.invoice.feesAndChargesIds);


   SetInvoice.ChargeDates(
     [in] ArrayOf<String> CFinance.invoice.chargeDates);

    GetInvoice.ChargeDates(
     [out, callee] ArrayOf<String>* CFinance.invoice.chargeDates);


   SetInvoice.Customers(
     [in] ArrayOf<CCustomer.customer> CFinance.invoice.customers);

    GetInvoice.Customers(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.invoice.customers);


   SetInvoice.PropertyOwnerIds(
     [in] ArrayOf<CProperty.propertyOwner> CFinance.invoice.propertyOwnerIds);

    GetInvoice.PropertyOwnerIds(
     [out, callee] ArrayOf<CProperty.propertyOwner>* CFinance.invoice.propertyOwnerIds);


   SetInvoice.TenancyId(
     [in] CProperty.tenant CFinance.invoice.tenancyId);

    GetInvoice.TenancyId(
     [out] CProperty.tenant* CFinance.invoice.tenancyId);


   SetInvoice.ItemIds(
     [in] ArrayOf<CAdministration.item> CFinance.invoice.itemIds);

    GetInvoice.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CFinance.invoice.itemIds);


   SetInvoice.JobIds(
     [in] ArrayOf<CAdministration.job> CFinance.invoice.jobIds);

    GetInvoice.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CFinance.invoice.jobIds);


   SetInvoice.ServiceIds(
     [in] ArrayOf<CAdministration.service> CFinance.invoice.serviceIds);

    GetInvoice.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CFinance.invoice.serviceIds);


   SetInvoice.MasterSalesOrderIds(
     [in] ArrayOf<CFinance.masterSalesOrder> CFinance.invoice.masterSalesOrderIds);

    GetInvoice.MasterSalesOrderIds(
     [out, callee] ArrayOf<CFinance.masterSalesOrder>* CFinance.invoice.masterSalesOrderIds);


   SetInvoice.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.invoice.masLedgeFinTxJoinId);

    GetInvoice.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.invoice.masLedgeFinTxJoinId);


   SetInvoice.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.invoice.businessChannelOwnerId);

    GetInvoice.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.invoice.businessChannelOwnerId);


   SetInvoice.BranchId(
     [in] CAdministration.branch CFinance.invoice.branchId);

    GetInvoice.BranchId(
     [out] CAdministration.branch* CFinance.invoice.branchId);


   SetInvoice.DeptId(
     [in] CAdministration.department CFinance.invoice.deptId);

    GetInvoice.DeptId(
     [out] CAdministration.department* CFinance.invoice.deptId);


   SetBill.BillId(
     [in] String CFinance.bill.billId);

    GetBill.BillId(
     [out] String* CFinance.bill.billId);


   SetBill.BillCodeScanned(
     [in] String CFinance.bill.billCodeScanned);

    GetBill.BillCodeScanned(
     [out] String* CFinance.bill.billCodeScanned);


   SetBill.BillDate(
     [in] String CFinance.bill.billDate);

    GetBill.BillDate(
     [out] String* CFinance.bill.billDate);


   SetBill.BillAmount(
     [in] Double CFinance.bill.billAmount);

    GetBill.BillAmount(
     [out] Double* CFinance.bill.billAmount);


   SetBill.DocRefs(
     [in] ArrayOf<String> CFinance.bill.docRefs);

    GetBill.DocRefs(
     [out, callee] ArrayOf<String>* CFinance.bill.docRefs);


   SetBill.PaidDate(
     [in] String CFinance.bill.paidDate);

    GetBill.PaidDate(
     [out] String* CFinance.bill.paidDate);


   SetBill.GenLedgeFinTxIds(
     [in] ArrayOf<String> CFinance.bill.genLedgeFinTxIds);

    GetBill.GenLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFinance.bill.genLedgeFinTxIds);


   SetBill.MasLedgeFinTxIds(
     [in] ArrayOf<String> CFinance.bill.masLedgeFinTxIds);

    GetBill.MasLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFinance.bill.masLedgeFinTxIds);


   SetBill.GenLedgeFinTxNum(
     [in] Int32 CFinance.bill.genLedgeFinTxNum);

    GetBill.GenLedgeFinTxNum(
     [out] Int32* CFinance.bill.genLedgeFinTxNum);


   SetBill.MasLedgeFinTxNum(
     [in] Int32 CFinance.bill.masLedgeFinTxNum);

    GetBill.MasLedgeFinTxNum(
     [out] Int32* CFinance.bill.masLedgeFinTxNum);


   SetBill.Passed(
     [in] Boolean CFinance.bill.passed);

    GetBill.Passed(
     [out] Boolean* CFinance.bill.passed);


   SetBill.SupplierId(
     [in] CSupplier.supplier CFinance.bill.supplierId);

    GetBill.SupplierId(
     [out] CSupplier.supplier* CFinance.bill.supplierId);


   SetBill.ItemIds(
     [in] ArrayOf<CAdministration.item> CFinance.bill.itemIds);

    GetBill.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CFinance.bill.itemIds);


   SetBill.JobIds(
     [in] ArrayOf<CAdministration.job> CFinance.bill.jobIds);

    GetBill.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CFinance.bill.jobIds);


   SetBill.ServiceIds(
     [in] ArrayOf<CAdministration.service> CFinance.bill.serviceIds);

    GetBill.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CFinance.bill.serviceIds);


   SetBill.PurchOrderIds(
     [in] ArrayOf<CFinance.purchaseOrder> CFinance.bill.purchOrderIds);

    GetBill.PurchOrderIds(
     [out, callee] ArrayOf<CFinance.purchaseOrder>* CFinance.bill.purchOrderIds);


   SetBill.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.bill.masLedgeFinTxJoinId);

    GetBill.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.bill.masLedgeFinTxJoinId);


   SetBill.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.bill.businessChannelOwnerId);

    GetBill.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.bill.businessChannelOwnerId);


   SetBill.BranchId(
     [in] CAdministration.branch CFinance.bill.branchId);

    GetBill.BranchId(
     [out] CAdministration.branch* CFinance.bill.branchId);


   SetBill.DeptId(
     [in] CAdministration.department CFinance.bill.deptId);

    GetBill.DeptId(
     [out] CAdministration.department* CFinance.bill.deptId);


   SetFeesAndCharges.FeeChargeId(
     [in] String CFinance.feesAndCharges.feeChargeId);

    GetFeesAndCharges.FeeChargeId(
     [out] String* CFinance.feesAndCharges.feeChargeId);


   SetFeesAndCharges.FeeChargeName(
     [in] String CFinance.feesAndCharges.feeChargeName);

    GetFeesAndCharges.FeeChargeName(
     [out] String* CFinance.feesAndCharges.feeChargeName);


   SetFeesAndCharges.FeeChargeCode(
     [in] String CFinance.feesAndCharges.feeChargeCode);

    GetFeesAndCharges.FeeChargeCode(
     [out] String* CFinance.feesAndCharges.feeChargeCode);


   SetFeesAndCharges.FeeChargeDescription(
     [in] String CFinance.feesAndCharges.feeChargeDescription);

    GetFeesAndCharges.FeeChargeDescription(
     [out] String* CFinance.feesAndCharges.feeChargeDescription);


   SetFeesAndCharges.FeeChargeRate(
     [in] Double CFinance.feesAndCharges.feeChargeRate);

    GetFeesAndCharges.FeeChargeRate(
     [out] Double* CFinance.feesAndCharges.feeChargeRate);


   SetFeesAndCharges.FeeChargeRateUnits(
     [in] String CFinance.feesAndCharges.feeChargeRateUnits);

    GetFeesAndCharges.FeeChargeRateUnits(
     [out] String* CFinance.feesAndCharges.feeChargeRateUnits);


   SetFeesAndCharges.PaymentInterval(
     [in] CHelper.billingInterval CFinance.feesAndCharges.billingInterval);

    GetFeesAndCharges.PaymentInterval(
     [out] CHelper.billingInterval* CFinance.feesAndCharges.billingInterval);


   SetFeesAndCharges.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.feesAndCharges.businessChannelOwnerId);

    GetFeesAndCharges.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.feesAndCharges.businessChannelOwnerId);


   SetFeesAndCharges.ServiceIds(
     [in] ArrayOf<CAdministration.service> CFinance.feesAndCharges.serviceIds);

    GetFeesAndCharges.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CFinance.feesAndCharges.serviceIds);


   SetFeesAndCharges.ItemIds(
     [in] ArrayOf<CAdministration.item> CFinance.feesAndCharges.itemIds);

    GetFeesAndCharges.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CFinance.feesAndCharges.itemIds);


   SetFeesAndCharges.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CFinance.feesAndCharges.itemTypeIds);

    GetFeesAndCharges.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CFinance.feesAndCharges.itemTypeIds);


   SetPurchaseOrder.PurchOrderId(
     [in] String CFinance.purchaseOrder.purchOrderId);

    GetPurchaseOrder.PurchOrderId(
     [out] String* CFinance.purchaseOrder.purchOrderId);


   SetPurchaseOrder.MRQIdIfRentalProperty(
     [in] String CFinance.purchaseOrder.mRQIdIfRentalProperty);

    GetPurchaseOrder.MRQIdIfRentalProperty(
     [out] String* CFinance.purchaseOrder.mRQIdIfRentalProperty);


   SetPurchaseOrder.DamageCausedByCustomerTenantOthers(
     [in] Boolean CFinance.purchaseOrder.damageCausedByCustomerTenantOthers);

    GetPurchaseOrder.DamageCausedByCustomerTenantOthers(
     [out] Boolean* CFinance.purchaseOrder.damageCausedByCustomerTenantOthers);


   SetPurchaseOrder.OurResponsibility(
     [in] Boolean CFinance.purchaseOrder.ourResponsibility);

    GetPurchaseOrder.OurResponsibility(
     [out] Boolean* CFinance.purchaseOrder.ourResponsibility);


   SetPurchaseOrder.SummaryDescriptionOfProblemItemised(
     [in] ArrayOf<String> CFinance.purchaseOrder.summaryDescriptionOfProblemItemised);

    GetPurchaseOrder.SummaryDescriptionOfProblemItemised(
     [out, callee] ArrayOf<String>* CFinance.purchaseOrder.summaryDescriptionOfProblemItemised);


   SetPurchaseOrder.QuotedEstimateCost(
     [in] Double CFinance.purchaseOrder.quotedEstimateCost);

    GetPurchaseOrder.QuotedEstimateCost(
     [out] Double* CFinance.purchaseOrder.quotedEstimateCost);


   SetPurchaseOrder.ExpectedCompletionDate(
     [in] String CFinance.purchaseOrder.expectedCompletionDate);

    GetPurchaseOrder.ExpectedCompletionDate(
     [out] String* CFinance.purchaseOrder.expectedCompletionDate);


   SetPurchaseOrder.WorkCheckedPassed(
     [in] ArrayOf<Boolean> CFinance.purchaseOrder.workCheckedPassed);

    GetPurchaseOrder.WorkCheckedPassed(
     [out, callee] ArrayOf<Boolean>* CFinance.purchaseOrder.workCheckedPassed);


   SetPurchaseOrder.TotalMaintPurchOrderAmount(
     [in] Double CFinance.purchaseOrder.totalMaintPurchOrderAmount);

    GetPurchaseOrder.TotalMaintPurchOrderAmount(
     [out] Double* CFinance.purchaseOrder.totalMaintPurchOrderAmount);


   SetPurchaseOrder.MasLedgeFinTxNumReturned(
     [in] Int32 CFinance.purchaseOrder.masLedgeFinTxNumReturned);

    GetPurchaseOrder.MasLedgeFinTxNumReturned(
     [out] Int32* CFinance.purchaseOrder.masLedgeFinTxNumReturned);


   SetPurchaseOrder.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.purchaseOrder.businessChannelOwnerId);

    GetPurchaseOrder.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.purchaseOrder.businessChannelOwnerId);


   SetPurchaseOrder.PropertyId(
     [in] CProperty.property CFinance.purchaseOrder.propertyId);

    GetPurchaseOrder.PropertyId(
     [out] CProperty.property* CFinance.purchaseOrder.propertyId);


   SetPurchaseOrder.BranchId(
     [in] CAdministration.branch CFinance.purchaseOrder.branchId);

    GetPurchaseOrder.BranchId(
     [out] CAdministration.branch* CFinance.purchaseOrder.branchId);


   SetPurchaseOrder.DeptId(
     [in] CAdministration.department CFinance.purchaseOrder.deptId);

    GetPurchaseOrder.DeptId(
     [out] CAdministration.department* CFinance.purchaseOrder.deptId);


   SetPurchaseOrder.SupplierId(
     [in] CSupplier.supplier CFinance.purchaseOrder.supplierId);

    GetPurchaseOrder.SupplierId(
     [out] CSupplier.supplier* CFinance.purchaseOrder.supplierId);


   SetPurchaseOrder.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CFinance.purchaseOrder.itemTypeIds);

    GetPurchaseOrder.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CFinance.purchaseOrder.itemTypeIds);


   SetPurchaseOrder.ItemIds(
     [in] ArrayOf<CAdministration.item> CFinance.purchaseOrder.itemIds);

    GetPurchaseOrder.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CFinance.purchaseOrder.itemIds);


   SetPurchaseOrder.ServiceTypeIds(
     [in] ArrayOf<CAdministration.serviceType> CFinance.purchaseOrder.serviceTypeIds);

    GetPurchaseOrder.ServiceTypeIds(
     [out, callee] ArrayOf<CAdministration.serviceType>* CFinance.purchaseOrder.serviceTypeIds);


   SetPurchaseOrder.ServiceIds(
     [in] ArrayOf<CAdministration.service> CFinance.purchaseOrder.serviceIds);

    GetPurchaseOrder.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CFinance.purchaseOrder.serviceIds);


   SetPurchaseOrder.JobTypeIds(
     [in] ArrayOf<CAdministration.jobType> CFinance.purchaseOrder.jobTypeIds);

    GetPurchaseOrder.JobTypeIds(
     [out, callee] ArrayOf<CAdministration.jobType>* CFinance.purchaseOrder.jobTypeIds);


   SetPurchaseOrder.JobIds(
     [in] ArrayOf<CAdministration.job> CFinance.purchaseOrder.jobIds);

    GetPurchaseOrder.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CFinance.purchaseOrder.jobIds);


   SetPurchaseOrder.MasterLedgerExpenseIds(
     [in] ArrayOf<CFinance.masterLedgerExpense> CFinance.purchaseOrder.masterLedgerExpenseIds);

    GetPurchaseOrder.MasterLedgerExpenseIds(
     [out, callee] ArrayOf<CFinance.masterLedgerExpense>* CFinance.purchaseOrder.masterLedgerExpenseIds);


   SetPurchaseOrder.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.purchaseOrder.masLedgeFinTxJoinId);

    GetPurchaseOrder.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.purchaseOrder.masLedgeFinTxJoinId);


   SetPurchaseOrder.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFinance.purchaseOrder.docRefIds);

    GetPurchaseOrder.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.purchaseOrder.docRefIds);


   SetPurchaseOrder.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFinance.purchaseOrder.imageRefIds);

    GetPurchaseOrder.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFinance.purchaseOrder.imageRefIds);


   SetMasterSalesOrder.MasterSalesOrderId(
     [in] String CFinance.masterSalesOrder.masterSalesOrderId);

    GetMasterSalesOrder.MasterSalesOrderId(
     [out] String* CFinance.masterSalesOrder.masterSalesOrderId);


   SetMasterSalesOrder.ItemQuantities(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.itemQuantities);

    GetMasterSalesOrder.ItemQuantities(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.itemQuantities);


   SetMasterSalesOrder.ItemWeights(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.itemWeights);

    GetMasterSalesOrder.ItemWeights(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.itemWeights);


   SetMasterSalesOrder.ItemPrices(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.itemPrices);

    GetMasterSalesOrder.ItemPrices(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.itemPrices);


   SetMasterSalesOrder.ItemTotalPrice(
     [in] Double CFinance.masterSalesOrder.itemTotalPrice);

    GetMasterSalesOrder.ItemTotalPrice(
     [out] Double* CFinance.masterSalesOrder.itemTotalPrice);


   SetMasterSalesOrder.ItemTotalWeight(
     [in] Double CFinance.masterSalesOrder.itemTotalWeight);

    GetMasterSalesOrder.ItemTotalWeight(
     [out] Double* CFinance.masterSalesOrder.itemTotalWeight);


   SetMasterSalesOrder.ProductQuantities(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.productQuantities);

    GetMasterSalesOrder.ProductQuantities(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.productQuantities);


   SetMasterSalesOrder.ProductWeights(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.productWeights);

    GetMasterSalesOrder.ProductWeights(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.productWeights);


   SetMasterSalesOrder.ProductsPrices(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.productsPrices);

    GetMasterSalesOrder.ProductsPrices(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.productsPrices);


   SetMasterSalesOrder.ProductsTotalPrice(
     [in] Double CFinance.masterSalesOrder.productsTotalPrice);

    GetMasterSalesOrder.ProductsTotalPrice(
     [out] Double* CFinance.masterSalesOrder.productsTotalPrice);


   SetMasterSalesOrder.ProductsTotalWeight(
     [in] Double CFinance.masterSalesOrder.productsTotalWeight);

    GetMasterSalesOrder.ProductsTotalWeight(
     [out] Double* CFinance.masterSalesOrder.productsTotalWeight);


   SetMasterSalesOrder.ServicePriceRates(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.servicePriceRates);

    GetMasterSalesOrder.ServicePriceRates(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.servicePriceRates);


   SetMasterSalesOrder.ServiceEstimatedTotalPrice(
     [in] Double CFinance.masterSalesOrder.serviceEstimatedTotalPrice);

    GetMasterSalesOrder.ServiceEstimatedTotalPrice(
     [out] Double* CFinance.masterSalesOrder.serviceEstimatedTotalPrice);


   SetMasterSalesOrder.JobPriceRates(
     [in] ArrayOf<Double> CFinance.masterSalesOrder.jobPriceRates);

    GetMasterSalesOrder.JobPriceRates(
     [out, callee] ArrayOf<Double>* CFinance.masterSalesOrder.jobPriceRates);


   SetMasterSalesOrder.JobsEstimatedTotalPrice(
     [in] Double CFinance.masterSalesOrder.jobsEstimatedTotalPrice);

    GetMasterSalesOrder.JobsEstimatedTotalPrice(
     [out] Double* CFinance.masterSalesOrder.jobsEstimatedTotalPrice);


   SetMasterSalesOrder.TotalOrderPrice(
     [in] Double CFinance.masterSalesOrder.totalOrderPrice);

    GetMasterSalesOrder.TotalOrderPrice(
     [out] Double* CFinance.masterSalesOrder.totalOrderPrice);


   SetMasterSalesOrder.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.masterSalesOrder.businessChannelOwnerId);

    GetMasterSalesOrder.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.masterSalesOrder.businessChannelOwnerId);


   SetMasterSalesOrder.BranchId(
     [in] CAdministration.branch CFinance.masterSalesOrder.branchId);

    GetMasterSalesOrder.BranchId(
     [out] CAdministration.branch* CFinance.masterSalesOrder.branchId);


   SetMasterSalesOrder.DeptId(
     [in] CAdministration.department CFinance.masterSalesOrder.deptId);

    GetMasterSalesOrder.DeptId(
     [out] CAdministration.department* CFinance.masterSalesOrder.deptId);


   SetMasterSalesOrder.Customers(
     [in] ArrayOf<CCustomer.customer> CFinance.masterSalesOrder.customers);

    GetMasterSalesOrder.Customers(
     [out, callee] ArrayOf<CCustomer.customer>* CFinance.masterSalesOrder.customers);


   SetMasterSalesOrder.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CFinance.masterSalesOrder.itemTypeIds);

    GetMasterSalesOrder.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CFinance.masterSalesOrder.itemTypeIds);


   SetMasterSalesOrder.ItemIds(
     [in] ArrayOf<CAdministration.item> CFinance.masterSalesOrder.itemIds);

    GetMasterSalesOrder.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CFinance.masterSalesOrder.itemIds);


   SetMasterSalesOrder.ServiceTypeIds(
     [in] ArrayOf<CAdministration.serviceType> CFinance.masterSalesOrder.serviceTypeIds);

    GetMasterSalesOrder.ServiceTypeIds(
     [out, callee] ArrayOf<CAdministration.serviceType>* CFinance.masterSalesOrder.serviceTypeIds);


   SetMasterSalesOrder.ServiceIds(
     [in] ArrayOf<CAdministration.service> CFinance.masterSalesOrder.serviceIds);

    GetMasterSalesOrder.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CFinance.masterSalesOrder.serviceIds);


   SetMasterSalesOrder.JobTypeIds(
     [in] ArrayOf<CAdministration.jobType> CFinance.masterSalesOrder.jobTypeIds);

    GetMasterSalesOrder.JobTypeIds(
     [out, callee] ArrayOf<CAdministration.jobType>* CFinance.masterSalesOrder.jobTypeIds);


   SetMasterSalesOrder.JobIds(
     [in] ArrayOf<CAdministration.job> CFinance.masterSalesOrder.jobIds);

    GetMasterSalesOrder.JobIds(
     [out, callee] ArrayOf<CAdministration.job>* CFinance.masterSalesOrder.jobIds);


   SetMasterSalesOrder.MasterLedgerIncomeId(
     [in] ArrayOf<CFinance.masterLedgerIncome> CFinance.masterSalesOrder.masterLedgerIncomeId);

    GetMasterSalesOrder.MasterLedgerIncomeId(
     [out, callee] ArrayOf<CFinance.masterLedgerIncome>* CFinance.masterSalesOrder.masterLedgerIncomeId);


   SetMasterSalesOrder.MasLedgeFinTxJoinId(
     [in] masLedgeFinTxJoin CFinance.masterSalesOrder.masLedgeFinTxJoinId);

    GetMasterSalesOrder.MasLedgeFinTxJoinId(
     [out] masLedgeFinTxJoin* CFinance.masterSalesOrder.masLedgeFinTxJoinId);


   SetMasterSalesOrder.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFinance.masterSalesOrder.docRefIds);

    GetMasterSalesOrder.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.masterSalesOrder.docRefIds);


   SetMasterSalesOrder.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFinance.masterSalesOrder.imageRefIds);

    GetMasterSalesOrder.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFinance.masterSalesOrder.imageRefIds);


   SetMasterSalesOrder.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFinance.masterSalesOrder.videoRefIds);

    GetMasterSalesOrder.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFinance.masterSalesOrder.videoRefIds);


   SetTaxReferenceTable.TaxReferenceId(
     [in] String CFinance.taxReferenceTable.taxReferenceId);

    GetTaxReferenceTable.TaxReferenceId(
     [out] String* CFinance.taxReferenceTable.taxReferenceId);


   SetTaxReferenceTable.AusStates(
     [in] ArrayOf<CHelper.ausState> CFinance.taxReferenceTable.ausStates);

    GetTaxReferenceTable.AusStates(
     [out, callee] ArrayOf<CHelper.ausState>* CFinance.taxReferenceTable.ausStates);


   SetTaxReferenceTable.Description(
     [in] String CFinance.taxReferenceTable.description);

    GetTaxReferenceTable.Description(
     [out] String* CFinance.taxReferenceTable.description);


   SetTaxReferenceTable.Notes(
     [in] ArrayOf<String> CFinance.taxReferenceTable.notes);

    GetTaxReferenceTable.Notes(
     [out, callee] ArrayOf<String>* CFinance.taxReferenceTable.notes);


   SetTaxReferenceTable.TaxRatePerCent(
     [in] Double CFinance.taxReferenceTable.taxRatePerCent);

    GetTaxReferenceTable.TaxRatePerCent(
     [out] Double* CFinance.taxReferenceTable.taxRatePerCent);


   SetTaxReferenceTable.TaxCode(
     [in] CHelper.taxCode CFinance.taxReferenceTable.taxCode);

    GetTaxReferenceTable.TaxCode(
     [out] CHelper.taxCode* CFinance.taxReferenceTable.taxCode);


   SetTaxReferenceTable.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFinance.taxReferenceTable.docRefIds);

    GetTaxReferenceTable.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFinance.taxReferenceTable.docRefIds);


   SetTaxReferenceTable.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFinance.taxReferenceTable.businessChannelOwnerId);

    GetTaxReferenceTable.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFinance.taxReferenceTable.businessChannelOwnerId);


   SetMaterial.MaterialId(
     [in] String CFactory.material.materialId);

    GetMaterial.MaterialId(
     [out] String* CFactory.material.materialId);


   SetMaterial.Hazardous(
     [in] Boolean CFactory.material.hazardous);

    GetMaterial.Hazardous(
     [out] Boolean* CFactory.material.hazardous);


   SetMaterial.MaterialName(
     [in] String CFactory.material.materialName);

    GetMaterial.MaterialName(
     [out] String* CFactory.material.materialName);


   SetMaterial.MaterialDescription(
     [in] String CFactory.material.materialDescription);

    GetMaterial.MaterialDescription(
     [out] String* CFactory.material.materialDescription);


   SetMaterial.QCCheckedPassed(
     [in] Boolean CFactory.material.qCCheckedPassed);

    GetMaterial.QCCheckedPassed(
     [out] Boolean* CFactory.material.qCCheckedPassed);


   SetMaterial.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.material.businessChannelOwnerId);

    GetMaterial.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.material.businessChannelOwnerId);


   SetMaterial.ItemId(
     [in] CAdministration.item CFactory.material.itemId);

    GetMaterial.ItemId(
     [out] CAdministration.item* CFactory.material.itemId);


   SetMaterial.SupplierId(
     [in] CSupplier.supplier CFactory.material.supplierId);

    GetMaterial.SupplierId(
     [out] CSupplier.supplier* CFactory.material.supplierId);


   SetMaterial.MaterialTypeId(
     [in] CFactory.materialType CFactory.material.materialTypeId);

    GetMaterial.MaterialTypeId(
     [out] CFactory.materialType* CFactory.material.materialTypeId);


   SetMaterial.PartId(
     [in] CFactory.part CFactory.material.PartId);

    GetMaterial.PartId(
     [out] CFactory.part* CFactory.material.PartId);


   SetMaterial.MinorSubAssemblyId(
     [in] CFactory.minorsubassembly CFactory.material.minorsubassemblyId);

    GetMaterial.MinorSubAssemblyId(
     [out] CFactory.minorsubassembly* CFactory.material.minorsubassemblyId);


   SetMaterial.SubAssemblyId(
     [in] CFactory.subassembly CFactory.material.subassemblyId);

    GetMaterial.SubAssemblyId(
     [out] CFactory.subassembly* CFactory.material.subassemblyId);


   SetMaterial.MajorSubAssemblyId(
     [in] CFactory.majorsubassembly CFactory.material.majorsubassemblyId);

    GetMaterial.MajorSubAssemblyId(
     [out] CFactory.majorsubassembly* CFactory.material.majorsubassemblyId);


   SetMaterial.LesserAssemblyId(
     [in] CFactory.lesserassembly CFactory.material.lesserassemblyId);

    GetMaterial.LesserAssemblyId(
     [out] CFactory.lesserassembly* CFactory.material.lesserassemblyId);


   SetMaterial.AssemblyId(
     [in] CFactory.assembly CFactory.material.assemblyId);

    GetMaterial.AssemblyId(
     [out] CFactory.assembly* CFactory.material.assemblyId);


   SetMaterial.GreaterAssemblyId(
     [in] CFactory.greaterassembly CFactory.material.greaterassemblyId);

    GetMaterial.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CFactory.material.greaterassemblyId);


   SetMaterial.ProductId(
     [in] CFactory.product CFactory.material.productId);

    GetMaterial.ProductId(
     [out] CFactory.product* CFactory.material.productId);


   SetMaterial.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.material.docRefIds);

    GetMaterial.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.material.docRefIds);


   SetMaterial.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.material.imageRefIds);

    GetMaterial.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.material.imageRefIds);


   SetMaterial.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.material.videoRefIds);

    GetMaterial.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.material.videoRefIds);


   SetMaterialType.MaterialTypeId(
     [in] String CFactory.materialType.materialTypeId);

    GetMaterialType.MaterialTypeId(
     [out] String* CFactory.materialType.materialTypeId);


   SetMaterialType.MaterialDescription(
     [in] String CFactory.materialType.materialDescription);

    GetMaterialType.MaterialDescription(
     [out] String* CFactory.materialType.materialDescription);


   SetMaterialType.MaterialSafetyDataRefs(
     [in] ArrayOf<String> CFactory.materialType.materialSafetyDataRefs);

    GetMaterialType.MaterialSafetyDataRefs(
     [out, callee] ArrayOf<String>* CFactory.materialType.materialSafetyDataRefs);


   SetMaterialType.MaterialCode(
     [in] String CFactory.materialType.materialCode);

    GetMaterialType.MaterialCode(
     [out] String* CFactory.materialType.materialCode);


   SetMaterialType.UnitsOfMeasurement(
     [in] String CFactory.materialType.UnitsOfMeasurement);

    GetMaterialType.UnitsOfMeasurement(
     [out] String* CFactory.materialType.UnitsOfMeasurement);


   SetMaterialType.RemainingAmount(
     [in] Double CFactory.materialType.remainingAmount);

    GetMaterialType.RemainingAmount(
     [out] Double* CFactory.materialType.remainingAmount);


   SetMaterialType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.materialType.corrosiveness);

    GetMaterialType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.materialType.corrosiveness);


   SetMaterialType.Toxicity(
     [in] CHelper.toxicity CFactory.materialType.toxicity);

    GetMaterialType.Toxicity(
     [out] CHelper.toxicity* CFactory.materialType.toxicity);


   SetMaterialType.Fragility(
     [in] CHelper.fragility CFactory.materialType.fragility);

    GetMaterialType.Fragility(
     [out] CHelper.fragility* CFactory.materialType.fragility);


   SetMaterialType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.materialType.PhysicalStateWhenIdle);

    GetMaterialType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.materialType.PhysicalStateWhenIdle);


   SetMaterialType.RemainingNum(
     [in] Double CFactory.materialType.remainingNum);

    GetMaterialType.RemainingNum(
     [out] Double* CFactory.materialType.remainingNum);


   SetMaterialType.RawMaterialStockReorderSetPoint(
     [in] Double CFactory.materialType.materialReorderSetPoint);

    GetMaterialType.RawMaterialStockReorderSetPoint(
     [out] Double* CFactory.materialType.materialReorderSetPoint);


   SetMaterialType.RawMaterialStockReorderCode(
     [in] String CFactory.materialType.materialReorderCode);

    GetMaterialType.RawMaterialStockReorderCode(
     [out] String* CFactory.materialType.materialReorderCode);


   SetMaterialType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.materialType.businessChannelOwnerId);

    GetMaterialType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.materialType.businessChannelOwnerId);


   SetMaterialType.ItemTypeId(
     [in] CAdministration.itemType CFactory.materialType.itemTypeId);

    GetMaterialType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.materialType.itemTypeId);


   SetMaterialType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.materialType.supplierIds);

    GetMaterialType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.materialType.supplierIds);


   SetMaterialType.PartTypeIds(
     [in] ArrayOf<CFactory.partType> CFactory.materialType.partTypeIds);

    GetMaterialType.PartTypeIds(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.materialType.partTypeIds);


   SetMaterialType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.materialType.minorsubassemblyTypeIds);

    GetMaterialType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.materialType.minorsubassemblyTypeIds);


   SetMaterialType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.materialType.subassemblyTypeIds);

    GetMaterialType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.materialType.subassemblyTypeIds);


   SetMaterialType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.materialType.majorsubassemblyTypeIds);

    GetMaterialType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.materialType.majorsubassemblyTypeIds);


   SetMaterialType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.materialType.lesserassemblyTypeIds);

    GetMaterialType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.materialType.lesserassemblyTypeIds);


   SetMaterialType.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CFactory.materialType.assemblyTypeIds);

    GetMaterialType.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CFactory.materialType.assemblyTypeIds);


   SetMaterialType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.materialType.greaterassemblyTypeIds);

    GetMaterialType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.materialType.greaterassemblyTypeIds);


   SetMaterialType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.materialType.productTypeIds);

    GetMaterialType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.materialType.productTypeIds);


   SetMaterialType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.materialType.docRefIds);

    GetMaterialType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.materialType.docRefIds);


   SetMaterialType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.materialType.imageRefIds);

    GetMaterialType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.materialType.imageRefIds);


   SetMaterialType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.materialType.videoRefIds);

    GetMaterialType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.materialType.videoRefIds);


   SetPart.PartId(
     [in] String CFactory.part.partId);

    GetPart.PartId(
     [out] String* CFactory.part.partId);


   SetPart.Hazardous(
     [in] Boolean CFactory.part.hazardous);

    GetPart.Hazardous(
     [out] Boolean* CFactory.part.hazardous);


   SetPart.PartName(
     [in] String CFactory.part.partName);

    GetPart.PartName(
     [out] String* CFactory.part.partName);


   SetPart.PartDescription(
     [in] String CFactory.part.partDescription);

    GetPart.PartDescription(
     [out] String* CFactory.part.partDescription);


   SetPart.QCCheckedPassed(
     [in] Boolean CFactory.part.qCCheckedPassed);

    GetPart.QCCheckedPassed(
     [out] Boolean* CFactory.part.qCCheckedPassed);


   SetPart.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.part.businessChannelOwnerId);

    GetPart.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.part.businessChannelOwnerId);


   SetPart.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.part.materialIds);

    GetPart.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.part.materialIds);


   SetPart.PartTypeId(
     [in] CFactory.partType CFactory.part.partTypeId);

    GetPart.PartTypeId(
     [out] CFactory.partType* CFactory.part.partTypeId);


   SetPart.ItemId(
     [in] CAdministration.item CFactory.part.itemId);

    GetPart.ItemId(
     [out] CAdministration.item* CFactory.part.itemId);


   SetPart.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.part.supplierIds);

    GetPart.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.part.supplierIds);


   SetPart.MinorSubAssemblyId(
     [in] CFactory.minorsubassembly CFactory.part.minorsubassemblyId);

    GetPart.MinorSubAssemblyId(
     [out] CFactory.minorsubassembly* CFactory.part.minorsubassemblyId);


   SetPart.SubAssemblyId(
     [in] CFactory.subassembly CFactory.part.subassemblyId);

    GetPart.SubAssemblyId(
     [out] CFactory.subassembly* CFactory.part.subassemblyId);


   SetPart.MajorSubAssemblyId(
     [in] CFactory.majorsubassembly CFactory.part.majorsubassemblyId);

    GetPart.MajorSubAssemblyId(
     [out] CFactory.majorsubassembly* CFactory.part.majorsubassemblyId);


   SetPart.LesserAssemblyId(
     [in] CFactory.lesserassembly CFactory.part.lesserassemblyId);

    GetPart.LesserAssemblyId(
     [out] CFactory.lesserassembly* CFactory.part.lesserassemblyId);


   SetPart.AssemblyId(
     [in] CFactory.assembly CFactory.part.assemblyId);

    GetPart.AssemblyId(
     [out] CFactory.assembly* CFactory.part.assemblyId);


   SetPart.GreaterAssemblyId(
     [in] CFactory.greaterassembly CFactory.part.greaterassemblyId);

    GetPart.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CFactory.part.greaterassemblyId);


   SetPart.ProductId(
     [in] CFactory.product CFactory.part.productId);

    GetPart.ProductId(
     [out] CFactory.product* CFactory.part.productId);


   SetPart.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.part.docRefIds);

    GetPart.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.part.docRefIds);


   SetPart.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.part.imageRefIds);

    GetPart.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.part.imageRefIds);


   SetPart.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.part.videoRefIds);

    GetPart.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.part.videoRefIds);


   SetPartType.PartTypeId(
     [in] String CFactory.partType.partTypeId);

    GetPartType.PartTypeId(
     [out] String* CFactory.partType.partTypeId);


   SetPartType.PartDescription(
     [in] String CFactory.partType.partDescription);

    GetPartType.PartDescription(
     [out] String* CFactory.partType.partDescription);


   SetPartType.PartCode(
     [in] String CFactory.partType.partCode);

    GetPartType.PartCode(
     [out] String* CFactory.partType.partCode);


   SetPartType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.partType.corrosiveness);

    GetPartType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.partType.corrosiveness);


   SetPartType.Toxicity(
     [in] CHelper.toxicity CFactory.partType.toxicity);

    GetPartType.Toxicity(
     [out] CHelper.toxicity* CFactory.partType.toxicity);


   SetPartType.Fragility(
     [in] CHelper.fragility CFactory.partType.fragility);

    GetPartType.Fragility(
     [out] CHelper.fragility* CFactory.partType.fragility);


   SetPartType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.partType.PhysicalStateWhenIdle);

    GetPartType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.partType.PhysicalStateWhenIdle);


   SetPartType.RemainingNum(
     [in] Int32 CFactory.partType.remainingNum);

    GetPartType.RemainingNum(
     [out] Int32* CFactory.partType.remainingNum);


   SetPartType.PartReorderSetPoint(
     [in] Int32 CFactory.partType.partReorderSetPoint);

    GetPartType.PartReorderSetPoint(
     [out] Int32* CFactory.partType.partReorderSetPoint);


   SetPartType.PartReorderCode(
     [in] String CFactory.partType.partReorderCode);

    GetPartType.PartReorderCode(
     [out] String* CFactory.partType.partReorderCode);


   SetPartType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.partType.businessChannelOwnerId);

    GetPartType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.partType.businessChannelOwnerId);


   SetPartType.ItemTypeId(
     [in] CAdministration.itemType CFactory.partType.itemTypeId);

    GetPartType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.partType.itemTypeId);


   SetPartType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.partType.supplierIds);

    GetPartType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.partType.supplierIds);


   SetPartType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.partType.materialTypeIds);

    GetPartType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.partType.materialTypeIds);


   SetPartType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.partType.minorsubassemblyTypeIds);

    GetPartType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.partType.minorsubassemblyTypeIds);


   SetPartType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.partType.subassemblyTypeIds);

    GetPartType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.partType.subassemblyTypeIds);


   SetPartType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.partType.majorsubassemblyTypeIds);

    GetPartType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.partType.majorsubassemblyTypeIds);


   SetPartType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.partType.lesserassemblyTypeIds);

    GetPartType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.partType.lesserassemblyTypeIds);


   SetPartType.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CFactory.partType.assemblyTypeIds);

    GetPartType.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CFactory.partType.assemblyTypeIds);


   SetPartType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.partType.greaterassemblyTypeIds);

    GetPartType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.partType.greaterassemblyTypeIds);


   SetPartType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.partType.productTypeIds);

    GetPartType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.partType.productTypeIds);


   SetPartType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.partType.docRefIds);

    GetPartType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.partType.docRefIds);


   SetPartType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.partType.imageRefIds);

    GetPartType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.partType.imageRefIds);


   SetPartType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.partType.videoRefIds);

    GetPartType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.partType.videoRefIds);


   SetMinorSubAssembly.MinorSubAssyId(
     [in] String CFactory.minorsubassembly.minorSubAssyId);

    GetMinorSubAssembly.MinorSubAssyId(
     [out] String* CFactory.minorsubassembly.minorSubAssyId);


   SetMinorSubAssembly.Hazardous(
     [in] Boolean CFactory.minorsubassembly.hazardous);

    GetMinorSubAssembly.Hazardous(
     [out] Boolean* CFactory.minorsubassembly.hazardous);


   SetMinorSubAssembly.MinorSubAssemblyName(
     [in] String CFactory.minorsubassembly.minorsubassemblyName);

    GetMinorSubAssembly.MinorSubAssemblyName(
     [out] String* CFactory.minorsubassembly.minorsubassemblyName);


   SetMinorSubAssembly.MinorSubAssemblyDescription(
     [in] String CFactory.minorsubassembly.minorsubassemblyDescription);

    GetMinorSubAssembly.MinorSubAssemblyDescription(
     [out] String* CFactory.minorsubassembly.minorsubassemblyDescription);


   SetMinorSubAssembly.QCCheckedPassed(
     [in] Boolean CFactory.minorsubassembly.qCCheckedPassed);

    GetMinorSubAssembly.QCCheckedPassed(
     [out] Boolean* CFactory.minorsubassembly.qCCheckedPassed);


   SetMinorSubAssembly.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.minorsubassembly.businessChannelOwnerId);

    GetMinorSubAssembly.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.minorsubassembly.businessChannelOwnerId);


   SetMinorSubAssembly.MinorSubAssemblyTypeId(
     [in] CFactory.minorsubassembly CFactory.minorsubassembly.minorsubassemblyTypeId);

    GetMinorSubAssembly.MinorSubAssemblyTypeId(
     [out] CFactory.minorsubassembly* CFactory.minorsubassembly.minorsubassemblyTypeId);


   SetMinorSubAssembly.ItemId(
     [in] CAdministration.item CFactory.minorsubassembly.itemId);

    GetMinorSubAssembly.ItemId(
     [out] CAdministration.item* CFactory.minorsubassembly.itemId);


   SetMinorSubAssembly.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.minorsubassembly.supplierIds);

    GetMinorSubAssembly.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.minorsubassembly.supplierIds);


   SetMinorSubAssembly.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.minorsubassembly.materialIds);

    GetMinorSubAssembly.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.minorsubassembly.materialIds);


   SetMinorSubAssembly.PartIds(
     [in] ArrayOf<CFactory.part> CFactory.minorsubassembly.partIds);

    GetMinorSubAssembly.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CFactory.minorsubassembly.partIds);


   SetMinorSubAssembly.SubAssemblyId(
     [in] CFactory.subassembly CFactory.minorsubassembly.subassemblyId);

    GetMinorSubAssembly.SubAssemblyId(
     [out] CFactory.subassembly* CFactory.minorsubassembly.subassemblyId);


   SetMinorSubAssembly.MajorSubAssemblyId(
     [in] CFactory.majorsubassembly CFactory.minorsubassembly.majorsubassemblyId);

    GetMinorSubAssembly.MajorSubAssemblyId(
     [out] CFactory.majorsubassembly* CFactory.minorsubassembly.majorsubassemblyId);


   SetMinorSubAssembly.LesserAssemblyId(
     [in] CFactory.lesserassembly CFactory.minorsubassembly.lesserassemblyId);

    GetMinorSubAssembly.LesserAssemblyId(
     [out] CFactory.lesserassembly* CFactory.minorsubassembly.lesserassemblyId);


   SetMinorSubAssembly.AssemblyId(
     [in] CFactory.assembly CFactory.minorsubassembly.assemblyId);

    GetMinorSubAssembly.AssemblyId(
     [out] CFactory.assembly* CFactory.minorsubassembly.assemblyId);


   SetMinorSubAssembly.GreaterAssemblyId(
     [in] CFactory.greaterassembly CFactory.minorsubassembly.greaterassemblyId);

    GetMinorSubAssembly.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CFactory.minorsubassembly.greaterassemblyId);


   SetMinorSubAssembly.ProductId(
     [in] CFactory.product CFactory.minorsubassembly.productId);

    GetMinorSubAssembly.ProductId(
     [out] CFactory.product* CFactory.minorsubassembly.productId);


   SetMinorSubAssembly.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.minorsubassembly.docRefIds);

    GetMinorSubAssembly.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.minorsubassembly.docRefIds);


   SetMinorSubAssembly.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.minorsubassembly.imageRefIds);

    GetMinorSubAssembly.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.minorsubassembly.imageRefIds);


   SetMinorSubAssembly.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.minorsubassembly.videoRefIds);

    GetMinorSubAssembly.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.minorsubassembly.videoRefIds);


   SetMinorSubAssemblyType.MinorSubAssemblyTypeId(
     [in] String CFactory.minorsubassemblyType.minorsubassemblyTypeId);

    GetMinorSubAssemblyType.MinorSubAssemblyTypeId(
     [out] String* CFactory.minorsubassemblyType.minorsubassemblyTypeId);


   SetMinorSubAssemblyType.MinorSubAssemblyDescription(
     [in] String CFactory.minorsubassemblyType.minorsubassemblyDescription);

    GetMinorSubAssemblyType.MinorSubAssemblyDescription(
     [out] String* CFactory.minorsubassemblyType.minorsubassemblyDescription);


   SetMinorSubAssemblyType.MinorSubAssemblyCode(
     [in] String CFactory.minorsubassemblyType.minorsubassemblyCode);

    GetMinorSubAssemblyType.MinorSubAssemblyCode(
     [out] String* CFactory.minorsubassemblyType.minorsubassemblyCode);


   SetMinorSubAssemblyType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.minorsubassemblyType.corrosiveness);

    GetMinorSubAssemblyType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.minorsubassemblyType.corrosiveness);


   SetMinorSubAssemblyType.Toxicity(
     [in] CHelper.toxicity CFactory.minorsubassemblyType.toxicity);

    GetMinorSubAssemblyType.Toxicity(
     [out] CHelper.toxicity* CFactory.minorsubassemblyType.toxicity);


   SetMinorSubAssemblyType.Fragility(
     [in] CHelper.fragility CFactory.minorsubassemblyType.fragility);

    GetMinorSubAssemblyType.Fragility(
     [out] CHelper.fragility* CFactory.minorsubassemblyType.fragility);


   SetMinorSubAssemblyType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.minorsubassemblyType.PhysicalStateWhenIdle);

    GetMinorSubAssemblyType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.minorsubassemblyType.PhysicalStateWhenIdle);


   SetMinorSubAssemblyType.RemainingNum(
     [in] Int32 CFactory.minorsubassemblyType.remainingNum);

    GetMinorSubAssemblyType.RemainingNum(
     [out] Int32* CFactory.minorsubassemblyType.remainingNum);


   SetMinorSubAssemblyType.MinorSubAssemblyReorderSetPoint(
     [in] Int32 CFactory.minorsubassemblyType.minorsubassemblyReorderSetPoint);

    GetMinorSubAssemblyType.MinorSubAssemblyReorderSetPoint(
     [out] Int32* CFactory.minorsubassemblyType.minorsubassemblyReorderSetPoint);


   SetMinorSubAssemblyType.MinorSubAssemblyReorderCode(
     [in] String CFactory.minorsubassemblyType.minorsubassemblyReorderCode);

    GetMinorSubAssemblyType.MinorSubAssemblyReorderCode(
     [out] String* CFactory.minorsubassemblyType.minorsubassemblyReorderCode);


   SetMinorSubAssemblyType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.minorsubassemblyType.businessChannelOwnerId);

    GetMinorSubAssemblyType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.minorsubassemblyType.businessChannelOwnerId);


   SetMinorSubAssemblyType.ItemTypeId(
     [in] CAdministration.itemType CFactory.minorsubassemblyType.itemTypeId);

    GetMinorSubAssemblyType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.minorsubassemblyType.itemTypeId);


   SetMinorSubAssemblyType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.minorsubassemblyType.supplierIds);

    GetMinorSubAssemblyType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.minorsubassemblyType.supplierIds);


   SetMinorSubAssemblyType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.minorsubassemblyType.materialTypeIds);

    GetMinorSubAssemblyType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.minorsubassemblyType.materialTypeIds);


   SetMinorSubAssemblyType.PartTypeIds(
     [in] ArrayOf<CFactory.partType> CFactory.minorsubassemblyType.partTypeIds);

    GetMinorSubAssemblyType.PartTypeIds(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.minorsubassemblyType.partTypeIds);


   SetMinorSubAssemblyType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.minorsubassemblyType.subassemblyTypeIds);

    GetMinorSubAssemblyType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.minorsubassemblyType.subassemblyTypeIds);


   SetMinorSubAssemblyType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.minorsubassemblyType.majorsubassemblyTypeIds);

    GetMinorSubAssemblyType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.minorsubassemblyType.majorsubassemblyTypeIds);


   SetMinorSubAssemblyType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.minorsubassemblyType.lesserassemblyTypeIds);

    GetMinorSubAssemblyType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.minorsubassemblyType.lesserassemblyTypeIds);


   SetMinorSubAssemblyType.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CFactory.minorsubassemblyType.assemblyTypeIds);

    GetMinorSubAssemblyType.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CFactory.minorsubassemblyType.assemblyTypeIds);


   SetMinorSubAssemblyType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.minorsubassemblyType.greaterassemblyTypeIds);

    GetMinorSubAssemblyType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.minorsubassemblyType.greaterassemblyTypeIds);


   SetMinorSubAssemblyType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.minorsubassemblyType.productTypeIds);

    GetMinorSubAssemblyType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.minorsubassemblyType.productTypeIds);


   SetMinorSubAssemblyType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.minorsubassemblyType.docRefIds);

    GetMinorSubAssemblyType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.minorsubassemblyType.docRefIds);


   SetMinorSubAssemblyType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.minorsubassemblyType.imageRefIds);

    GetMinorSubAssemblyType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.minorsubassemblyType.imageRefIds);


   SetMinorSubAssemblyType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.minorsubassemblyType.videoRefIds);

    GetMinorSubAssemblyType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.minorsubassemblyType.videoRefIds);


   SetSubAssembly.SubAssyId(
     [in] String CFactory.subassembly.subAssyId);

    GetSubAssembly.SubAssyId(
     [out] String* CFactory.subassembly.subAssyId);


   SetSubAssembly.Hazardous(
     [in] Boolean CFactory.subassembly.hazardous);

    GetSubAssembly.Hazardous(
     [out] Boolean* CFactory.subassembly.hazardous);


   SetSubAssembly.SubAssemblyName(
     [in] String CFactory.subassembly.subassemblyName);

    GetSubAssembly.SubAssemblyName(
     [out] String* CFactory.subassembly.subassemblyName);


   SetSubAssembly.SubAssemblyDescription(
     [in] String CFactory.subassembly.subassemblyDescription);

    GetSubAssembly.SubAssemblyDescription(
     [out] String* CFactory.subassembly.subassemblyDescription);


   SetSubAssembly.QCCheckedPassed(
     [in] Boolean CFactory.subassembly.qCCheckedPassed);

    GetSubAssembly.QCCheckedPassed(
     [out] Boolean* CFactory.subassembly.qCCheckedPassed);


   SetSubAssembly.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.subassembly.materialIds);

    GetSubAssembly.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.subassembly.materialIds);


   SetSubAssembly.PartIds(
     [in] ArrayOf<CFactory.part> CFactory.subassembly.partIds);

    GetSubAssembly.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CFactory.subassembly.partIds);


   SetSubAssembly.MinorSubAssemblyIds(
     [in] ArrayOf<CFactory.minorsubassembly> CFactory.subassembly.minorsubassemblyIds);

    GetSubAssembly.MinorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.minorsubassembly>* CFactory.subassembly.minorsubassemblyIds);


   SetSubAssembly.MajorSubAssemblyId(
     [in] CFactory.majorsubassembly CFactory.subassembly.majorsubassemblyId);

    GetSubAssembly.MajorSubAssemblyId(
     [out] CFactory.majorsubassembly* CFactory.subassembly.majorsubassemblyId);


   SetSubAssembly.LesserAssemblyId(
     [in] CFactory.lesserassembly CFactory.subassembly.lesserassemblyId);

    GetSubAssembly.LesserAssemblyId(
     [out] CFactory.lesserassembly* CFactory.subassembly.lesserassemblyId);


   SetSubAssembly.AssemblyId(
     [in] CFactory.assembly CFactory.subassembly.assemblyId);

    GetSubAssembly.AssemblyId(
     [out] CFactory.assembly* CFactory.subassembly.assemblyId);


   SetSubAssembly.GreaterAssemblyId(
     [in] CFactory.greaterassembly CFactory.subassembly.greaterassemblyId);

    GetSubAssembly.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CFactory.subassembly.greaterassemblyId);


   SetSubAssembly.ProductId(
     [in] CFactory.product CFactory.subassembly.productId);

    GetSubAssembly.ProductId(
     [out] CFactory.product* CFactory.subassembly.productId);


   SetSubAssembly.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.subassembly.businessChannelOwnerId);

    GetSubAssembly.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.subassembly.businessChannelOwnerId);


   SetSubAssembly.SubAssemblyTypeId(
     [in] CFactory.subassemblyType CFactory.subassembly.subassemblyTypeId);

    GetSubAssembly.SubAssemblyTypeId(
     [out] CFactory.subassemblyType* CFactory.subassembly.subassemblyTypeId);


   SetSubAssembly.ItemId(
     [in] CAdministration.item CFactory.subassembly.itemId);

    GetSubAssembly.ItemId(
     [out] CAdministration.item* CFactory.subassembly.itemId);


   SetSubAssembly.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.subassembly.supplierIds);

    GetSubAssembly.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.subassembly.supplierIds);


   SetSubAssembly.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.subassembly.docRefIds);

    GetSubAssembly.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.subassembly.docRefIds);


   SetSubAssembly.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.subassembly.imageRefIds);

    GetSubAssembly.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.subassembly.imageRefIds);


   SetSubAssembly.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.subassembly.videoRefIds);

    GetSubAssembly.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.subassembly.videoRefIds);


   SetSubAssemblyType.SubAssemblyTypeId(
     [in] String CFactory.subassemblyType.subassemblyTypeId);

    GetSubAssemblyType.SubAssemblyTypeId(
     [out] String* CFactory.subassemblyType.subassemblyTypeId);


   SetSubAssemblyType.SubAssemblyCode(
     [in] String CFactory.subassemblyType.subassemblyCode);

    GetSubAssemblyType.SubAssemblyCode(
     [out] String* CFactory.subassemblyType.subassemblyCode);


   SetSubAssemblyType.SubAssemblyDescription(
     [in] String CFactory.subassemblyType.subassemblyDescription);

    GetSubAssemblyType.SubAssemblyDescription(
     [out] String* CFactory.subassemblyType.subassemblyDescription);


   SetSubAssemblyType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.subassemblyType.corrosiveness);

    GetSubAssemblyType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.subassemblyType.corrosiveness);


   SetSubAssemblyType.Toxicity(
     [in] CHelper.toxicity CFactory.subassemblyType.toxicity);

    GetSubAssemblyType.Toxicity(
     [out] CHelper.toxicity* CFactory.subassemblyType.toxicity);


   SetSubAssemblyType.Fragility(
     [in] CHelper.fragility CFactory.subassemblyType.fragility);

    GetSubAssemblyType.Fragility(
     [out] CHelper.fragility* CFactory.subassemblyType.fragility);


   SetSubAssemblyType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.subassemblyType.PhysicalStateWhenIdle);

    GetSubAssemblyType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.subassemblyType.PhysicalStateWhenIdle);


   SetSubAssemblyType.RemainingNum(
     [in] Int32 CFactory.subassemblyType.remainingNum);

    GetSubAssemblyType.RemainingNum(
     [out] Int32* CFactory.subassemblyType.remainingNum);


   SetSubAssemblyType.SubAssemblyReorderSetPoint(
     [in] Int32 CFactory.subassemblyType.subassemblyReorderSetPoint);

    GetSubAssemblyType.SubAssemblyReorderSetPoint(
     [out] Int32* CFactory.subassemblyType.subassemblyReorderSetPoint);


   SetSubAssemblyType.SubAssemblyReorderCode(
     [in] String CFactory.subassemblyType.subassemblyReorderCode);

    GetSubAssemblyType.SubAssemblyReorderCode(
     [out] String* CFactory.subassemblyType.subassemblyReorderCode);


   SetSubAssemblyType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.subassemblyType.businessChannelOwnerId);

    GetSubAssemblyType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.subassemblyType.businessChannelOwnerId);


   SetSubAssemblyType.ItemTypeId(
     [in] CAdministration.itemType CFactory.subassemblyType.itemTypeId);

    GetSubAssemblyType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.subassemblyType.itemTypeId);


   SetSubAssemblyType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.subassemblyType.supplierIds);

    GetSubAssemblyType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.subassemblyType.supplierIds);


   SetSubAssemblyType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.subassemblyType.materialTypeIds);

    GetSubAssemblyType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.subassemblyType.materialTypeIds);


   SetSubAssemblyType.PartTypeId(
     [in] ArrayOf<CFactory.partType> CFactory.subassemblyType.partTypeId);

    GetSubAssemblyType.PartTypeId(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.subassemblyType.partTypeId);


   SetSubAssemblyType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.subassemblyType.minorsubassemblyTypeIds);

    GetSubAssemblyType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.subassemblyType.minorsubassemblyTypeIds);


   SetSubAssemblyType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.subassemblyType.majorsubassemblyTypeIds);

    GetSubAssemblyType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.subassemblyType.majorsubassemblyTypeIds);


   SetSubAssemblyType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.subassemblyType.lesserassemblyTypeIds);

    GetSubAssemblyType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.subassemblyType.lesserassemblyTypeIds);


   SetSubAssemblyType.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CFactory.subassemblyType.assemblyTypeIds);

    GetSubAssemblyType.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CFactory.subassemblyType.assemblyTypeIds);


   SetSubAssemblyType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.subassemblyType.greaterassemblyTypeIds);

    GetSubAssemblyType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.subassemblyType.greaterassemblyTypeIds);


   SetSubAssemblyType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.subassemblyType.productTypeIds);

    GetSubAssemblyType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.subassemblyType.productTypeIds);


   SetSubAssemblyType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.subassemblyType.docRefIds);

    GetSubAssemblyType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.subassemblyType.docRefIds);


   SetSubAssemblyType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.subassemblyType.imageRefIds);

    GetSubAssemblyType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.subassemblyType.imageRefIds);


   SetSubAssemblyType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.subassemblyType.videoRefIds);

    GetSubAssemblyType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.subassemblyType.videoRefIds);


   SetMajorSubAssembly.MajorSubAssyId(
     [in] String CFactory.majorsubassembly.majorSubAssyId);

    GetMajorSubAssembly.MajorSubAssyId(
     [out] String* CFactory.majorsubassembly.majorSubAssyId);


   SetMajorSubAssembly.Hazardous(
     [in] Boolean CFactory.majorsubassembly.hazardous);

    GetMajorSubAssembly.Hazardous(
     [out] Boolean* CFactory.majorsubassembly.hazardous);


   SetMajorSubAssembly.MajorSubAssemblyName(
     [in] String CFactory.majorsubassembly.majorsubassemblyName);

    GetMajorSubAssembly.MajorSubAssemblyName(
     [out] String* CFactory.majorsubassembly.majorsubassemblyName);


   SetMajorSubAssembly.MajorSubAssemblyDescription(
     [in] String CFactory.majorsubassembly.majorsubassemblyDescription);

    GetMajorSubAssembly.MajorSubAssemblyDescription(
     [out] String* CFactory.majorsubassembly.majorsubassemblyDescription);


   SetMajorSubAssembly.QCCheckedPassed(
     [in] Boolean CFactory.majorsubassembly.qCCheckedPassed);

    GetMajorSubAssembly.QCCheckedPassed(
     [out] Boolean* CFactory.majorsubassembly.qCCheckedPassed);


   SetMajorSubAssembly.MajorSubAssemblyCode(
     [in] String CFactory.majorsubassembly.majorsubassemblyCode);

    GetMajorSubAssembly.MajorSubAssemblyCode(
     [out] String* CFactory.majorsubassembly.majorsubassemblyCode);


   SetMajorSubAssembly.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.majorsubassembly.materialIds);

    GetMajorSubAssembly.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.majorsubassembly.materialIds);


   SetMajorSubAssembly.PartIds(
     [in] ArrayOf<CFactory.part> CFactory.majorsubassembly.partIds);

    GetMajorSubAssembly.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CFactory.majorsubassembly.partIds);


   SetMajorSubAssembly.MinorSubAssemblyIds(
     [in] ArrayOf<CFactory.minorsubassembly> CFactory.majorsubassembly.minorsubassemblyIds);

    GetMajorSubAssembly.MinorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.minorsubassembly>* CFactory.majorsubassembly.minorsubassemblyIds);


   SetMajorSubAssembly.SubAssemblyIds(
     [in] ArrayOf<CFactory.subassembly> CFactory.majorsubassembly.subassemblyIds);

    GetMajorSubAssembly.SubAssemblyIds(
     [out, callee] ArrayOf<CFactory.subassembly>* CFactory.majorsubassembly.subassemblyIds);


   SetMajorSubAssembly.LesserAssemblyId(
     [in] CFactory.lesserassembly CFactory.majorsubassembly.lesserassemblyId);

    GetMajorSubAssembly.LesserAssemblyId(
     [out] CFactory.lesserassembly* CFactory.majorsubassembly.lesserassemblyId);


   SetMajorSubAssembly.AssemblyId(
     [in] CFactory.assembly CFactory.majorsubassembly.assemblyId);

    GetMajorSubAssembly.AssemblyId(
     [out] CFactory.assembly* CFactory.majorsubassembly.assemblyId);


   SetMajorSubAssembly.GreaterAssembly(
     [in] CFactory.greaterassembly CFactory.majorsubassembly.greaterassembly);

    GetMajorSubAssembly.GreaterAssembly(
     [out] CFactory.greaterassembly* CFactory.majorsubassembly.greaterassembly);


   SetMajorSubAssembly.ProductIds(
     [in] CFactory.product CFactory.majorsubassembly.productIds);

    GetMajorSubAssembly.ProductIds(
     [out] CFactory.product* CFactory.majorsubassembly.productIds);


   SetMajorSubAssembly.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.majorsubassembly.businessChannelOwnerId);

    GetMajorSubAssembly.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.majorsubassembly.businessChannelOwnerId);


   SetMajorSubAssembly.MajorSubAssemblyTypeId(
     [in] CFactory.majorsubassemblyType CFactory.majorsubassembly.majorsubassemblyTypeId);

    GetMajorSubAssembly.MajorSubAssemblyTypeId(
     [out] CFactory.majorsubassemblyType* CFactory.majorsubassembly.majorsubassemblyTypeId);


   SetMajorSubAssembly.ItemId(
     [in] CAdministration.item CFactory.majorsubassembly.itemId);

    GetMajorSubAssembly.ItemId(
     [out] CAdministration.item* CFactory.majorsubassembly.itemId);


   SetMajorSubAssembly.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.majorsubassembly.supplierIds);

    GetMajorSubAssembly.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.majorsubassembly.supplierIds);


   SetMajorSubAssembly.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.majorsubassembly.docRefIds);

    GetMajorSubAssembly.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.majorsubassembly.docRefIds);


   SetMajorSubAssembly.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.majorsubassembly.imageRefIds);

    GetMajorSubAssembly.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.majorsubassembly.imageRefIds);


   SetMajorSubAssembly.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.majorsubassembly.videoRefIds);

    GetMajorSubAssembly.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.majorsubassembly.videoRefIds);


   SetMajorSubAssemblyType.MajorSubAssemblyTypeId(
     [in] String CFactory.majorsubassemblyType.majorsubassemblyTypeId);

    GetMajorSubAssemblyType.MajorSubAssemblyTypeId(
     [out] String* CFactory.majorsubassemblyType.majorsubassemblyTypeId);


   SetMajorSubAssemblyType.MajorSubAssemblyDescription(
     [in] String CFactory.majorsubassemblyType.majorsubassemblyDescription);

    GetMajorSubAssemblyType.MajorSubAssemblyDescription(
     [out] String* CFactory.majorsubassemblyType.majorsubassemblyDescription);


   SetMajorSubAssemblyType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.majorsubassemblyType.corrosiveness);

    GetMajorSubAssemblyType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.majorsubassemblyType.corrosiveness);


   SetMajorSubAssemblyType.Toxicity(
     [in] CHelper.toxicity CFactory.majorsubassemblyType.toxicity);

    GetMajorSubAssemblyType.Toxicity(
     [out] CHelper.toxicity* CFactory.majorsubassemblyType.toxicity);


   SetMajorSubAssemblyType.Fragility(
     [in] CHelper.fragility CFactory.majorsubassemblyType.fragility);

    GetMajorSubAssemblyType.Fragility(
     [out] CHelper.fragility* CFactory.majorsubassemblyType.fragility);


   SetMajorSubAssemblyType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.majorsubassemblyType.PhysicalStateWhenIdle);

    GetMajorSubAssemblyType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.majorsubassemblyType.PhysicalStateWhenIdle);


   SetMajorSubAssemblyType.RemainingNum(
     [in] Int32 CFactory.majorsubassemblyType.remainingNum);

    GetMajorSubAssemblyType.RemainingNum(
     [out] Int32* CFactory.majorsubassemblyType.remainingNum);


   SetMajorSubAssemblyType.MajorSubAssemblyReorderSetPoint(
     [in] Int32 CFactory.majorsubassemblyType.majorsubassemblyReorderSetPoint);

    GetMajorSubAssemblyType.MajorSubAssemblyReorderSetPoint(
     [out] Int32* CFactory.majorsubassemblyType.majorsubassemblyReorderSetPoint);


   SetMajorSubAssemblyType.MajorSubAssemblyReorderCode(
     [in] String CFactory.majorsubassemblyType.majorsubassemblyReorderCode);

    GetMajorSubAssemblyType.MajorSubAssemblyReorderCode(
     [out] String* CFactory.majorsubassemblyType.majorsubassemblyReorderCode);


   SetMajorSubAssemblyType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.majorsubassemblyType.materialTypeIds);

    GetMajorSubAssemblyType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.majorsubassemblyType.materialTypeIds);


   SetMajorSubAssemblyType.PartTypeId(
     [in] ArrayOf<CFactory.partType> CFactory.majorsubassemblyType.partTypeId);

    GetMajorSubAssemblyType.PartTypeId(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.majorsubassemblyType.partTypeId);


   SetMajorSubAssemblyType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.majorsubassemblyType.minorsubassemblyTypeIds);

    GetMajorSubAssemblyType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.majorsubassemblyType.minorsubassemblyTypeIds);


   SetMajorSubAssemblyType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.majorsubassemblyType.subassemblyTypeIds);

    GetMajorSubAssemblyType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.majorsubassemblyType.subassemblyTypeIds);


   SetMajorSubAssemblyType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.majorsubassemblyType.lesserassemblyTypeIds);

    GetMajorSubAssemblyType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.majorsubassemblyType.lesserassemblyTypeIds);


   SetMajorSubAssemblyType.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CFactory.majorsubassemblyType.assemblyTypeIds);

    GetMajorSubAssemblyType.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CFactory.majorsubassemblyType.assemblyTypeIds);


   SetMajorSubAssemblyType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.majorsubassemblyType.greaterassemblyTypeIds);

    GetMajorSubAssemblyType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.majorsubassemblyType.greaterassemblyTypeIds);


   SetMajorSubAssemblyType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.majorsubassemblyType.productTypeIds);

    GetMajorSubAssemblyType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.majorsubassemblyType.productTypeIds);


   SetMajorSubAssemblyType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.majorsubassemblyType.businessChannelOwnerId);

    GetMajorSubAssemblyType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.majorsubassemblyType.businessChannelOwnerId);


   SetMajorSubAssemblyType.ItemTypeId(
     [in] CAdministration.itemType CFactory.majorsubassemblyType.itemTypeId);

    GetMajorSubAssemblyType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.majorsubassemblyType.itemTypeId);


   SetMajorSubAssemblyType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.majorsubassemblyType.supplierIds);

    GetMajorSubAssemblyType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.majorsubassemblyType.supplierIds);


   SetMajorSubAssemblyType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.majorsubassemblyType.docRefIds);

    GetMajorSubAssemblyType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.majorsubassemblyType.docRefIds);


   SetMajorSubAssemblyType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.majorsubassemblyType.imageRefIds);

    GetMajorSubAssemblyType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.majorsubassemblyType.imageRefIds);


   SetMajorSubAssemblyType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.majorsubassemblyType.videoRefIds);

    GetMajorSubAssemblyType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.majorsubassemblyType.videoRefIds);


   SetLesserAssembly.LesserAssyId(
     [in] String CFactory.lesserassembly.lesserAssyId);

    GetLesserAssembly.LesserAssyId(
     [out] String* CFactory.lesserassembly.lesserAssyId);


   SetLesserAssembly.Hazardous(
     [in] Boolean CFactory.lesserassembly.hazardous);

    GetLesserAssembly.Hazardous(
     [out] Boolean* CFactory.lesserassembly.hazardous);


   SetLesserAssembly.LesserAssemblyName(
     [in] String CFactory.lesserassembly.lesserassemblyName);

    GetLesserAssembly.LesserAssemblyName(
     [out] String* CFactory.lesserassembly.lesserassemblyName);


   SetLesserAssembly.LesserAssemblyDescription(
     [in] String CFactory.lesserassembly.lesserassemblyDescription);

    GetLesserAssembly.LesserAssemblyDescription(
     [out] String* CFactory.lesserassembly.lesserassemblyDescription);


   SetLesserAssembly.QCCheckedPassed(
     [in] Boolean CFactory.lesserassembly.qCCheckedPassed);

    GetLesserAssembly.QCCheckedPassed(
     [out] Boolean* CFactory.lesserassembly.qCCheckedPassed);


   SetLesserAssembly.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.lesserassembly.materialIds);

    GetLesserAssembly.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.lesserassembly.materialIds);


   SetLesserAssembly.PartIds(
     [in] ArrayOf<CFactory.part> CFactory.lesserassembly.partIds);

    GetLesserAssembly.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CFactory.lesserassembly.partIds);


   SetLesserAssembly.MinorSubAssemblyIds(
     [in] ArrayOf<CFactory.minorsubassembly> CFactory.lesserassembly.minorsubassemblyIds);

    GetLesserAssembly.MinorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.minorsubassembly>* CFactory.lesserassembly.minorsubassemblyIds);


   SetLesserAssembly.SubAssemblyIds(
     [in] ArrayOf<CFactory.subassembly> CFactory.lesserassembly.subassemblyIds);

    GetLesserAssembly.SubAssemblyIds(
     [out, callee] ArrayOf<CFactory.subassembly>* CFactory.lesserassembly.subassemblyIds);


   SetLesserAssembly.MajorSubAssemblyIds(
     [in] ArrayOf<CFactory.majorsubassembly> CFactory.lesserassembly.majorsubassemblyIds);

    GetLesserAssembly.MajorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.majorsubassembly>* CFactory.lesserassembly.majorsubassemblyIds);


   SetLesserAssembly.AssemblyId(
     [in] CFactory.assembly CFactory.lesserassembly.assemblyId);

    GetLesserAssembly.AssemblyId(
     [out] CFactory.assembly* CFactory.lesserassembly.assemblyId);


   SetLesserAssembly.GreaterAssemblyId(
     [in] CFactory.greaterassembly CFactory.lesserassembly.greaterassemblyId);

    GetLesserAssembly.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CFactory.lesserassembly.greaterassemblyId);


   SetLesserAssembly.LesserAssemblyTypeId(
     [in] CFactory.lesserassemblyType CFactory.lesserassembly.lesserassemblyTypeId);

    GetLesserAssembly.LesserAssemblyTypeId(
     [out] CFactory.lesserassemblyType* CFactory.lesserassembly.lesserassemblyTypeId);


   SetLesserAssembly.ProductId(
     [in] CFactory.product CFactory.lesserassembly.productId);

    GetLesserAssembly.ProductId(
     [out] CFactory.product* CFactory.lesserassembly.productId);


   SetLesserAssembly.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.lesserassembly.businessChannelOwnerId);

    GetLesserAssembly.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.lesserassembly.businessChannelOwnerId);


   SetLesserAssembly.ItemId(
     [in] CAdministration.item CFactory.lesserassembly.itemId);

    GetLesserAssembly.ItemId(
     [out] CAdministration.item* CFactory.lesserassembly.itemId);


   SetLesserAssembly.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.lesserassembly.supplierIds);

    GetLesserAssembly.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.lesserassembly.supplierIds);


   SetLesserAssembly.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.lesserassembly.docRefIds);

    GetLesserAssembly.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.lesserassembly.docRefIds);


   SetLesserAssembly.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.lesserassembly.imageRefIds);

    GetLesserAssembly.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.lesserassembly.imageRefIds);


   SetLesserAssembly.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.lesserassembly.videoRefIds);

    GetLesserAssembly.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.lesserassembly.videoRefIds);


   SetLesserAssemblyType.LesserAssemblyTypeId(
     [in] String CFactory.lesserassemblyType.lesserassemblyTypeId);

    GetLesserAssemblyType.LesserAssemblyTypeId(
     [out] String* CFactory.lesserassemblyType.lesserassemblyTypeId);


   SetLesserAssemblyType.LesseAssemblyDescription(
     [in] String CFactory.lesserassemblyType.lesseAssemblyDescription);

    GetLesserAssemblyType.LesseAssemblyDescription(
     [out] String* CFactory.lesserassemblyType.lesseAssemblyDescription);


   SetLesserAssemblyType.LesserAssemblyCode(
     [in] String CFactory.lesserassemblyType.lesserassemblyCode);

    GetLesserAssemblyType.LesserAssemblyCode(
     [out] String* CFactory.lesserassemblyType.lesserassemblyCode);


   SetLesserAssemblyType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.lesserassemblyType.corrosiveness);

    GetLesserAssemblyType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.lesserassemblyType.corrosiveness);


   SetLesserAssemblyType.Toxicity(
     [in] CHelper.toxicity CFactory.lesserassemblyType.toxicity);

    GetLesserAssemblyType.Toxicity(
     [out] CHelper.toxicity* CFactory.lesserassemblyType.toxicity);


   SetLesserAssemblyType.Fragility(
     [in] CHelper.fragility CFactory.lesserassemblyType.fragility);

    GetLesserAssemblyType.Fragility(
     [out] CHelper.fragility* CFactory.lesserassemblyType.fragility);


   SetLesserAssemblyType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.lesserassemblyType.PhysicalStateWhenIdle);

    GetLesserAssemblyType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.lesserassemblyType.PhysicalStateWhenIdle);


   SetLesserAssemblyType.RemainingNum(
     [in] Int32 CFactory.lesserassemblyType.remainingNum);

    GetLesserAssemblyType.RemainingNum(
     [out] Int32* CFactory.lesserassemblyType.remainingNum);


   SetLesserAssemblyType.LesserAssemblyReorderSetPoint(
     [in] Int32 CFactory.lesserassemblyType.lesserassemblyReorderSetPoint);

    GetLesserAssemblyType.LesserAssemblyReorderSetPoint(
     [out] Int32* CFactory.lesserassemblyType.lesserassemblyReorderSetPoint);


   SetLesserAssemblyType.LesserAssemblyReorderCode(
     [in] String CFactory.lesserassemblyType.lesserassemblyReorderCode);

    GetLesserAssemblyType.LesserAssemblyReorderCode(
     [out] String* CFactory.lesserassemblyType.lesserassemblyReorderCode);


   SetLesserAssemblyType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.lesserassemblyType.materialTypeIds);

    GetLesserAssemblyType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.lesserassemblyType.materialTypeIds);


   SetLesserAssemblyType.PartTypeId(
     [in] ArrayOf<CFactory.partType> CFactory.lesserassemblyType.partTypeId);

    GetLesserAssemblyType.PartTypeId(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.lesserassemblyType.partTypeId);


   SetLesserAssemblyType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.lesserassemblyType.minorsubassemblyTypeIds);

    GetLesserAssemblyType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.lesserassemblyType.minorsubassemblyTypeIds);


   SetLesserAssemblyType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.lesserassemblyType.subassemblyTypeIds);

    GetLesserAssemblyType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.lesserassemblyType.subassemblyTypeIds);


   SetLesserAssemblyType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.lesserassemblyType.majorsubassemblyTypeIds);

    GetLesserAssemblyType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.lesserassemblyType.majorsubassemblyTypeIds);


   SetLesserAssemblyType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.lesserassemblyType.lesserassemblyTypeIds);

    GetLesserAssemblyType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.lesserassemblyType.lesserassemblyTypeIds);


   SetLesserAssemblyType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.lesserassemblyType.greaterassemblyTypeIds);

    GetLesserAssemblyType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.lesserassemblyType.greaterassemblyTypeIds);


   SetLesserAssemblyType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.lesserassemblyType.productTypeIds);

    GetLesserAssemblyType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.lesserassemblyType.productTypeIds);


   SetLesserAssemblyType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.lesserassemblyType.businessChannelOwnerId);

    GetLesserAssemblyType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.lesserassemblyType.businessChannelOwnerId);


   SetLesserAssemblyType.ItemTypeId(
     [in] CAdministration.itemType CFactory.lesserassemblyType.itemTypeId);

    GetLesserAssemblyType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.lesserassemblyType.itemTypeId);


   SetLesserAssemblyType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.lesserassemblyType.supplierIds);

    GetLesserAssemblyType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.lesserassemblyType.supplierIds);


   SetLesserAssemblyType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.lesserassemblyType.docRefIds);

    GetLesserAssemblyType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.lesserassemblyType.docRefIds);


   SetLesserAssemblyType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.lesserassemblyType.imageRefIds);

    GetLesserAssemblyType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.lesserassemblyType.imageRefIds);


   SetLesserAssemblyType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.lesserassemblyType.videoRefIds);

    GetLesserAssemblyType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.lesserassemblyType.videoRefIds);


   SetAssembly.AssyId(
     [in] String CFactory.assembly.assyId);

    GetAssembly.AssyId(
     [out] String* CFactory.assembly.assyId);


   SetAssembly.Hazardous(
     [in] Boolean CFactory.assembly.hazardous);

    GetAssembly.Hazardous(
     [out] Boolean* CFactory.assembly.hazardous);


   SetAssembly.AssemblyName(
     [in] String CFactory.assembly.assemblyName);

    GetAssembly.AssemblyName(
     [out] String* CFactory.assembly.assemblyName);


   SetAssembly.AssemblyDescription(
     [in] String CFactory.assembly.assemblyDescription);

    GetAssembly.AssemblyDescription(
     [out] String* CFactory.assembly.assemblyDescription);


   SetAssembly.QCCheckedPassed(
     [in] Boolean CFactory.assembly.qCCheckedPassed);

    GetAssembly.QCCheckedPassed(
     [out] Boolean* CFactory.assembly.qCCheckedPassed);


   SetAssembly.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.assembly.materialIds);

    GetAssembly.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.assembly.materialIds);


   SetAssembly.PartIds(
     [in] ArrayOf<CFactory.part> CFactory.assembly.partIds);

    GetAssembly.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CFactory.assembly.partIds);


   SetAssembly.MinorSubAssemblyIds(
     [in] ArrayOf<CFactory.minorsubassembly> CFactory.assembly.minorsubassemblyIds);

    GetAssembly.MinorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.minorsubassembly>* CFactory.assembly.minorsubassemblyIds);


   SetAssembly.SubAssemblyIds(
     [in] ArrayOf<CFactory.subassembly> CFactory.assembly.subassemblyIds);

    GetAssembly.SubAssemblyIds(
     [out, callee] ArrayOf<CFactory.subassembly>* CFactory.assembly.subassemblyIds);


   SetAssembly.MajorSubAssemblyIds(
     [in] ArrayOf<CFactory.majorsubassembly> CFactory.assembly.majorsubassemblyIds);

    GetAssembly.MajorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.majorsubassembly>* CFactory.assembly.majorsubassemblyIds);


   SetAssembly.LesserAssemblyIds(
     [in] ArrayOf<CFactory.lesserassembly> CFactory.assembly.lesserassemblyIds);

    GetAssembly.LesserAssemblyIds(
     [out, callee] ArrayOf<CFactory.lesserassembly>* CFactory.assembly.lesserassemblyIds);


   SetAssembly.AssemblyTypeId(
     [in] CFactory.assemblyType CFactory.assembly.assemblyTypeId);

    GetAssembly.AssemblyTypeId(
     [out] CFactory.assemblyType* CFactory.assembly.assemblyTypeId);


   SetAssembly.GreaterAssemblyId(
     [in] CFactory.greaterassembly CFactory.assembly.greaterassemblyId);

    GetAssembly.GreaterAssemblyId(
     [out] CFactory.greaterassembly* CFactory.assembly.greaterassemblyId);


   SetAssembly.ProductId(
     [in] CFactory.product CFactory.assembly.productId);

    GetAssembly.ProductId(
     [out] CFactory.product* CFactory.assembly.productId);


   SetAssembly.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.assembly.businessChannelOwnerId);

    GetAssembly.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.assembly.businessChannelOwnerId);


   SetAssembly.ItemId(
     [in] CAdministration.item CFactory.assembly.itemId);

    GetAssembly.ItemId(
     [out] CAdministration.item* CFactory.assembly.itemId);


   SetAssembly.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.assembly.supplierIds);

    GetAssembly.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.assembly.supplierIds);


   SetAssembly.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.assembly.docRefIds);

    GetAssembly.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.assembly.docRefIds);


   SetAssembly.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.assembly.imageRefIds);

    GetAssembly.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.assembly.imageRefIds);


   SetAssembly.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.assembly.videoRefIds);

    GetAssembly.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.assembly.videoRefIds);


   SetAssemblyType.AssemblyTypeId(
     [in] String CFactory.assemblyType.assemblyTypeId);

    GetAssemblyType.AssemblyTypeId(
     [out] String* CFactory.assemblyType.assemblyTypeId);


   SetAssemblyType.AssemblyDescription(
     [in] String CFactory.assemblyType.assemblyDescription);

    GetAssemblyType.AssemblyDescription(
     [out] String* CFactory.assemblyType.assemblyDescription);


   SetAssemblyType.AssemblyCode(
     [in] String CFactory.assemblyType.assemblyCode);

    GetAssemblyType.AssemblyCode(
     [out] String* CFactory.assemblyType.assemblyCode);


   SetAssemblyType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.assemblyType.corrosiveness);

    GetAssemblyType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.assemblyType.corrosiveness);


   SetAssemblyType.Toxicity(
     [in] CHelper.toxicity CFactory.assemblyType.toxicity);

    GetAssemblyType.Toxicity(
     [out] CHelper.toxicity* CFactory.assemblyType.toxicity);


   SetAssemblyType.Fragility(
     [in] CHelper.fragility CFactory.assemblyType.fragility);

    GetAssemblyType.Fragility(
     [out] CHelper.fragility* CFactory.assemblyType.fragility);


   SetAssemblyType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.assemblyType.PhysicalStateWhenIdle);

    GetAssemblyType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.assemblyType.PhysicalStateWhenIdle);


   SetAssemblyType.RemainingNum(
     [in] Int32 CFactory.assemblyType.remainingNum);

    GetAssemblyType.RemainingNum(
     [out] Int32* CFactory.assemblyType.remainingNum);


   SetAssemblyType.AssemblyReorderSetPoint(
     [in] Int32 CFactory.assemblyType.assemblyReorderSetPoint);

    GetAssemblyType.AssemblyReorderSetPoint(
     [out] Int32* CFactory.assemblyType.assemblyReorderSetPoint);


   SetAssemblyType.AssemblyReorderCode(
     [in] String CFactory.assemblyType.assemblyReorderCode);

    GetAssemblyType.AssemblyReorderCode(
     [out] String* CFactory.assemblyType.assemblyReorderCode);


   SetAssemblyType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.assemblyType.materialTypeIds);

    GetAssemblyType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.assemblyType.materialTypeIds);


   SetAssemblyType.PartTypeId(
     [in] ArrayOf<CFactory.partType> CFactory.assemblyType.partTypeId);

    GetAssemblyType.PartTypeId(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.assemblyType.partTypeId);


   SetAssemblyType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.assemblyType.minorsubassemblyTypeIds);

    GetAssemblyType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.assemblyType.minorsubassemblyTypeIds);


   SetAssemblyType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.assemblyType.subassemblyTypeIds);

    GetAssemblyType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.assemblyType.subassemblyTypeIds);


   SetAssemblyType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.assemblyType.majorsubassemblyTypeIds);

    GetAssemblyType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.assemblyType.majorsubassemblyTypeIds);


   SetAssemblyType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.assemblyType.lesserassemblyTypeIds);

    GetAssemblyType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.assemblyType.lesserassemblyTypeIds);


   SetAssemblyType.GreaterAssemblyTypeIds(
     [in] ArrayOf<CFactory.greaterassemblyType> CFactory.assemblyType.greaterassemblyTypeIds);

    GetAssemblyType.GreaterAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.greaterassemblyType>* CFactory.assemblyType.greaterassemblyTypeIds);


   SetAssemblyType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.assemblyType.productTypeIds);

    GetAssemblyType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.assemblyType.productTypeIds);


   SetAssemblyType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.assemblyType.businessChannelOwnerId);

    GetAssemblyType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.assemblyType.businessChannelOwnerId);


   SetAssemblyType.ItemTypeId(
     [in] CAdministration.itemType CFactory.assemblyType.itemTypeId);

    GetAssemblyType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.assemblyType.itemTypeId);


   SetAssemblyType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.assemblyType.supplierIds);

    GetAssemblyType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.assemblyType.supplierIds);


   SetAssemblyType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.assemblyType.docRefIds);

    GetAssemblyType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.assemblyType.docRefIds);


   SetAssemblyType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.assemblyType.imageRefIds);

    GetAssemblyType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.assemblyType.imageRefIds);


   SetAssemblyType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.assemblyType.videoRefIds);

    GetAssemblyType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.assemblyType.videoRefIds);


   SetGreaterAssembly.GreaterAssyId(
     [in] String CFactory.greaterassembly.greaterAssyId);

    GetGreaterAssembly.GreaterAssyId(
     [out] String* CFactory.greaterassembly.greaterAssyId);


   SetGreaterAssembly.Hazardous(
     [in] Boolean CFactory.greaterassembly.hazardous);

    GetGreaterAssembly.Hazardous(
     [out] Boolean* CFactory.greaterassembly.hazardous);


   SetGreaterAssembly.GreaterAssemblyName(
     [in] String CFactory.greaterassembly.greaterassemblyName);

    GetGreaterAssembly.GreaterAssemblyName(
     [out] String* CFactory.greaterassembly.greaterassemblyName);


   SetGreaterAssembly.GreaterAssemblyDescription(
     [in] String CFactory.greaterassembly.greaterassemblyDescription);

    GetGreaterAssembly.GreaterAssemblyDescription(
     [out] String* CFactory.greaterassembly.greaterassemblyDescription);


   SetGreaterAssembly.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.greaterassembly.PhysicalStateWhenIdle);

    GetGreaterAssembly.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.greaterassembly.PhysicalStateWhenIdle);


   SetGreaterAssembly.QCCheckedPassed(
     [in] Boolean CFactory.greaterassembly.qCCheckedPassed);

    GetGreaterAssembly.QCCheckedPassed(
     [out] Boolean* CFactory.greaterassembly.qCCheckedPassed);


   SetGreaterAssembly.GreaterAssemblyCode(
     [in] String CFactory.greaterassembly.greaterassemblyCode);

    GetGreaterAssembly.GreaterAssemblyCode(
     [out] String* CFactory.greaterassembly.greaterassemblyCode);


   SetGreaterAssembly.GreaterAssemblyReorderCode(
     [in] String CFactory.greaterassembly.greaterassemblyReorderCode);

    GetGreaterAssembly.GreaterAssemblyReorderCode(
     [out] String* CFactory.greaterassembly.greaterassemblyReorderCode);


   SetGreaterAssembly.GreaterAssemblyReorderSetPoint(
     [in] Int32 CFactory.greaterassembly.greaterassemblyReorderSetPoint);

    GetGreaterAssembly.GreaterAssemblyReorderSetPoint(
     [out] Int32* CFactory.greaterassembly.greaterassemblyReorderSetPoint);


   SetGreaterAssembly.MaterialIds(
     [in] ArrayOf<CFactory.material> CFactory.greaterassembly.materialIds);

    GetGreaterAssembly.MaterialIds(
     [out, callee] ArrayOf<CFactory.material>* CFactory.greaterassembly.materialIds);


   SetGreaterAssembly.PartIds(
     [in] ArrayOf<CFactory.part> CFactory.greaterassembly.partIds);

    GetGreaterAssembly.PartIds(
     [out, callee] ArrayOf<CFactory.part>* CFactory.greaterassembly.partIds);


   SetGreaterAssembly.MinorSubAssemblyIds(
     [in] ArrayOf<CFactory.minorsubassembly> CFactory.greaterassembly.minorsubassemblyIds);

    GetGreaterAssembly.MinorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.minorsubassembly>* CFactory.greaterassembly.minorsubassemblyIds);


   SetGreaterAssembly.SubAssemblyIds(
     [in] ArrayOf<CFactory.subassembly> CFactory.greaterassembly.subassemblyIds);

    GetGreaterAssembly.SubAssemblyIds(
     [out, callee] ArrayOf<CFactory.subassembly>* CFactory.greaterassembly.subassemblyIds);


   SetGreaterAssembly.MajorSubAssemblyIds(
     [in] ArrayOf<CFactory.majorsubassembly> CFactory.greaterassembly.majorsubassemblyIds);

    GetGreaterAssembly.MajorSubAssemblyIds(
     [out, callee] ArrayOf<CFactory.majorsubassembly>* CFactory.greaterassembly.majorsubassemblyIds);


   SetGreaterAssembly.LesserAssemblyIds(
     [in] ArrayOf<CFactory.lesserassembly> CFactory.greaterassembly.lesserassemblyIds);

    GetGreaterAssembly.LesserAssemblyIds(
     [out, callee] ArrayOf<CFactory.lesserassembly>* CFactory.greaterassembly.lesserassemblyIds);


   SetGreaterAssembly.AssemblyIds(
     [in] ArrayOf<CFactory.assembly> CFactory.greaterassembly.assemblyIds);

    GetGreaterAssembly.AssemblyIds(
     [out, callee] ArrayOf<CFactory.assembly>* CFactory.greaterassembly.assemblyIds);


   SetGreaterAssembly.GreaterAssemblyTypeId(
     [in] CFactory.greaterassemblyType CFactory.greaterassembly.greaterassemblyTypeId);

    GetGreaterAssembly.GreaterAssemblyTypeId(
     [out] CFactory.greaterassemblyType* CFactory.greaterassembly.greaterassemblyTypeId);


   SetGreaterAssembly.ProductId(
     [in] CFactory.product CFactory.greaterassembly.productId);

    GetGreaterAssembly.ProductId(
     [out] CFactory.product* CFactory.greaterassembly.productId);


   SetGreaterAssembly.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.greaterassembly.businessChannelOwnerId);

    GetGreaterAssembly.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.greaterassembly.businessChannelOwnerId);


   SetGreaterAssembly.ItemId(
     [in] CAdministration.item CFactory.greaterassembly.itemId);

    GetGreaterAssembly.ItemId(
     [out] CAdministration.item* CFactory.greaterassembly.itemId);


   SetGreaterAssembly.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.greaterassembly.supplierIds);

    GetGreaterAssembly.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.greaterassembly.supplierIds);


   SetGreaterAssembly.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.greaterassembly.docRefIds);

    GetGreaterAssembly.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.greaterassembly.docRefIds);


   SetGreaterAssembly.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.greaterassembly.imageRefIds);

    GetGreaterAssembly.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.greaterassembly.imageRefIds);


   SetGreaterAssembly.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.greaterassembly.videoRefIds);

    GetGreaterAssembly.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.greaterassembly.videoRefIds);


   SetGreaterAssemblyType.GreaterAssemblyTypeId(
     [in] String CFactory.greaterassemblyType.greaterassemblyTypeId);

    GetGreaterAssemblyType.GreaterAssemblyTypeId(
     [out] String* CFactory.greaterassemblyType.greaterassemblyTypeId);


   SetGreaterAssemblyType.GreaterAssemblyDescription(
     [in] String CFactory.greaterassemblyType.greaterassemblyDescription);

    GetGreaterAssemblyType.GreaterAssemblyDescription(
     [out] String* CFactory.greaterassemblyType.greaterassemblyDescription);


   SetGreaterAssemblyType.GreaterAssemblyCode(
     [in] String CFactory.greaterassemblyType.greaterassemblyCode);

    GetGreaterAssemblyType.GreaterAssemblyCode(
     [out] String* CFactory.greaterassemblyType.greaterassemblyCode);


   SetGreaterAssemblyType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.greaterassemblyType.corrosiveness);

    GetGreaterAssemblyType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.greaterassemblyType.corrosiveness);


   SetGreaterAssemblyType.Toxicity(
     [in] CHelper.toxicity CFactory.greaterassemblyType.toxicity);

    GetGreaterAssemblyType.Toxicity(
     [out] CHelper.toxicity* CFactory.greaterassemblyType.toxicity);


   SetGreaterAssemblyType.Fragility(
     [in] CHelper.fragility CFactory.greaterassemblyType.fragility);

    GetGreaterAssemblyType.Fragility(
     [out] CHelper.fragility* CFactory.greaterassemblyType.fragility);


   SetGreaterAssemblyType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.greaterassemblyType.PhysicalStateWhenIdle);

    GetGreaterAssemblyType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.greaterassemblyType.PhysicalStateWhenIdle);


   SetGreaterAssemblyType.RemainingNum(
     [in] Int32 CFactory.greaterassemblyType.remainingNum);

    GetGreaterAssemblyType.RemainingNum(
     [out] Int32* CFactory.greaterassemblyType.remainingNum);


   SetGreaterAssemblyType.GreaterAssemblyReorderSetPoint(
     [in] Int32 CFactory.greaterassemblyType.greaterassemblyReorderSetPoint);

    GetGreaterAssemblyType.GreaterAssemblyReorderSetPoint(
     [out] Int32* CFactory.greaterassemblyType.greaterassemblyReorderSetPoint);


   SetGreaterAssemblyType.GreaterAssemblyReorderCode(
     [in] String CFactory.greaterassemblyType.greaterassemblyReorderCode);

    GetGreaterAssemblyType.GreaterAssemblyReorderCode(
     [out] String* CFactory.greaterassemblyType.greaterassemblyReorderCode);


   SetGreaterAssemblyType.MaterialTypeIds(
     [in] ArrayOf<CFactory.materialType> CFactory.greaterassemblyType.materialTypeIds);

    GetGreaterAssemblyType.MaterialTypeIds(
     [out, callee] ArrayOf<CFactory.materialType>* CFactory.greaterassemblyType.materialTypeIds);


   SetGreaterAssemblyType.PartTypeId(
     [in] ArrayOf<CFactory.partType> CFactory.greaterassemblyType.partTypeId);

    GetGreaterAssemblyType.PartTypeId(
     [out, callee] ArrayOf<CFactory.partType>* CFactory.greaterassemblyType.partTypeId);


   SetGreaterAssemblyType.MinorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.minorsubassemblyType> CFactory.greaterassemblyType.minorsubassemblyTypeIds);

    GetGreaterAssemblyType.MinorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.minorsubassemblyType>* CFactory.greaterassemblyType.minorsubassemblyTypeIds);


   SetGreaterAssemblyType.SubAssemblyTypeIds(
     [in] ArrayOf<CFactory.subassemblyType> CFactory.greaterassemblyType.subassemblyTypeIds);

    GetGreaterAssemblyType.SubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.subassemblyType>* CFactory.greaterassemblyType.subassemblyTypeIds);


   SetGreaterAssemblyType.MajorSubAssemblyTypeIds(
     [in] ArrayOf<CFactory.majorsubassemblyType> CFactory.greaterassemblyType.majorsubassemblyTypeIds);

    GetGreaterAssemblyType.MajorSubAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.majorsubassemblyType>* CFactory.greaterassemblyType.majorsubassemblyTypeIds);


   SetGreaterAssemblyType.LesserAssemblyTypeIds(
     [in] ArrayOf<CFactory.lesserassemblyType> CFactory.greaterassemblyType.lesserassemblyTypeIds);

    GetGreaterAssemblyType.LesserAssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.lesserassemblyType>* CFactory.greaterassemblyType.lesserassemblyTypeIds);


   SetGreaterAssemblyType.AssemblyTypeIds(
     [in] ArrayOf<CFactory.assemblyType> CFactory.greaterassemblyType.assemblyTypeIds);

    GetGreaterAssemblyType.AssemblyTypeIds(
     [out, callee] ArrayOf<CFactory.assemblyType>* CFactory.greaterassemblyType.assemblyTypeIds);


   SetGreaterAssemblyType.ProductTypeIds(
     [in] ArrayOf<CFactory.productType> CFactory.greaterassemblyType.productTypeIds);

    GetGreaterAssemblyType.ProductTypeIds(
     [out, callee] ArrayOf<CFactory.productType>* CFactory.greaterassemblyType.productTypeIds);


   SetGreaterAssemblyType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.greaterassemblyType.businessChannelOwnerId);

    GetGreaterAssemblyType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.greaterassemblyType.businessChannelOwnerId);


   SetGreaterAssemblyType.ItemTypeId(
     [in] CAdministration.itemType CFactory.greaterassemblyType.itemTypeId);

    GetGreaterAssemblyType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.greaterassemblyType.itemTypeId);


   SetGreaterAssemblyType.SupplierIds(
     [in] ArrayOf<CSupplier.supplier> CFactory.greaterassemblyType.supplierIds);

    GetGreaterAssemblyType.SupplierIds(
     [out, callee] ArrayOf<CSupplier.supplier>* CFactory.greaterassemblyType.supplierIds);


   SetGreaterAssemblyType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.greaterassemblyType.docRefIds);

    GetGreaterAssemblyType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.greaterassemblyType.docRefIds);


   SetGreaterAssemblyType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.greaterassemblyType.imageRefIds);

    GetGreaterAssemblyType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.greaterassemblyType.imageRefIds);


   SetGreaterAssemblyType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.greaterassemblyType.videoRefIds);

    GetGreaterAssemblyType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.greaterassemblyType.videoRefIds);


   SetProduct.ProductId(
     [in] String CFactory.product.productId);

    GetProduct.ProductId(
     [out] String* CFactory.product.productId);


   SetProduct.Hazardous(
     [in] Boolean CFactory.product.hazardous);

    GetProduct.Hazardous(
     [out] Boolean* CFactory.product.hazardous);


   SetProduct.MasLedgeFinTxIds(
     [in] ArrayOf<String> CFactory.product.masLedgeFinTxIds);

    GetProduct.MasLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFactory.product.masLedgeFinTxIds);


   SetProduct.MasLedgeFinTxNums(
     [in] ArrayOf<Int32> CFactory.product.masLedgeFinTxNums);

    GetProduct.MasLedgeFinTxNums(
     [out, callee] ArrayOf<Int32>* CFactory.product.masLedgeFinTxNums);


   SetProduct.GenLedgeFinTxIds(
     [in] ArrayOf<String> CFactory.product.genLedgeFinTxIds);

    GetProduct.GenLedgeFinTxIds(
     [out, callee] ArrayOf<String>* CFactory.product.genLedgeFinTxIds);


   SetProduct.GenLedgeFinTxNums(
     [in] ArrayOf<Int32> CFactory.product.genLedgeFinTxNums);

    GetProduct.GenLedgeFinTxNums(
     [out, callee] ArrayOf<Int32>* CFactory.product.genLedgeFinTxNums);


   SetProduct.ProductName(
     [in] String CFactory.product.productName);

    GetProduct.ProductName(
     [out] String* CFactory.product.productName);


   SetProduct.ModelNumber(
     [in] String CFactory.product.modelNumber);

    GetProduct.ModelNumber(
     [out] String* CFactory.product.modelNumber);


   SetProduct.SerialNumber(
     [in] String CFactory.product.serialNumber);

    GetProduct.SerialNumber(
     [out] String* CFactory.product.serialNumber);


   SetProduct.QCCheckedPassed(
     [in] Boolean CFactory.product.qCCheckedPassed);

    GetProduct.QCCheckedPassed(
     [out] Boolean* CFactory.product.qCCheckedPassed);


   SetProduct.BestBeforeDate(
     [in] String CFactory.product.BestBeforeDate);

    GetProduct.BestBeforeDate(
     [out] String* CFactory.product.BestBeforeDate);


   SetProduct.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.product.businessChannelOwnerId);

    GetProduct.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.product.businessChannelOwnerId);


   SetProduct.ProductTypeId(
     [in] CFactory.productType CFactory.product.productTypeId);

    GetProduct.ProductTypeId(
     [out] CFactory.productType* CFactory.product.productTypeId);


   SetProduct.ItemId(
     [in] CAdministration.item CFactory.product.itemId);

    GetProduct.ItemId(
     [out] CAdministration.item* CFactory.product.itemId);


   SetProduct.CustomerId(
     [in] CCustomer.customer CFactory.product.customerId);

    GetProduct.CustomerId(
     [out] CCustomer.customer* CFactory.product.customerId);


   SetProduct.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.product.docRefIds);

    GetProduct.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.product.docRefIds);


   SetProduct.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.product.imageRefIds);

    GetProduct.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.product.imageRefIds);


   SetProduct.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.product.videoRefIds);

    GetProduct.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.product.videoRefIds);


   SetProductType.ProductTypeId(
     [in] String CFactory.productType.productTypeId);

    GetProductType.ProductTypeId(
     [out] String* CFactory.productType.productTypeId);


   SetProductType.ProductDescription(
     [in] String CFactory.productType.productDescription);

    GetProductType.ProductDescription(
     [out] String* CFactory.productType.productDescription);


   SetProductType.Corrosiveness(
     [in] CHelper.corrosiveness CFactory.productType.corrosiveness);

    GetProductType.Corrosiveness(
     [out] CHelper.corrosiveness* CFactory.productType.corrosiveness);


   SetProductType.Toxicity(
     [in] CHelper.toxicity CFactory.productType.toxicity);

    GetProductType.Toxicity(
     [out] CHelper.toxicity* CFactory.productType.toxicity);


   SetProductType.Fragility(
     [in] CHelper.fragility CFactory.productType.fragility);

    GetProductType.Fragility(
     [out] CHelper.fragility* CFactory.productType.fragility);


   SetProductType.PhysicalStateWhenIdle(
     [in] CHelper.physicalStateWhenIdle CFactory.productType.PhysicalStateWhenIdle);

    GetProductType.PhysicalStateWhenIdle(
     [out] CHelper.physicalStateWhenIdle* CFactory.productType.PhysicalStateWhenIdle);


   SetProductType.RemainingNum(
     [in] Int32 CFactory.productType.remainingNum);

    GetProductType.RemainingNum(
     [out] Int32* CFactory.productType.remainingNum);


   SetProductType.LesserAssemblyReorderSetPoint(
     [in] Int32 CFactory.productType.lesserassemblyReorderSetPoint);

    GetProductType.LesserAssemblyReorderSetPoint(
     [out] Int32* CFactory.productType.lesserassemblyReorderSetPoint);


   SetProductType.LesserAssemblyReorderCode(
     [in] String CFactory.productType.lesserassemblyReorderCode);

    GetProductType.LesserAssemblyReorderCode(
     [out] String* CFactory.productType.lesserassemblyReorderCode);


   SetProductType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.productType.businessChannelOwnerId);

    GetProductType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.productType.businessChannelOwnerId);


   SetProductType.ItemTypeId(
     [in] CAdministration.itemType CFactory.productType.itemTypeId);

    GetProductType.ItemTypeId(
     [out] CAdministration.itemType* CFactory.productType.itemTypeId);


   SetProductType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.productType.docRefIds);

    GetProductType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.productType.docRefIds);


   SetProductType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CFactory.productType.imageRefIds);

    GetProductType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.productType.imageRefIds);


   SetProductType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CFactory.productType.videoRefIds);

    GetProductType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CFactory.productType.videoRefIds);


   SetShipment.ShipmentId(
     [in] String CFactory.shipment.shipmentId);

    GetShipment.ShipmentId(
     [out] String* CFactory.shipment.shipmentId);


   SetShipment.DistributorId(
     [in] String CFactory.shipment.distributorId);

    GetShipment.DistributorId(
     [out] String* CFactory.shipment.distributorId);


   SetShipment.SalesOrderIds(
     [in] ArrayOf<String> CFactory.shipment.salesOrderIds);

    GetShipment.SalesOrderIds(
     [out, callee] ArrayOf<String>* CFactory.shipment.salesOrderIds);


   SetShipment.PurchaseOrderIds(
     [in] ArrayOf<String> CFactory.shipment.purchaseOrderIds);

    GetShipment.PurchaseOrderIds(
     [out, callee] ArrayOf<String>* CFactory.shipment.purchaseOrderIds);


   SetShipment.ReceiverDeliveryAddress(
     [in] ArrayOf<String> CFactory.shipment.receiverDeliveryAddress);

    GetShipment.ReceiverDeliveryAddress(
     [out, callee] ArrayOf<String>* CFactory.shipment.receiverDeliveryAddress);


   SetShipment.SenderSourceAddress(
     [in] ArrayOf<String> CFactory.shipment.senderSourceAddress);

    GetShipment.SenderSourceAddress(
     [out, callee] ArrayOf<String>* CFactory.shipment.senderSourceAddress);


   SetShipment.ReceivedAtSourceTerminal(
     [in] String CFactory.shipment.receivedAtSourceTerminal);

    GetShipment.ReceivedAtSourceTerminal(
     [out] String* CFactory.shipment.receivedAtSourceTerminal);


   SetShipment.TrackingNumber(
     [in] String CFactory.shipment.trackingNumber);

    GetShipment.TrackingNumber(
     [out] String* CFactory.shipment.trackingNumber);


   SetShipment.TrackingURL(
     [in] String CFactory.shipment.trackingURL);

    GetShipment.TrackingURL(
     [out] String* CFactory.shipment.trackingURL);


   SetShipment.ETA(
     [in] String CFactory.shipment.eTA);

    GetShipment.ETA(
     [out] String* CFactory.shipment.eTA);


   SetShipment.JourneyPoints(
     [in] ArrayOf<String> CFactory.shipment.journeyPoints);

    GetShipment.JourneyPoints(
     [out, callee] ArrayOf<String>* CFactory.shipment.journeyPoints);


   SetShipment.JourneyPointNames(
     [in] ArrayOf<String> CFactory.shipment.journeyPointNames);

    GetShipment.JourneyPointNames(
     [out, callee] ArrayOf<String>* CFactory.shipment.journeyPointNames);


   SetShipment.DeliveredGPSLat(
     [in] Double CFactory.shipment.deliveredGPSLat);

    GetShipment.DeliveredGPSLat(
     [out] Double* CFactory.shipment.deliveredGPSLat);


   SetShipment.DeliveredGPSLong(
     [in] Double CFactory.shipment.deliveredGPSLong);

    GetShipment.DeliveredGPSLong(
     [out] Double* CFactory.shipment.deliveredGPSLong);


   SetShipment.DeliveryAddress(
     [in] String CFactory.shipment.deliveryAddress);

    GetShipment.DeliveryAddress(
     [out] String* CFactory.shipment.deliveryAddress);


   SetShipment.AddressesMatch(
     [in] Boolean CFactory.shipment.addressesMatch);

    GetShipment.AddressesMatch(
     [out] Boolean* CFactory.shipment.addressesMatch);


   SetShipment.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CFactory.shipment.businessChannelOwnerId);

    GetShipment.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CFactory.shipment.businessChannelOwnerId);


   SetShipment.SupplierId(
     [in] CSupplier.supplier CFactory.shipment.supplierId);

    GetShipment.SupplierId(
     [out] CSupplier.supplier* CFactory.shipment.supplierId);


   SetShipment.SupplierTypeId(
     [in] CSupplier.supplierType CFactory.shipment.supplierTypeId);

    GetShipment.SupplierTypeId(
     [out] CSupplier.supplierType* CFactory.shipment.supplierTypeId);


   SetShipment.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CFactory.shipment.docRefIds);

    GetShipment.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CFactory.shipment.docRefIds);


   SetShipment.DeliveryImageIds(
     [in] ArrayOf<CAdministration.images> CFactory.shipment.deliveryImageIds);

    GetShipment.DeliveryImageIds(
     [out, callee] ArrayOf<CAdministration.images>* CFactory.shipment.deliveryImageIds);


   SetShipment.ItemIds(
     [in] ArrayOf<CAdministration.item> CFactory.shipment.itemIds);

    GetShipment.ItemIds(
     [out, callee] ArrayOf<CAdministration.item>* CFactory.shipment.itemIds);


   SetShipment.ItemTypeIds(
     [in] ArrayOf<CAdministration.itemType> CFactory.shipment.itemTypeIds);

    GetShipment.ItemTypeIds(
     [out, callee] ArrayOf<CAdministration.itemType>* CFactory.shipment.itemTypeIds);


   SetShipment.CustomerId(
     [in] CCustomer.customer CFactory.shipment.customerId);

    GetShipment.CustomerId(
     [out] CCustomer.customer* CFactory.shipment.customerId);


   SetShipment.NextDistributorId(
     [in] CSupplier.distributor CFactory.shipment.nextDistributorId);

    GetShipment.NextDistributorId(
     [out] CSupplier.distributor* CFactory.shipment.nextDistributorId);


   SetShipment.ContinuationShipmentId(
     [in] CFactory.shipment CFactory.shipment.continuationShipmentId);

    GetShipment.ContinuationShipmentId(
     [out] CFactory.shipment* CFactory.shipment.continuationShipmentId);





   SetGovernmentalStakeholder.GovStakeholderId(
     [in] String CStakeholder.govStakeholder.govStakeholderId);

    GetGovernmentalStakeholder.GovStakeholderId(
     [out] String* CStakeholder.govStakeholder.govStakeholderId);


   SetGovernmentalStakeholder.DepartmentName(
     [in] String CStakeholder.govStakeholder.departmentName);

    GetGovernmentalStakeholder.DepartmentName(
     [out] String* CStakeholder.govStakeholder.departmentName);


   SetGovernmentalStakeholder.GovLevel(
     [in] CHelper.govLevel CStakeholder.govStakeholder.govLevel);

    GetGovernmentalStakeholder.GovLevel(
     [out] CHelper.govLevel* CStakeholder.govStakeholder.govLevel);


   SetGovernmentalStakeholder.StakeholderName(
     [in] String CStakeholder.govStakeholder.stakeholderName);

    GetGovernmentalStakeholder.StakeholderName(
     [out] String* CStakeholder.govStakeholder.stakeholderName);


   SetGovernmentalStakeholder.StakeholderDetails(
     [in] String CStakeholder.govStakeholder.stakeholderDetails);

    GetGovernmentalStakeholder.StakeholderDetails(
     [out] String* CStakeholder.govStakeholder.stakeholderDetails);


   SetGovernmentalStakeholder.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.govStakeholder.contactFirstNameList);

    GetGovernmentalStakeholder.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.govStakeholder.contactFirstNameList);


   SetGovernmentalStakeholder.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.govStakeholder.contactLastNameList);

    GetGovernmentalStakeholder.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.govStakeholder.contactLastNameList);


   SetGovernmentalStakeholder.ResidentialAddress(
     [in] String CStakeholder.govStakeholder.residentialAddress);

    GetGovernmentalStakeholder.ResidentialAddress(
     [out] String* CStakeholder.govStakeholder.residentialAddress);


   SetGovernmentalStakeholder.PostalAddress(
     [in] String CStakeholder.govStakeholder.postalAddress);

    GetGovernmentalStakeholder.PostalAddress(
     [out] String* CStakeholder.govStakeholder.postalAddress);


   SetGovernmentalStakeholder.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.govStakeholder.emailAddresses);

    GetGovernmentalStakeholder.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.govStakeholder.emailAddresses);


   SetGovernmentalStakeholder.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.govStakeholder.mobilePhone);

    GetGovernmentalStakeholder.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.govStakeholder.mobilePhone);


   SetGovernmentalStakeholder.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.govStakeholder.workPhone);

    GetGovernmentalStakeholder.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.govStakeholder.workPhone);


   SetGovernmentalStakeholder.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.govStakeholder.contactedWithDetails);

    GetGovernmentalStakeholder.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.govStakeholder.contactedWithDetails);


   SetGovernmentalStakeholder.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.govStakeholder.docRefIds);

    GetGovernmentalStakeholder.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.govStakeholder.docRefIds);


   SetGovernmentalStakeholder.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.govStakeholder.imageRefIds);

    GetGovernmentalStakeholder.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.govStakeholder.imageRefIds);


   SetGovernmentalStakeholder.BusinessDirectorIds(
     [in] ArrayOf<CAdministration.businessDirector> CStakeholder.govStakeholder.businessDirectorIds);

    GetGovernmentalStakeholder.BusinessDirectorIds(
     [out, callee] ArrayOf<CAdministration.businessDirector>* CStakeholder.govStakeholder.businessDirectorIds);


   SetGovernmentalStakeholder.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.govStakeholder.businessChannelOwnerId);

    GetGovernmentalStakeholder.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.govStakeholder.businessChannelOwnerId);


   SetNonGovernmentalStakeholder.NonGovStakeholderId(
     [in] String CStakeholder.nonGovStakeholder.nonGovStakeholderId);

    GetNonGovernmentalStakeholder.NonGovStakeholderId(
     [out] String* CStakeholder.nonGovStakeholder.nonGovStakeholderId);


   SetNonGovernmentalStakeholder.ABN(
     [in] String CStakeholder.nonGovStakeholder.aBN);

    GetNonGovernmentalStakeholder.ABN(
     [out] String* CStakeholder.nonGovStakeholder.aBN);


   SetNonGovernmentalStakeholder.StakeholderName(
     [in] String CStakeholder.nonGovStakeholder.stakeholderName);

    GetNonGovernmentalStakeholder.StakeholderName(
     [out] String* CStakeholder.nonGovStakeholder.stakeholderName);


   SetNonGovernmentalStakeholder.StakeholderDetails(
     [in] String CStakeholder.nonGovStakeholder.stakeholderDetails);

    GetNonGovernmentalStakeholder.StakeholderDetails(
     [out] String* CStakeholder.nonGovStakeholder.stakeholderDetails);


   SetNonGovernmentalStakeholder.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.nonGovStakeholder.contactFirstNameList);

    GetNonGovernmentalStakeholder.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.nonGovStakeholder.contactFirstNameList);


   SetNonGovernmentalStakeholder.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.nonGovStakeholder.contactLastNameList);

    GetNonGovernmentalStakeholder.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.nonGovStakeholder.contactLastNameList);


   SetNonGovernmentalStakeholder.ResidentialAddress(
     [in] String CStakeholder.nonGovStakeholder.residentialAddress);

    GetNonGovernmentalStakeholder.ResidentialAddress(
     [out] String* CStakeholder.nonGovStakeholder.residentialAddress);


   SetNonGovernmentalStakeholder.PostalAddress(
     [in] String CStakeholder.nonGovStakeholder.postalAddress);

    GetNonGovernmentalStakeholder.PostalAddress(
     [out] String* CStakeholder.nonGovStakeholder.postalAddress);


   SetNonGovernmentalStakeholder.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.nonGovStakeholder.emailAddresses);

    GetNonGovernmentalStakeholder.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.nonGovStakeholder.emailAddresses);


   SetNonGovernmentalStakeholder.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.nonGovStakeholder.mobilePhone);

    GetNonGovernmentalStakeholder.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.nonGovStakeholder.mobilePhone);


   SetNonGovernmentalStakeholder.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.nonGovStakeholder.workPhone);

    GetNonGovernmentalStakeholder.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.nonGovStakeholder.workPhone);


   SetNonGovernmentalStakeholder.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.nonGovStakeholder.contactedWithDetails);

    GetNonGovernmentalStakeholder.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.nonGovStakeholder.contactedWithDetails);


   SetNonGovernmentalStakeholder.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.nonGovStakeholder.docRefIds);

    GetNonGovernmentalStakeholder.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.nonGovStakeholder.docRefIds);


   SetNonGovernmentalStakeholder.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.nonGovStakeholder.imageRefIds);

    GetNonGovernmentalStakeholder.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.nonGovStakeholder.imageRefIds);


   SetNonGovernmentalStakeholder.BusinessDirectorIds(
     [in] ArrayOf<CAdministration.businessDirector> CStakeholder.nonGovStakeholder.businessDirectorIds);

    GetNonGovernmentalStakeholder.BusinessDirectorIds(
     [out, callee] ArrayOf<CAdministration.businessDirector>* CStakeholder.nonGovStakeholder.businessDirectorIds);


   SetNonGovernmentalStakeholder.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.nonGovStakeholder.businessChannelOwnerId);

    GetNonGovernmentalStakeholder.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.nonGovStakeholder.businessChannelOwnerId);


   SetPartner.PartnerId(
     [in] String CStakeholder.partner.partnerId);

    GetPartner.PartnerId(
     [out] String* CStakeholder.partner.partnerId);


   SetPartner.ABN(
     [in] String CStakeholder.partner.aBN);

    GetPartner.ABN(
     [out] String* CStakeholder.partner.aBN);


   SetPartner.PartnerName(
     [in] String CStakeholder.partner.partnerName);

    GetPartner.PartnerName(
     [out] String* CStakeholder.partner.partnerName);


   SetPartner.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.partner.contactFirstNameList);

    GetPartner.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.partner.contactFirstNameList);


   SetPartner.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.partner.contactLastNameList);

    GetPartner.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.partner.contactLastNameList);


   SetPartner.ResidentialAddress(
     [in] String CStakeholder.partner.residentialAddress);

    GetPartner.ResidentialAddress(
     [out] String* CStakeholder.partner.residentialAddress);


   SetPartner.PostalAddress(
     [in] String CStakeholder.partner.postalAddress);

    GetPartner.PostalAddress(
     [out] String* CStakeholder.partner.postalAddress);


   SetPartner.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.partner.emailAddresses);

    GetPartner.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.partner.emailAddresses);


   SetPartner.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.partner.mobilePhone);

    GetPartner.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.partner.mobilePhone);


   SetPartner.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.partner.workPhone);

    GetPartner.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.partner.workPhone);


   SetPartner.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.partner.contactedWithDetails);

    GetPartner.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.partner.contactedWithDetails);


   SetPartner.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.partner.businessChannelOwnerId);

    GetPartner.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.partner.businessChannelOwnerId);


   SetPartner.BranchId(
     [in] CAdministration.branch CStakeholder.partner.branchId);

    GetPartner.BranchId(
     [out] CAdministration.branch* CStakeholder.partner.branchId);


   SetPartner.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.partner.docRefIds);

    GetPartner.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.partner.docRefIds);


   SetPartner.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.partner.imageRefIds);

    GetPartner.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.partner.imageRefIds);


   SetCommunity.CommunityId(
     [in] String CStakeholder.community.communityId);

    GetCommunity.CommunityId(
     [out] String* CStakeholder.community.communityId);


   SetCommunity.GroupName(
     [in] String CStakeholder.community.groupName);

    GetCommunity.GroupName(
     [out] String* CStakeholder.community.groupName);


   SetCommunity.FirstName(
     [in] String CStakeholder.community.firstName);

    GetCommunity.FirstName(
     [out] String* CStakeholder.community.firstName);


   SetCommunity.LastName(
     [in] String CStakeholder.community.lastName);

    GetCommunity.LastName(
     [out] String* CStakeholder.community.lastName);


   SetCommunity.ResidentialAddress(
     [in] String CStakeholder.community.residentialAddress);

    GetCommunity.ResidentialAddress(
     [out] String* CStakeholder.community.residentialAddress);


   SetCommunity.PostalAddress(
     [in] String CStakeholder.community.postalAddress);

    GetCommunity.PostalAddress(
     [out] String* CStakeholder.community.postalAddress);


   SetCommunity.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.community.emailAddresses);

    GetCommunity.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.community.emailAddresses);


   SetCommunity.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.community.mobilePhone);

    GetCommunity.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.community.mobilePhone);


   SetCommunity.HomePhone(
     [in] ArrayOf<Int32> CStakeholder.community.homePhone);

    GetCommunity.HomePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.community.homePhone);


   SetCommunity.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.community.workPhone);

    GetCommunity.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.community.workPhone);


   SetCommunity.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.community.contactedWithDetails);

    GetCommunity.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.community.contactedWithDetails);


   SetCommunity.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.community.businessChannelOwnerId);

    GetCommunity.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.community.businessChannelOwnerId);


   SetCommunity.BranchId(
     [in] CAdministration.branch CStakeholder.community.branchId);

    GetCommunity.BranchId(
     [out] CAdministration.branch* CStakeholder.community.branchId);


   SetCommunity.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.community.docRefIds);

    GetCommunity.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.community.docRefIds);


   SetCommunity.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.community.imageRefIds);

    GetCommunity.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.community.imageRefIds);


   SetMedia.MediaId(
     [in] String CStakeholder.media.mediaId);

    GetMedia.MediaId(
     [out] String* CStakeholder.media.mediaId);


   SetMedia.ABN(
     [in] String CStakeholder.media.aBN);

    GetMedia.ABN(
     [out] String* CStakeholder.media.aBN);


   SetMedia.CompanyName(
     [in] String CStakeholder.media.companyName);

    GetMedia.CompanyName(
     [out] String* CStakeholder.media.companyName);


   SetMedia.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.media.contactFirstNameList);

    GetMedia.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.media.contactFirstNameList);


   SetMedia.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.media.contactLastNameList);

    GetMedia.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.media.contactLastNameList);


   SetMedia.ResidentialAddress(
     [in] String CStakeholder.media.residentialAddress);

    GetMedia.ResidentialAddress(
     [out] String* CStakeholder.media.residentialAddress);


   SetMedia.PostalAddress(
     [in] String CStakeholder.media.postalAddress);

    GetMedia.PostalAddress(
     [out] String* CStakeholder.media.postalAddress);


   SetMedia.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.media.emailAddresses);

    GetMedia.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.media.emailAddresses);


   SetMedia.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.media.mobilePhone);

    GetMedia.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.media.mobilePhone);


   SetMedia.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.media.workPhone);

    GetMedia.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.media.workPhone);


   SetMedia.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.media.contactedWithDetails);

    GetMedia.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.media.contactedWithDetails);


   SetMedia.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.media.businessChannelOwnerId);

    GetMedia.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.media.businessChannelOwnerId);


   SetMedia.BranchId(
     [in] CAdministration.branch CStakeholder.media.branchId);

    GetMedia.BranchId(
     [out] CAdministration.branch* CStakeholder.media.branchId);


   SetMedia.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.media.docRefIds);

    GetMedia.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.media.docRefIds);


   SetMedia.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.media.imageRefIds);

    GetMedia.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.media.imageRefIds);


   SetTICA.TicaId(
     [in] String CStakeholder.tICA.ticaId);

    GetTICA.TicaId(
     [out] String* CStakeholder.tICA.ticaId);


   SetTICA.TicaUserName(
     [in] String CStakeholder.tICA.ticaUserName);

    GetTICA.TicaUserName(
     [out] String* CStakeholder.tICA.ticaUserName);


   SetTICA.TICAPassword(
     [in] String CStakeholder.tICA.tICAPassword);

    GetTICA.TICAPassword(
     [out] String* CStakeholder.tICA.tICAPassword);


   SetTICA.TenantFirstName(
     [in] String CStakeholder.tICA.tenantFirstName);

    GetTICA.TenantFirstName(
     [out] String* CStakeholder.tICA.tenantFirstName);


   SetTICA.TenantMiddleInitialOrName(
     [in] String CStakeholder.tICA.tenantMiddleInitialOrName);

    GetTICA.TenantMiddleInitialOrName(
     [out] String* CStakeholder.tICA.tenantMiddleInitialOrName);


   SetTICA.TenantLastName(
     [in] String CStakeholder.tICA.tenantLastName);

    GetTICA.TenantLastName(
     [out] String* CStakeholder.tICA.tenantLastName);


   SetTICA.TenantDateOfBirth(
     [in] String CStakeholder.tICA.tenantDateOfBirth);

    GetTICA.TenantDateOfBirth(
     [out] String* CStakeholder.tICA.tenantDateOfBirth);


   SetTICA.ApplicantFirstName(
     [in] String CStakeholder.tICA.applicantFirstName);

    GetTICA.ApplicantFirstName(
     [out] String* CStakeholder.tICA.applicantFirstName);


   SetTICA.ApplicantMiddleInitialOrName(
     [in] String CStakeholder.tICA.applicantMiddleInitialOrName);

    GetTICA.ApplicantMiddleInitialOrName(
     [out] String* CStakeholder.tICA.applicantMiddleInitialOrName);


   SetTICA.ApplicantLastName(
     [in] String CStakeholder.tICA.applicantLastName);

    GetTICA.ApplicantLastName(
     [out] String* CStakeholder.tICA.applicantLastName);


   SetTICA.ApplicantDateOfBirth(
     [in] String CStakeholder.tICA.applicantDateOfBirth);

    GetTICA.ApplicantDateOfBirth(
     [out] String* CStakeholder.tICA.applicantDateOfBirth);


   SetTICA.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.tICA.businessChannelOwnerId);

    GetTICA.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.tICA.businessChannelOwnerId);


   SetTICA.BranchId(
     [in] CAdministration.branch CStakeholder.tICA.branchId);

    GetTICA.BranchId(
     [out] CAdministration.branch* CStakeholder.tICA.branchId);


   SetTICA.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.tICA.docRefIds);

    GetTICA.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.tICA.docRefIds);


   SetTICA.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.tICA.imageRefIds);

    GetTICA.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.tICA.imageRefIds);


   SetTICA.ApplicantId(
     [in] CCustomer.applicant CStakeholder.tICA.applicantId);

    GetTICA.ApplicantId(
     [out] CCustomer.applicant* CStakeholder.tICA.applicantId);


   SetTICA.TenancyId(
     [in] CProperty.tenant CStakeholder.tICA.tenancyId);

    GetTICA.TenancyId(
     [out] CProperty.tenant* CStakeholder.tICA.tenancyId);


   SetAgent.AgentId(
     [in] String CStakeholder.agent.agentId);

    GetAgent.AgentId(
     [out] String* CStakeholder.agent.agentId);


   SetAgent.ABN(
     [in] String CStakeholder.agent.aBN);

    GetAgent.ABN(
     [out] String* CStakeholder.agent.aBN);


   SetAgent.AgencyName(
     [in] String CStakeholder.agent.agencyName);

    GetAgent.AgencyName(
     [out] String* CStakeholder.agent.agencyName);


   SetAgent.AgentType(
     [in] String CStakeholder.agent.agentType);

    GetAgent.AgentType(
     [out] String* CStakeholder.agent.agentType);


   SetAgent.DescriptionOfAgency(
     [in] String CStakeholder.agent.descriptionOfAgency);

    GetAgent.DescriptionOfAgency(
     [out] String* CStakeholder.agent.descriptionOfAgency);


   SetAgent.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.agent.contactFirstNameList);

    GetAgent.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.agent.contactFirstNameList);


   SetAgent.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.agent.contactLastNameList);

    GetAgent.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.agent.contactLastNameList);


   SetAgent.ResidentialAddress(
     [in] String CStakeholder.agent.residentialAddress);

    GetAgent.ResidentialAddress(
     [out] String* CStakeholder.agent.residentialAddress);


   SetAgent.PostalAddress(
     [in] String CStakeholder.agent.postalAddress);

    GetAgent.PostalAddress(
     [out] String* CStakeholder.agent.postalAddress);


   SetAgent.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.agent.emailAddresses);

    GetAgent.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.agent.emailAddresses);


   SetAgent.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.agent.mobilePhone);

    GetAgent.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.agent.mobilePhone);


   SetAgent.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.agent.workPhone);

    GetAgent.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.agent.workPhone);


   SetAgent.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.agent.contactedWithDetails);

    GetAgent.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.agent.contactedWithDetails);


   SetAgent.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.agent.docRefIds);

    GetAgent.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.agent.docRefIds);


   SetAgent.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.agent.imageRefIds);

    GetAgent.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.agent.imageRefIds);


   SetAgent.AgentTypeId(
     [in] CStakeholder.agentType CStakeholder.agent.agentTypeId);

    GetAgent.AgentTypeId(
     [out] CStakeholder.agentType* CStakeholder.agent.agentTypeId);


   SetAgent.BusinessDirectorIds(
     [in] ArrayOf<CAdministration.businessDirector> CStakeholder.agent.businessDirectorIds);

    GetAgent.BusinessDirectorIds(
     [out, callee] ArrayOf<CAdministration.businessDirector>* CStakeholder.agent.businessDirectorIds);


   SetAgent.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.agent.businessChannelOwnerId);

    GetAgent.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.agent.businessChannelOwnerId);


   SetAgentType.AgentTypeId(
     [in] String CStakeholder.agentType.agentTypeId);

    GetAgentType.AgentTypeId(
     [out] String* CStakeholder.agentType.agentTypeId);


   SetAgentType.AgentType(
     [in] String CStakeholder.agentType.agentType);

    GetAgentType.AgentType(
     [out] String* CStakeholder.agentType.agentType);


   SetAgentType.AgentTypeDescription(
     [in] String CStakeholder.agentType.agentTypeDescription);

    GetAgentType.AgentTypeDescription(
     [out] String* CStakeholder.agentType.agentTypeDescription);


   SetAgentType.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.agentType.businessChannelOwnerId);

    GetAgentType.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.agentType.businessChannelOwnerId);


   SetAgentType.BranchId(
     [in] CAdministration.branch CStakeholder.agentType.branchId);

    GetAgentType.BranchId(
     [out] CAdministration.branch* CStakeholder.agentType.branchId);


   SetAgentType.DeptId(
     [in] CAdministration.department CStakeholder.agentType.deptId);

    GetAgentType.DeptId(
     [out] CAdministration.department* CStakeholder.agentType.deptId);


   SetAgentType.ServiceIds(
     [in] ArrayOf<CAdministration.service> CStakeholder.agentType.serviceIds);

    GetAgentType.ServiceIds(
     [out, callee] ArrayOf<CAdministration.service>* CStakeholder.agentType.serviceIds);


   SetAgentType.SupplierTypeIds(
     [in] ArrayOf<CSupplier.supplierType> CStakeholder.agentType.supplierTypeIds);

    GetAgentType.SupplierTypeIds(
     [out, callee] ArrayOf<CSupplier.supplierType>* CStakeholder.agentType.supplierTypeIds);


   SetAgentType.StateBasedRegId(
     [in] CRegulator.stateBasedRegulator CStakeholder.agentType.stateBasedRegId);

    GetAgentType.StateBasedRegId(
     [out] CRegulator.stateBasedRegulator* CStakeholder.agentType.stateBasedRegId);


   SetAgentType.NatRegId(
     [in] CRegulator.nationalRegulator CStakeholder.agentType.natRegId);

    GetAgentType.NatRegId(
     [out] CRegulator.nationalRegulator* CStakeholder.agentType.natRegId);


   SetAgentType.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.agentType.docRefIds);

    GetAgentType.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.agentType.docRefIds);


   SetAgentType.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.agentType.imageRefIds);

    GetAgentType.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.agentType.imageRefIds);


   SetAgentType.VideoRefIds(
     [in] ArrayOf<CAdministration.video> CStakeholder.agentType.videoRefIds);

    GetAgentType.VideoRefIds(
     [out, callee] ArrayOf<CAdministration.video>* CStakeholder.agentType.videoRefIds);


   SetStateLAHAuthority.StateLAHAuthorityId(
     [in] String CStakeholder.stateLAHAuthority.stateLAHAuthorityId);

    GetStateLAHAuthority.StateLAHAuthorityId(
     [out] String* CStakeholder.stateLAHAuthority.stateLAHAuthorityId);


   SetStateLAHAuthority.AuthorityName(
     [in] String CStakeholder.stateLAHAuthority.authorityName);

    GetStateLAHAuthority.AuthorityName(
     [out] String* CStakeholder.stateLAHAuthority.authorityName);


   SetStateLAHAuthority.AusState(
     [in] CHelper.ausState CStakeholder.stateLAHAuthority.ausState);

    GetStateLAHAuthority.AusState(
     [out] CHelper.ausState* CStakeholder.stateLAHAuthority.ausState);


   SetStateLAHAuthority.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.stateLAHAuthority.contactFirstNameList);

    GetStateLAHAuthority.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.stateLAHAuthority.contactFirstNameList);


   SetStateLAHAuthority.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.stateLAHAuthority.contactLastNameList);

    GetStateLAHAuthority.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.stateLAHAuthority.contactLastNameList);


   SetStateLAHAuthority.StreetAddress(
     [in] String CStakeholder.stateLAHAuthority.streetAddress);

    GetStateLAHAuthority.StreetAddress(
     [out] String* CStakeholder.stateLAHAuthority.streetAddress);


   SetStateLAHAuthority.PostalAddress(
     [in] String CStakeholder.stateLAHAuthority.postalAddress);

    GetStateLAHAuthority.PostalAddress(
     [out] String* CStakeholder.stateLAHAuthority.postalAddress);


   SetStateLAHAuthority.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.stateLAHAuthority.emailAddresses);

    GetStateLAHAuthority.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.stateLAHAuthority.emailAddresses);


   SetStateLAHAuthority.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.stateLAHAuthority.mobilePhone);

    GetStateLAHAuthority.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.stateLAHAuthority.mobilePhone);


   SetStateLAHAuthority.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.stateLAHAuthority.workPhone);

    GetStateLAHAuthority.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.stateLAHAuthority.workPhone);


   SetStateLAHAuthority.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.stateLAHAuthority.contactedWithDetails);

    GetStateLAHAuthority.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.stateLAHAuthority.contactedWithDetails);


   SetStateLAHAuthority.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.stateLAHAuthority.businessChannelOwnerId);

    GetStateLAHAuthority.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.stateLAHAuthority.businessChannelOwnerId);


   SetStateLAHAuthority.BranchId(
     [in] CAdministration.branch CStakeholder.stateLAHAuthority.branchId);

    GetStateLAHAuthority.BranchId(
     [out] CAdministration.branch* CStakeholder.stateLAHAuthority.branchId);


   SetStateLAHAuthority.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.stateLAHAuthority.docRefIds);

    GetStateLAHAuthority.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.stateLAHAuthority.docRefIds);


   SetStateLAHAuthority.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.stateLAHAuthority.imageRefIds);

    GetStateLAHAuthority.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.stateLAHAuthority.imageRefIds);


   SetStateLAHAuthority.PropertyOwnerId(
     [in] CProperty.propertyOwner CStakeholder.stateLAHAuthority.propertyOwnerId);

    GetStateLAHAuthority.PropertyOwnerId(
     [out] CProperty.propertyOwner* CStakeholder.stateLAHAuthority.propertyOwnerId);


   SetStatePublicHousingAuthority.StatePublicHousingAuthorityId(
     [in] String CStakeholder.statePublicHousingAuthority.statePublicHousingAuthorityId);

    GetStatePublicHousingAuthority.StatePublicHousingAuthorityId(
     [out] String* CStakeholder.statePublicHousingAuthority.statePublicHousingAuthorityId);


   SetStatePublicHousingAuthority.AuthorityName(
     [in] String CStakeholder.statePublicHousingAuthority.authorityName);

    GetStatePublicHousingAuthority.AuthorityName(
     [out] String* CStakeholder.statePublicHousingAuthority.authorityName);


   SetStatePublicHousingAuthority.ContactFirstNameList(
     [in] ArrayOf<String> CStakeholder.statePublicHousingAuthority.contactFirstNameList);

    GetStatePublicHousingAuthority.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CStakeholder.statePublicHousingAuthority.contactFirstNameList);


   SetStatePublicHousingAuthority.ContactLastNameList(
     [in] ArrayOf<String> CStakeholder.statePublicHousingAuthority.contactLastNameList);

    GetStatePublicHousingAuthority.ContactLastNameList(
     [out, callee] ArrayOf<String>* CStakeholder.statePublicHousingAuthority.contactLastNameList);


   SetStatePublicHousingAuthority.StreetAddress(
     [in] String CStakeholder.statePublicHousingAuthority.streetAddress);

    GetStatePublicHousingAuthority.StreetAddress(
     [out] String* CStakeholder.statePublicHousingAuthority.streetAddress);


   SetStatePublicHousingAuthority.PostalAddress(
     [in] String CStakeholder.statePublicHousingAuthority.postalAddress);

    GetStatePublicHousingAuthority.PostalAddress(
     [out] String* CStakeholder.statePublicHousingAuthority.postalAddress);


   SetStatePublicHousingAuthority.EmailAddresses(
     [in] ArrayOf<String> CStakeholder.statePublicHousingAuthority.emailAddresses);

    GetStatePublicHousingAuthority.EmailAddresses(
     [out, callee] ArrayOf<String>* CStakeholder.statePublicHousingAuthority.emailAddresses);


   SetStatePublicHousingAuthority.MobilePhone(
     [in] ArrayOf<Int32> CStakeholder.statePublicHousingAuthority.mobilePhone);

    GetStatePublicHousingAuthority.MobilePhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.statePublicHousingAuthority.mobilePhone);


   SetStatePublicHousingAuthority.WorkPhone(
     [in] ArrayOf<Int32> CStakeholder.statePublicHousingAuthority.workPhone);

    GetStatePublicHousingAuthority.WorkPhone(
     [out, callee] ArrayOf<Int32>* CStakeholder.statePublicHousingAuthority.workPhone);


   SetStatePublicHousingAuthority.ContactedWithDetails(
     [in] ArrayOf<String> CStakeholder.statePublicHousingAuthority.contactedWithDetails);

    GetStatePublicHousingAuthority.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CStakeholder.statePublicHousingAuthority.contactedWithDetails);


   SetStatePublicHousingAuthority.AusState(
     [in] CHelper.ausState CStakeholder.statePublicHousingAuthority.ausState);

    GetStatePublicHousingAuthority.AusState(
     [out] CHelper.ausState* CStakeholder.statePublicHousingAuthority.ausState);


   SetStatePublicHousingAuthority.BranchId(
     [in] CAdministration.branch CStakeholder.statePublicHousingAuthority.branchId);

    GetStatePublicHousingAuthority.BranchId(
     [out] CAdministration.branch* CStakeholder.statePublicHousingAuthority.branchId);


   SetStatePublicHousingAuthority.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CStakeholder.statePublicHousingAuthority.docRefIds);

    GetStatePublicHousingAuthority.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CStakeholder.statePublicHousingAuthority.docRefIds);


   SetStatePublicHousingAuthority.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CStakeholder.statePublicHousingAuthority.imageRefIds);

    GetStatePublicHousingAuthority.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CStakeholder.statePublicHousingAuthority.imageRefIds);


   SetStatePublicHousingAuthority.PropertyOwnerId(
     [in] CProperty.propertyOwner CStakeholder.statePublicHousingAuthority.propertyOwnerId);

    GetStatePublicHousingAuthority.PropertyOwnerId(
     [out] CProperty.propertyOwner* CStakeholder.statePublicHousingAuthority.propertyOwnerId);


   SetStatePublicHousingAuthority.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CStakeholder.statePublicHousingAuthority.businessChannelOwnerId);

    GetStatePublicHousingAuthority.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CStakeholder.statePublicHousingAuthority.businessChannelOwnerId);


   SetAuditorFinancial.AuditorFinancialId(
     [in] String CRegulator.auditorFinancial.auditorFinancialId);

    GetAuditorFinancial.AuditorFinancialId(
     [out] String* CRegulator.auditorFinancial.auditorFinancialId);

   SetAuditorFinancial.Name(
     [in] String CRegulator.auditorFinancial.name);

    GetAuditorFinancial.AuditorFinancialId(
     [out] String* CRegulator.auditorFinancial.auditorFinancialId);

   SetAuditorFinancial.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.auditorFinancial.contactFirstNameList);

    GetAuditorFinancial.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.auditorFinancial.contactFirstNameList);


   SetAuditorFinancial.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.auditorFinancial.contactLastNameList);

    GetAuditorFinancial.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.auditorFinancial.contactLastNameList);


   SetAuditorFinancial.StreetAddress(
     [in] String CRegulator.auditorFinancial.streetAddress);

    GetAuditorFinancial.StreetAddress(
     [out] String* CRegulator.auditorFinancial.streetAddress);


   SetAuditorFinancial.PostalAddress(
     [in] String CRegulator.auditorFinancial.postalAddress);

    GetAuditorFinancial.PostalAddress(
     [out] String* CRegulator.auditorFinancial.postalAddress);


   SetAuditorFinancial.EmailAddresses(
     [in] ArrayOf<String> CRegulator.auditorFinancial.emailAddresses);

    GetAuditorFinancial.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.auditorFinancial.emailAddresses);


   SetAuditorFinancial.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.auditorFinancial.mobilePhone);

    GetAuditorFinancial.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.auditorFinancial.mobilePhone);


   SetAuditorFinancial.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.auditorFinancial.workPhone);

    GetAuditorFinancial.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.auditorFinancial.workPhone);


   SetAuditorFinancial.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.auditorFinancial.contactedWithDetails);

    GetAuditorFinancial.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.auditorFinancial.contactedWithDetails);


   SetAuditorFinancial.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.auditorFinancial.docRefIds);

    GetAuditorFinancial.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.auditorFinancial.docRefIds);


   SetAuditorFinancial.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.auditorFinancial.businessChannelOwnerId);

    GetAuditorFinancial.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.auditorFinancial.businessChannelOwnerId);


   SetSecurityAuditor.SecurityAuditorId(
     [in] String CRegulator.securityAuditor.securityAuditorId);

    GetSecurityAuditor.SecurityAuditorId(
     [out] String* CRegulator.securityAuditor.securityAuditorId);


   SetSecurityAuditor.Name(
     [in] String CRegulator.securityAuditor.name);


   SetSecurityAuditor.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.securityAuditor.contactFirstNameList);

    GetSecurityAuditor.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.securityAuditor.contactFirstNameList);


   SetSecurityAuditor.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.securityAuditor.contactLastNameList);

    GetSecurityAuditor.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.securityAuditor.contactLastNameList);


   SetSecurityAuditor.StreetAddress(
     [in] String CRegulator.securityAuditor.streetAddress);

    GetSecurityAuditor.StreetAddress(
     [out] String* CRegulator.securityAuditor.streetAddress);


   SetSecurityAuditor.PostalAddress(
     [in] String CRegulator.securityAuditor.postalAddress);

    GetSecurityAuditor.PostalAddress(
     [out] String* CRegulator.securityAuditor.postalAddress);


   SetSecurityAuditor.EmailAddresses(
     [in] ArrayOf<String> CRegulator.securityAuditor.emailAddresses);

    GetSecurityAuditor.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.securityAuditor.emailAddresses);


   SetSecurityAuditor.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.securityAuditor.mobilePhone);

    GetSecurityAuditor.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.securityAuditor.mobilePhone);


   SetSecurityAuditor.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.securityAuditor.workPhone);

    GetSecurityAuditor.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.securityAuditor.workPhone);


   SetSecurityAuditor.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.securityAuditor.contactedWithDetails);

    GetSecurityAuditor.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.securityAuditor.contactedWithDetails);


   SetSecurityAuditor.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.securityAuditor.docRefIds);

    GetSecurityAuditor.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.securityAuditor.docRefIds);


   SetSecurityAuditor.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.securityAuditor.businessChannelOwnerId);

    GetSecurityAuditor.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.securityAuditor.businessChannelOwnerId);


   SetCommunityHousingRegulator.CommunityHousingRegulatorId(
     [in] String CRegulator.communityHousingRegulator.communityHousingRegulatorId);

    GetCommunityHousingRegulator.CommunityHousingRegulatorId(
     [out] String* CRegulator.communityHousingRegulator.communityHousingRegulatorId);


   SetCommunityHousingRegulator.AuthorityName(
     [in] String CRegulator.communityHousingRegulator.authorityName);

    GetCommunityHousingRegulator.AuthorityName(
     [out] String* CRegulator.communityHousingRegulator.authorityName);


   SetCommunityHousingRegulator.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.communityHousingRegulator.contactFirstNameList);

    GetCommunityHousingRegulator.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.communityHousingRegulator.contactFirstNameList);


   SetCommunityHousingRegulator.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.communityHousingRegulator.contactLastNameList);

    GetCommunityHousingRegulator.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.communityHousingRegulator.contactLastNameList);


   SetCommunityHousingRegulator.StreetAddress(
     [in] String CRegulator.communityHousingRegulator.streetAddress);

    GetCommunityHousingRegulator.StreetAddress(
     [out] String* CRegulator.communityHousingRegulator.streetAddress);


   SetCommunityHousingRegulator.PostalAddress(
     [in] String CRegulator.communityHousingRegulator.postalAddress);

    GetCommunityHousingRegulator.PostalAddress(
     [out] String* CRegulator.communityHousingRegulator.postalAddress);


   SetCommunityHousingRegulator.EmailAddresses(
     [in] ArrayOf<String> CRegulator.communityHousingRegulator.emailAddresses);

    GetCommunityHousingRegulator.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.communityHousingRegulator.emailAddresses);


   SetCommunityHousingRegulator.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.communityHousingRegulator.mobilePhone);

    GetCommunityHousingRegulator.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.communityHousingRegulator.mobilePhone);


   SetCommunityHousingRegulator.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.communityHousingRegulator.workPhone);

    GetCommunityHousingRegulator.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.communityHousingRegulator.workPhone);


   SetCommunityHousingRegulator.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.communityHousingRegulator.contactedWithDetails);

    GetCommunityHousingRegulator.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.communityHousingRegulator.contactedWithDetails);


   SetCommunityHousingRegulator.AusStates(
     [in] ArrayOf<CHelper.ausState> CRegulator.communityHousingRegulator.ausStates);

    GetCommunityHousingRegulator.AusStates(
     [out, callee] ArrayOf<CHelper.ausState>* CRegulator.communityHousingRegulator.ausStates);


   SetCommunityHousingRegulator.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.communityHousingRegulator.docRefIds);

    GetCommunityHousingRegulator.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.communityHousingRegulator.docRefIds);


   SetCommunityHousingRegulator.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.communityHousingRegulator.imageRefIds);

    GetCommunityHousingRegulator.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.communityHousingRegulator.imageRefIds);


   SetCommunityHousingRegulator.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.communityHousingRegulator.businessChannelOwnerId);

    GetCommunityHousingRegulator.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.communityHousingRegulator.businessChannelOwnerId);





   SetRentalBondAuthority.RentalBondAuthorityId(
     [in] String CRegulator.rentalBondAuthority.rentalBondAuthorityId);

    GetRentalBondAuthority.RentalBondAuthorityId(
     [out] String* CRegulator.rentalBondAuthority.rentalBondAuthorityId);


   SetRentalBondAuthority.AuthorityName(
     [in] String CRegulator.rentalBondAuthority.authorityName);

    GetRentalBondAuthority.AuthorityName(
     [out] String* CRegulator.rentalBondAuthority.authorityName);


   SetRentalBondAuthority.AusState(
     [in] CHelper.ausState CRegulator.rentalBondAuthority.ausState);

    GetRentalBondAuthority.AusState(
     [out] CHelper.ausState* CRegulator.rentalBondAuthority.ausState);


   SetRentalBondAuthority.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.rentalBondAuthority.contactFirstNameList);

    GetRentalBondAuthority.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.rentalBondAuthority.contactFirstNameList);


   SetRentalBondAuthority.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.rentalBondAuthority.contactLastNameList);

    GetRentalBondAuthority.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.rentalBondAuthority.contactLastNameList);


   SetRentalBondAuthority.StreetAddress(
     [in] String CRegulator.rentalBondAuthority.streetAddress);

    GetRentalBondAuthority.StreetAddress(
     [out] String* CRegulator.rentalBondAuthority.streetAddress);


   SetRentalBondAuthority.PostalAddress(
     [in] String CRegulator.rentalBondAuthority.postalAddress);

    GetRentalBondAuthority.PostalAddress(
     [out] String* CRegulator.rentalBondAuthority.postalAddress);


   SetRentalBondAuthority.EmailAddresses(
     [in] ArrayOf<String> CRegulator.rentalBondAuthority.emailAddresses);

    GetRentalBondAuthority.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.rentalBondAuthority.emailAddresses);


   SetRentalBondAuthority.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.rentalBondAuthority.mobilePhone);

    GetRentalBondAuthority.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.rentalBondAuthority.mobilePhone);


   SetRentalBondAuthority.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.rentalBondAuthority.workPhone);

    GetRentalBondAuthority.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.rentalBondAuthority.workPhone);


   SetRentalBondAuthority.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.rentalBondAuthority.contactedWithDetails);

    GetRentalBondAuthority.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.rentalBondAuthority.contactedWithDetails);


   SetRentalBondAuthority.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.rentalBondAuthority.businessChannelOwnerId);

    GetRentalBondAuthority.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.rentalBondAuthority.businessChannelOwnerId);


   SetRentalBondAuthority.PropertyId(
     [in] CProperty.property CRegulator.rentalBondAuthority.propertyId);

    GetRentalBondAuthority.PropertyId(
     [out] CProperty.property* CRegulator.rentalBondAuthority.propertyId);


   SetRentalBondAuthority.TenancyId(
     [in] CProperty.tenant CRegulator.rentalBondAuthority.tenancyId);

    GetRentalBondAuthority.TenancyId(
     [out] CProperty.tenant* CRegulator.rentalBondAuthority.tenancyId);


   SetRentalBondAuthority.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.rentalBondAuthority.docRefIds);

    GetRentalBondAuthority.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.rentalBondAuthority.docRefIds);


   SetRentalBondAuthority.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.rentalBondAuthority.imageRefIds);

    GetRentalBondAuthority.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.rentalBondAuthority.imageRefIds);


   SetATO.ATOId(
     [in] String CRegulator.aTO.ATOId);

    GetATO.ATOId(
     [out] String* CRegulator.aTO.ATOId);


   SetATO.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.aTO.contactFirstNameList);

    GetATO.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.aTO.contactFirstNameList);


   SetATO.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.aTO.contactLastNameList);

    GetATO.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.aTO.contactLastNameList);


   SetATO.StreetAddress(
     [in] String CRegulator.aTO.streetAddress);

    GetATO.StreetAddress(
     [out] String* CRegulator.aTO.streetAddress);


   SetATO.PostalAddress(
     [in] String CRegulator.aTO.postalAddress);

    GetATO.PostalAddress(
     [out] String* CRegulator.aTO.postalAddress);


   SetATO.EmailAddresses(
     [in] ArrayOf<String> CRegulator.aTO.emailAddresses);

    GetATO.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.aTO.emailAddresses);


   SetATO.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.aTO.mobilePhone);

    GetATO.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.aTO.mobilePhone);


   SetATO.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.aTO.workPhone);

    GetATO.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.aTO.workPhone);


   SetATO.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.aTO.contactedWithDetails);

    GetATO.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.aTO.contactedWithDetails);


   SetATO.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.aTO.docRefIds);

    GetATO.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.aTO.docRefIds);


   SetATO.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.aTO.businessChannelOwnerId);

    GetATO.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.aTO.businessChannelOwnerId);


   SetASIC.ASICId(
     [in] String CRegulator.aSIC.aSICId);

    GetASIC.ASICId(
     [out] String* CRegulator.aSIC.aSICId);


   SetASIC.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.aSIC.contactFirstNameList);

    GetASIC.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.aSIC.contactFirstNameList);


   SetASIC.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.aSIC.contactLastNameList);

    GetASIC.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.aSIC.contactLastNameList);


   SetASIC.StreetAddress(
     [in] String CRegulator.aSIC.streetAddress);

    GetASIC.StreetAddress(
     [out] String* CRegulator.aSIC.streetAddress);


   SetASIC.PostalAddress(
     [in] String CRegulator.aSIC.postalAddress);

    GetASIC.PostalAddress(
     [out] String* CRegulator.aSIC.postalAddress);


   SetASIC.EmailAddresses(
     [in] ArrayOf<String> CRegulator.aSIC.emailAddresses);

    GetASIC.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.aSIC.emailAddresses);


   SetASIC.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.aSIC.mobilePhone);

    GetASIC.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.aSIC.mobilePhone);


   SetASIC.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.aSIC.workPhone);

    GetASIC.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.aSIC.workPhone);


   SetASIC.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.aSIC.contactedWithDetails);

    GetASIC.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.aSIC.contactedWithDetails);


   SetASIC.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.aSIC.docRefIds);

    GetASIC.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.aSIC.docRefIds);


   SetASIC.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.aSIC.imageRefIds);

    GetASIC.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.aSIC.imageRefIds);


   SetASIC.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.aSIC.businessChannelOwnerId);

    GetASIC.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.aSIC.businessChannelOwnerId);


   SetACNC.ACNCId(
     [in] String CRegulator.aCNC.aCNCId);

    GetACNC.ACNCId(
     [out] String* CRegulator.aCNC.aCNCId);


   SetACNC.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.aCNC.contactFirstNameList);

    GetACNC.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.aCNC.contactFirstNameList);


   SetACNC.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.aCNC.contactLastNameList);

    GetACNC.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.aCNC.contactLastNameList);


   SetACNC.StreetAddress(
     [in] String CRegulator.aCNC.streetAddress);

    GetACNC.StreetAddress(
     [out] String* CRegulator.aCNC.streetAddress);


   SetACNC.PostalAddress(
     [in] String CRegulator.aCNC.postalAddress);

    GetACNC.PostalAddress(
     [out] String* CRegulator.aCNC.postalAddress);


   SetACNC.EmailAddresses(
     [in] ArrayOf<String> CRegulator.aCNC.emailAddresses);

    GetACNC.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.aCNC.emailAddresses);


   SetACNC.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.aCNC.mobilePhone);

    GetACNC.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.aCNC.mobilePhone);


   SetACNC.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.aCNC.workPhone);

    GetACNC.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.aCNC.workPhone);


   SetACNC.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.aCNC.contactedWithDetails);

    GetACNC.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.aCNC.contactedWithDetails);


   SetACNC.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.aCNC.docRefIds);

    GetACNC.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.aCNC.docRefIds);


   SetACNC.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.aCNC.imageRefIds);

    GetACNC.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.aCNC.imageRefIds);


   SetACNC.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.aCNC.businessChannelOwnerId);

    GetACNC.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.aCNC.businessChannelOwnerId);


   SetNationalRegulator.NatRegId(
     [in] String CRegulator.nationalRegulator.natRegId);

    GetNationalRegulator.NatRegId(
     [out] String* CRegulator.nationalRegulator.natRegId);


   SetNationalRegulator.NatRegName(
     [in] String CRegulator.nationalRegulator.natRegName);

    GetNationalRegulator.NatRegName(
     [out] String* CRegulator.nationalRegulator.natRegName);


   SetNationalRegulator.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.nationalRegulator.contactFirstNameList);

    GetNationalRegulator.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.nationalRegulator.contactFirstNameList);


   SetNationalRegulator.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.nationalRegulator.contactLastNameList);

    GetNationalRegulator.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.nationalRegulator.contactLastNameList);


   SetNationalRegulator.StreetAddress(
     [in] String CRegulator.nationalRegulator.streetAddress);

    GetNationalRegulator.StreetAddress(
     [out] String* CRegulator.nationalRegulator.streetAddress);


   SetNationalRegulator.PostalAddress(
     [in] String CRegulator.nationalRegulator.postalAddress);

    GetNationalRegulator.PostalAddress(
     [out] String* CRegulator.nationalRegulator.postalAddress);


   SetNationalRegulator.EmailAddresses(
     [in] ArrayOf<String> CRegulator.nationalRegulator.emailAddresses);

    GetNationalRegulator.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.nationalRegulator.emailAddresses);


   SetNationalRegulator.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.nationalRegulator.mobilePhone);

    GetNationalRegulator.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.nationalRegulator.mobilePhone);


   SetNationalRegulator.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.nationalRegulator.workPhone);

    GetNationalRegulator.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.nationalRegulator.workPhone);


   SetNationalRegulator.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.nationalRegulator.contactedWithDetails);

    GetNationalRegulator.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.nationalRegulator.contactedWithDetails);


   SetNationalRegulator.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.nationalRegulator.docRefIds);

    GetNationalRegulator.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.nationalRegulator.docRefIds);


   SetNationalRegulator.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.nationalRegulator.imageRefIds);

    GetNationalRegulator.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.nationalRegulator.imageRefIds);


   SetNationalRegulator.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.nationalRegulator.businessChannelOwnerId);

    GetNationalRegulator.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.nationalRegulator.businessChannelOwnerId);


   SetStateBasedRegulator.StateBasedRegId(
     [in] String CRegulator.stateBasedRegulator.stateBasedRegId);

    GetStateBasedRegulator.StateBasedRegId(
     [out] String* CRegulator.stateBasedRegulator.stateBasedRegId);


   SetStateBasedRegulator.StateBasedRegName(
     [in] String CRegulator.stateBasedRegulator.stateBasedRegName);

    GetStateBasedRegulator.StateBasedRegName(
     [out] String* CRegulator.stateBasedRegulator.stateBasedRegName);


   SetStateBasedRegulator.AusState(
     [in] CHelper.ausState CRegulator.stateBasedRegulator.ausState);

    GetStateBasedRegulator.AusState(
     [out] CHelper.ausState* CRegulator.stateBasedRegulator.ausState);


   SetStateBasedRegulator.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.stateBasedRegulator.contactFirstNameList);

    GetStateBasedRegulator.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.stateBasedRegulator.contactFirstNameList);


   SetStateBasedRegulator.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.stateBasedRegulator.contactLastNameList);

    GetStateBasedRegulator.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.stateBasedRegulator.contactLastNameList);


   SetStateBasedRegulator.StreetAddress(
     [in] String CRegulator.stateBasedRegulator.streetAddress);

    GetStateBasedRegulator.StreetAddress(
     [out] String* CRegulator.stateBasedRegulator.streetAddress);


   SetStateBasedRegulator.PostalAddress(
     [in] String CRegulator.stateBasedRegulator.postalAddress);

    GetStateBasedRegulator.PostalAddress(
     [out] String* CRegulator.stateBasedRegulator.postalAddress);


   SetStateBasedRegulator.EmailAddresses(
     [in] ArrayOf<String> CRegulator.stateBasedRegulator.emailAddresses);

    GetStateBasedRegulator.EmailAddresses(
     [out, callee] ArrayOf<String>* CRegulator.stateBasedRegulator.emailAddresses);


   SetStateBasedRegulator.MobilePhone(
     [in] ArrayOf<Int32> CRegulator.stateBasedRegulator.mobilePhone);

    GetStateBasedRegulator.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegulator.stateBasedRegulator.mobilePhone);


   SetStateBasedRegulator.WorkPhone(
     [in] ArrayOf<Int32> CRegulator.stateBasedRegulator.workPhone);

    GetStateBasedRegulator.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegulator.stateBasedRegulator.workPhone);


   SetStateBasedRegulator.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.stateBasedRegulator.contactedWithDetails);

    GetStateBasedRegulator.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.stateBasedRegulator.contactedWithDetails);


   SetStateBasedRegulator.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.stateBasedRegulator.docRefIds);

    GetStateBasedRegulator.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.stateBasedRegulator.docRefIds);


   SetStateBasedRegulator.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.stateBasedRegulator.imageRefIds);

    GetStateBasedRegulator.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.stateBasedRegulator.imageRefIds);


   SetStateBasedRegulator.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.stateBasedRegulator.businessChannelOwnerId);

    GetStateBasedRegulator.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.stateBasedRegulator.businessChannelOwnerId);


   SetStateLandTitleRegistry.LandTitleRegistryId(
     [in] String CRegulator.stateLandTitleRegistry.landTitleRegistryId);

    GetStateLandTitleRegistry.LandTitleRegistryId(
     [out] String* CRegulator.stateLandTitleRegistry.landTitleRegistryId);


   SetStateLandTitleRegistry.AuthorityName(
     [in] String CRegulator.stateLandTitleRegistry.authorityName);

    GetStateLandTitleRegistry.AuthorityName(
     [out] String* CRegulator.stateLandTitleRegistry.authorityName);


   SetStateLandTitleRegistry.AusState(
     [in] CHelper.ausState CRegulator.stateLandTitleRegistry.ausState);

    GetStateLandTitleRegistry.AusState(
     [out] CHelper.ausState* CRegulator.stateLandTitleRegistry.ausState);


   SetStateLandTitleRegistry.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.stateLandTitleRegistry.contactFirstNameList);

    GetStateLandTitleRegistry.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.stateLandTitleRegistry.contactFirstNameList);


   SetStateLandTitleRegistry.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.stateLandTitleRegistry.contactLastNameList);

    GetStateLandTitleRegistry.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.stateLandTitleRegistry.contactLastNameList);


   SetStateLandTitleRegistry.StreetAddress(
     [in] String CRegulator.stateLandTitleRegistry.streetAddress);

    GetStateLandTitleRegistry.StreetAddress(
     [out] String* CRegulator.stateLandTitleRegistry.streetAddress);


   SetStateLandTitleRegistry.PostalAddress(
     [in] String CRegulator.stateLandTitleRegistry.postalAddress);

    GetStateLandTitleRegistry.PostalAddress(
     [out] String* CRegulator.stateLandTitleRegistry.postalAddress);


   SetStateLandTitleRegistry.Email(
     [in] String CRegulator.stateLandTitleRegistry.email);

    GetStateLandTitleRegistry.Email(
     [out] String* CRegulator.stateLandTitleRegistry.email);


   SetStateLandTitleRegistry.MobilePhone(
     [in] Int32 CRegulator.stateLandTitleRegistry.mobilePhone);

    GetStateLandTitleRegistry.MobilePhone(
     [out] Int32* CRegulator.stateLandTitleRegistry.mobilePhone);


   SetStateLandTitleRegistry.WorkPhone(
     [in] Int32 CRegulator.stateLandTitleRegistry.workPhone);

    GetStateLandTitleRegistry.WorkPhone(
     [out] Int32* CRegulator.stateLandTitleRegistry.workPhone);


   SetStateLandTitleRegistry.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.stateLandTitleRegistry.contactedWithDetails);

    GetStateLandTitleRegistry.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.stateLandTitleRegistry.contactedWithDetails);


   SetStateLandTitleRegistry.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.stateLandTitleRegistry.businessChannelOwnerId);

    GetStateLandTitleRegistry.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.stateLandTitleRegistry.businessChannelOwnerId);


   SetStateLandTitleRegistry.PropertyId(
     [in] CProperty.property CRegulator.stateLandTitleRegistry.propertyId);

    GetStateLandTitleRegistry.PropertyId(
     [out] CProperty.property* CRegulator.stateLandTitleRegistry.propertyId);


   SetStateLandTitleRegistry.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.stateLandTitleRegistry.docRefIds);

    GetStateLandTitleRegistry.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.stateLandTitleRegistry.docRefIds);


   SetStateLandTitleRegistry.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.stateLandTitleRegistry.imageRefIds);

    GetStateLandTitleRegistry.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.stateLandTitleRegistry.imageRefIds);


   SetNCAT.TribunalId(
     [in] String CRegulator.nCAT.tribunalId);

    GetNCAT.TribunalId(
     [out] String* CRegulator.nCAT.tribunalId);


   SetNCAT.AuthorityName(
     [in] String CRegulator.nCAT.authorityName);

    GetNCAT.AuthorityName(
     [out] String* CRegulator.nCAT.authorityName);


   SetNCAT.AusState(
     [in] CHelper.ausState CRegulator.nCAT.ausState);

    GetNCAT.AusState(
     [out] CHelper.ausState* CRegulator.nCAT.ausState);


   SetNCAT.ContactFirstNameList(
     [in] ArrayOf<String> CRegulator.nCAT.contactFirstNameList);

    GetNCAT.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.contactFirstNameList);


   SetNCAT.ContactLastNameList(
     [in] ArrayOf<String> CRegulator.nCAT.contactLastNameList);

    GetNCAT.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.contactLastNameList);


   SetNCAT.StreetAddress(
     [in] String CRegulator.nCAT.streetAddress);

    GetNCAT.StreetAddress(
     [out] String* CRegulator.nCAT.streetAddress);


   SetNCAT.PostalAddress(
     [in] String CRegulator.nCAT.postalAddress);

    GetNCAT.PostalAddress(
     [out] String* CRegulator.nCAT.postalAddress);


   SetNCAT.Email(
     [in] String CRegulator.nCAT.email);

    GetNCAT.Email(
     [out] String* CRegulator.nCAT.email);


   SetNCAT.MobilePhone(
     [in] Int32 CRegulator.nCAT.mobilePhone);

    GetNCAT.MobilePhone(
     [out] Int32* CRegulator.nCAT.mobilePhone);


   SetNCAT.WorkPhone(
     [in] Int32 CRegulator.nCAT.workPhone);

    GetNCAT.WorkPhone(
     [out] Int32* CRegulator.nCAT.workPhone);


   SetNCAT.CaseDetailsActsResponsesAllegationsRebuttals(
     [in] ArrayOf<String> CRegulator.nCAT.caseDetailsActsResponsesAllegationsRebuttals);

    GetNCAT.CaseDetailsActsResponsesAllegationsRebuttals(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.caseDetailsActsResponsesAllegationsRebuttals);


   SetNCAT.DateTimeDetailsInChronologicalOrder(
     [in] ArrayOf<String> CRegulator.nCAT.dateTimeDetailsInChronologicalOrder);

    GetNCAT.DateTimeDetailsInChronologicalOrder(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.dateTimeDetailsInChronologicalOrder);


   SetNCAT.AdjournedOn(
     [in] ArrayOf<String> CRegulator.nCAT.adjournedOn);

    GetNCAT.AdjournedOn(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.adjournedOn);


   SetNCAT.AdjournedUntil(
     [in] ArrayOf<String> CRegulator.nCAT.adjournedUntil);

    GetNCAT.AdjournedUntil(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.adjournedUntil);


   SetNCAT.ContactedWithDetails(
     [in] ArrayOf<String> CRegulator.nCAT.contactedWithDetails);

    GetNCAT.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegulator.nCAT.contactedWithDetails);


   SetNCAT.BusinessChannelOwnerId(
     [in] CRegister.businessChannelOwner CRegulator.nCAT.businessChannelOwnerId);

    GetNCAT.BusinessChannelOwnerId(
     [out] CRegister.businessChannelOwner* CRegulator.nCAT.businessChannelOwnerId);


   SetNCAT.PropertyId(
     [in] CProperty.property CRegulator.nCAT.propertyId);

    GetNCAT.PropertyId(
     [out] CProperty.property* CRegulator.nCAT.propertyId);


   SetNCAT.TenancyId(
     [in] CProperty.tenant CRegulator.nCAT.tenancyId);

    GetNCAT.TenancyId(
     [out] CProperty.tenant* CRegulator.nCAT.tenancyId);


   SetNCAT.BranchId(
     [in] CAdministration.branch CRegulator.nCAT.branchId);

    GetNCAT.BranchId(
     [out] CAdministration.branch* CRegulator.nCAT.branchId);


   SetNCAT.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegulator.nCAT.docRefIds);

    GetNCAT.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegulator.nCAT.docRefIds);


   SetNCAT.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegulator.nCAT.imageRefIds);

    GetNCAT.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegulator.nCAT.imageRefIds);
 
 


   SetSideChainOperator.SideChainOperatorId(
     [in] String CRegister.sideChainOperator.sideChainOperatorId);

    GetSideChainOperator.SideChainOperatorId(
     [out] String* CRegister.sideChainOperator.sideChainOperatorId);


   SetSideChainOperator.EquivalentBusinessChannelOwnerId(
     [in] String CRegister.sideChainOperator.equivalentBusinessChannelOwnerId);

    GetSideChainOperator.EquivalentBusinessChannelOwnerId(
     [out] String* CRegister.sideChainOperator.equivalentBusinessChannelOwnerId);


   SetSideChainOperator.BankName(
     [in] String CRegister.sideChainOperator.bankName);

    GetSideChainOperator.BankName(
     [out] String* CRegister.sideChainOperator.bankName);


   SetSideChainOperator.BankBSB(
     [in] String CRegister.sideChainOperator.bankBSB);

    GetSideChainOperator.BankBSB(
     [out] String* CRegister.sideChainOperator.bankBSB);


   SetSideChainOperator.BankAccNum(
     [in] String CRegister.sideChainOperator.bankAccNum);

    GetSideChainOperator.BankAccNum(
     [out] String* CRegister.sideChainOperator.bankAccNum);


   SetSideChainOperator.BusinessName(
     [in] String CRegister.sideChainOperator.businessName);

    GetSideChainOperator.BusinessName(
     [out] String* CRegister.sideChainOperator.businessName);


   SetSideChainOperator.ContactFirstNameList(
     [in] ArrayOf<String> CRegister.sideChainOperator.contactFirstNameList);

    GetSideChainOperator.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegister.sideChainOperator.contactFirstNameList);


   SetSideChainOperator.ContactLastNameList(
     [in] ArrayOf<String> CRegister.sideChainOperator.contactLastNameList);

    GetSideChainOperator.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegister.sideChainOperator.contactLastNameList);


   SetSideChainOperator.StreetAddress(
     [in] String CRegister.sideChainOperator.streetAddress);

    GetSideChainOperator.StreetAddress(
     [out] String* CRegister.sideChainOperator.streetAddress);


   SetSideChainOperator.PostalAddress(
     [in] String CRegister.sideChainOperator.postalAddress);

    GetSideChainOperator.PostalAddress(
     [out] String* CRegister.sideChainOperator.postalAddress);


   SetSideChainOperator.EmailAddressList(
     [in] ArrayOf<String> CRegister.sideChainOperator.emailAddressList);

    GetSideChainOperator.EmailAddressList(
     [out, callee] ArrayOf<String>* CRegister.sideChainOperator.emailAddressList);


   SetSideChainOperator.WorkPhone(
     [in] ArrayOf<Int32> CRegister.sideChainOperator.workPhone);

    GetSideChainOperator.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegister.sideChainOperator.workPhone);


   SetSideChainOperator.MobilePhone(
     [in] ArrayOf<Int32> CRegister.sideChainOperator.mobilePhone);

    GetSideChainOperator.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegister.sideChainOperator.mobilePhone);


   SetSideChainOperator.HomePhone(
     [in] ArrayOf<Int32> CRegister.sideChainOperator.homePhone);

    GetSideChainOperator.HomePhone(
     [out, callee] ArrayOf<Int32>* CRegister.sideChainOperator.homePhone);


   SetSideChainOperator.ATOTFN(
     [in] String CRegister.sideChainOperator.aTOTFN);

    GetSideChainOperator.ATOTFN(
     [out] String* CRegister.sideChainOperator.aTOTFN);


   SetSideChainOperator.ABN(
     [in] String CRegister.sideChainOperator.aBN);

    GetSideChainOperator.ABN(
     [out] String* CRegister.sideChainOperator.aBN);


   SetSideChainOperator.ACN(
     [in] String CRegister.sideChainOperator.aCN);

    GetSideChainOperator.ACN(
     [out] String* CRegister.sideChainOperator.aCN);


   SetSideChainOperator.StartTaxYear(
     [in] String CRegister.sideChainOperator.startTaxYear);

    GetSideChainOperator.StartTaxYear(
     [out] String* CRegister.sideChainOperator.startTaxYear);


   SetSideChainOperator.NextFinTxNum(
     [in] Int32 CRegister.sideChainOperator.nextFinTxNum);

    GetSideChainOperator.NextFinTxNum(
     [out] Int32* CRegister.sideChainOperator.nextFinTxNum);


   SetSideChainOperator.NextJobNumPerformed(
     [in] Int32 CRegister.sideChainOperator.nextJobNumPerformed);

    GetSideChainOperator.NextJobNumPerformed(
     [out] Int32* CRegister.sideChainOperator.nextJobNumPerformed);


   SetSideChainOperator.NextLinkingInternalBudgetNum(
     [in] Int32 CRegister.sideChainOperator.nextLinkingInternalBudgetNum);

    GetSideChainOperator.NextLinkingInternalBudgetNum(
     [out] Int32* CRegister.sideChainOperator.nextLinkingInternalBudgetNum);


   SetSideChainOperator.ChartOfAccountsIds(
     [in] ArrayOf<CFinance.chartOfAccounts> CRegister.sideChainOperator.chartOfAccountsIds);

    GetSideChainOperator.ChartOfAccountsIds(
     [out, callee] ArrayOf<CFinance.chartOfAccounts>* CRegister.sideChainOperator.chartOfAccountsIds);


   SetSideChainOperator.ChartOfClassesIds(
     [in] ArrayOf<CFinance.chartOfClasses> CRegister.sideChainOperator.chartOfClassesIds);

    GetSideChainOperator.ChartOfClassesIds(
     [out, callee] ArrayOf<CFinance.chartOfClasses>* CRegister.sideChainOperator.chartOfClassesIds);


   SetSideChainOperator.BusinessDirectorIds(
     [in] ArrayOf<CAdministration.businessDirector> CRegister.sideChainOperator.businessDirectorIds);

    GetSideChainOperator.BusinessDirectorIds(
     [out, callee] ArrayOf<CAdministration.businessDirector>* CRegister.sideChainOperator.businessDirectorIds);


   SetSideChainOperator.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegister.sideChainOperator.docRefIds);

    GetSideChainOperator.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegister.sideChainOperator.docRefIds);


   SetSideChainOperator.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegister.sideChainOperator.imageRefIds);

    GetSideChainOperator.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegister.sideChainOperator.imageRefIds);


   SetBusinessChannelOwner.BusinessChannelOwnerId(
     [in] String CRegister.businessChannelOwner.businessChannelOwnerId);

    GetBusinessChannelOwner.BusinessChannelOwnerId(
     [out] String* CRegister.businessChannelOwner.businessChannelOwnerId);


   SetBusinessChannelOwner.LinkedToThisSideChainOperatorId(
     [in] String CRegister.businessChannelOwner.linkedToThisSideChainOperatorId);

    GetBusinessChannelOwner.LinkedToThisSideChainOperatorId(
     [out] String* CRegister.businessChannelOwner.linkedToThisSideChainOperatorId);


   SetBusinessChannelOwner.LinkedToThisSupplierId(
     [in] String CRegister.businessChannelOwner.linkedToThisSupplierId);

    GetBusinessChannelOwner.LinkedToThisSupplierId(
     [out] String* CRegister.businessChannelOwner.linkedToThisSupplierId);


   SetBusinessChannelOwner.LinkedToThisSolicitorId(
     [in] String CRegister.businessChannelOwner.linkedToThisSolicitorId);

    GetBusinessChannelOwner.LinkedToThisSolicitorId(
     [out] String* CRegister.businessChannelOwner.linkedToThisSolicitorId);


   SetBusinessChannelOwner.LinkedToThisEmployeeId(
     [in] String CRegister.businessChannelOwner.linkedToThisEmployeeId);

    GetBusinessChannelOwner.LinkedToThisEmployeeId(
     [out] String* CRegister.businessChannelOwner.linkedToThisEmployeeId);


   SetBusinessChannelOwner.LinkedToThisCustomerId(
     [in] String CRegister.businessChannelOwner.linkedToThisCustomerId);

    GetBusinessChannelOwner.LinkedToThisCustomerId(
     [out] String* CRegister.businessChannelOwner.linkedToThisCustomerId);


   SetBusinessChannelOwner.LinkedToThisStakeholderId(
     [in] String CRegister.businessChannelOwner.linkedToThisStakeholderId);

    GetBusinessChannelOwner.LinkedToThisStakeholderId(
     [out] String* CRegister.businessChannelOwner.linkedToThisStakeholderId);


   SetBusinessChannelOwner.LinkedToThisRegulatorId(
     [in] String CRegister.businessChannelOwner.linkedToThisRegulatorId);

    GetBusinessChannelOwner.LinkedToThisRegulatorId(
     [out] String* CRegister.businessChannelOwner.linkedToThisRegulatorId);

   SetBusinessChannelOwner.LinkedToThisBankId(
     [in] String CRegister.businessChannelOwner.linkedToThisBankId);

    GetBusinessChannelOwner.LinkedToThisBankId(
     [out] String* CRegister.businessChannelOwner.linkedToThisBankId);


   SetBusinessChannelOwner.BankName(
     [in] String CRegister.businessChannelOwner.bankName);

    GetBusinessChannelOwner.BankName(
     [out] String* CRegister.businessChannelOwner.bankName);


   SetBusinessChannelOwner.BankBSB(
     [in] String CRegister.businessChannelOwner.bankBSB);

    GetBusinessChannelOwner.BankBSB(
     [out] String* CRegister.businessChannelOwner.bankBSB);


   SetBusinessChannelOwner.BankAccNum(
     [in] String CRegister.businessChannelOwner.bankAccNum);

    GetBusinessChannelOwner.BankAccNum(
     [out] String* CRegister.businessChannelOwner.bankAccNum);


   SetBusinessChannelOwner.AllBranchIds(
     [in] ArrayOf<String> CRegister.businessChannelOwner.allBranchIds);

    GetBusinessChannelOwner.AllBranchIds(
     [out, callee] ArrayOf<String>* CRegister.businessChannelOwner.allBranchIds);


   SetBusinessChannelOwner.BusinessName(
     [in] String CRegister.businessChannelOwner.businessName);

    GetBusinessChannelOwner.BusinessName(
     [out] String* CRegister.businessChannelOwner.businessName);


   SetBusinessChannelOwner.ContactFirstNameList(
     [in] ArrayOf<String> CRegister.businessChannelOwner.contactFirstNameList);

    GetBusinessChannelOwner.ContactFirstNameList(
     [out, callee] ArrayOf<String>* CRegister.businessChannelOwner.contactFirstNameList);


   SetBusinessChannelOwner.ContactLastNameList(
     [in] ArrayOf<String> CRegister.businessChannelOwner.contactLastNameList);

    GetBusinessChannelOwner.ContactLastNameList(
     [out, callee] ArrayOf<String>* CRegister.businessChannelOwner.contactLastNameList);


   SetBusinessChannelOwner.StreetAddress(
     [in] String CRegister.businessChannelOwner.streetAddress);

    GetBusinessChannelOwner.StreetAddress(
     [out] String* CRegister.businessChannelOwner.streetAddress);


   SetBusinessChannelOwner.PostalAddress(
     [in] String CRegister.businessChannelOwner.postalAddress);

    GetBusinessChannelOwner.PostalAddress(
     [out] String* CRegister.businessChannelOwner.postalAddress);


   SetBusinessChannelOwner.EmailAddressList(
     [in] ArrayOf<String> CRegister.businessChannelOwner.emailAddressList);

    GetBusinessChannelOwner.EmailAddressList(
     [out, callee] ArrayOf<String>* CRegister.businessChannelOwner.emailAddressList);


   SetBusinessChannelOwner.WorkPhone(
     [in] ArrayOf<Int32> CRegister.businessChannelOwner.workPhone);

    GetBusinessChannelOwner.WorkPhone(
     [out, callee] ArrayOf<Int32>* CRegister.businessChannelOwner.workPhone);


   SetBusinessChannelOwner.MobilePhone(
     [in] ArrayOf<Int32> CRegister.businessChannelOwner.mobilePhone);

    GetBusinessChannelOwner.MobilePhone(
     [out, callee] ArrayOf<Int32>* CRegister.businessChannelOwner.mobilePhone);


   SetBusinessChannelOwner.HomePhone(
     [in] ArrayOf<Int32> CRegister.businessChannelOwner.homePhone);

    GetBusinessChannelOwner.HomePhone(
     [out, callee] ArrayOf<Int32>* CRegister.businessChannelOwner.homePhone);


   SetBusinessChannelOwner.ATOTFN(
     [in] String CRegister.businessChannelOwner.aTOTFN);

    GetBusinessChannelOwner.ATOTFN(
     [out] String* CRegister.businessChannelOwner.aTOTFN);


   SetBusinessChannelOwner.ABN(
     [in] String CRegister.businessChannelOwner.aBN);

    GetBusinessChannelOwner.ABN(
     [out] String* CRegister.businessChannelOwner.aBN);


   SetBusinessChannelOwner.ACN(
     [in] String CRegister.businessChannelOwner.aCN);

    GetBusinessChannelOwner.ACN(
     [out] String* CRegister.businessChannelOwner.aCN);


   SetBusinessChannelOwner.StartTaxYear(
     [in] String CRegister.businessChannelOwner.startTaxYear);

    GetBusinessChannelOwner.StartTaxYear(
     [out] String* CRegister.businessChannelOwner.startTaxYear);


   SetBusinessChannelOwner.NextFinTxNum(
     [in] Int32 CRegister.businessChannelOwner.nextFinTxNum);

    GetBusinessChannelOwner.NextFinTxNum(
     [out] Int32* CRegister.businessChannelOwner.nextFinTxNum);


   SetBusinessChannelOwner.NextJobNumPerformed(
     [in] Int32 CRegister.businessChannelOwner.nextJobNumPerformed);

    GetBusinessChannelOwner.NextJobNumPerformed(
     [out] Int32* CRegister.businessChannelOwner.nextJobNumPerformed);


   SetBusinessChannelOwner.NextLinkingInternalBudgetNum(
     [in] Int32 CRegister.businessChannelOwner.nextLinkingInternalBudgetNum);

    GetBusinessChannelOwner.NextLinkingInternalBudgetNum(
     [out] Int32* CRegister.businessChannelOwner.nextLinkingInternalBudgetNum);


   SetBusinessChannelOwner.ContactedWithDetails(
     [in] ArrayOf<String> CRegister.businessChannelOwner.contactedWithDetails);

    GetBusinessChannelOwner.ContactedWithDetails(
     [out, callee] ArrayOf<String>* CRegister.businessChannelOwner.contactedWithDetails);


   SetBusinessChannelOwner.Active(
     [in] Boolean CRegister.businessChannelOwner.active);

    GetBusinessChannelOwner.Active(
     [out] Boolean* CRegister.businessChannelOwner.active);


   SetBusinessChannelOwner.ChartOfAccountsIds(
     [in] ArrayOf<CFinance.chartOfAccounts> CRegister.businessChannelOwner.chartOfAccountsIds);

    GetBusinessChannelOwner.ChartOfAccountsIds(
     [out, callee] ArrayOf<CFinance.chartOfAccounts>* CRegister.businessChannelOwner.chartOfAccountsIds);


   SetBusinessChannelOwner.ChartOfClassesIds(
     [in] ArrayOf<CFinance.chartOfClasses> CRegister.businessChannelOwner.chartOfClassesIds);

    GetBusinessChannelOwner.ChartOfClassesIds(
     [out, callee] ArrayOf<CFinance.chartOfClasses>* CRegister.businessChannelOwner.chartOfClassesIds);


   SetBusinessChannelOwner.BusinessDirectorIds(
     [in] ArrayOf<CAdministration.businessDirector> CRegister.businessChannelOwner.businessDirectorIds);

    GetBusinessChannelOwner.BusinessDirectorIds(
     [out, callee] ArrayOf<CAdministration.businessDirector>* CRegister.businessChannelOwner.businessDirectorIds);


   SetBusinessChannelOwner.DocRefIds(
     [in] ArrayOf<CAdministration.documents> CRegister.businessChannelOwner.docRefIds);

    GetBusinessChannelOwner.DocRefIds(
     [out, callee] ArrayOf<CAdministration.documents>* CRegister.businessChannelOwner.docRefIds);


   SetBusinessChannelOwner.ImageRefIds(
     [in] ArrayOf<CAdministration.images> CRegister.businessChannelOwner.imageRefIds);

    GetBusinessChannelOwner.ImageRefIds(
     [out, callee] ArrayOf<CAdministration.images>* CRegister.businessChannelOwner.imageRefIds);

}

    

    using interface Elastos.Core.IComparable;   // using declarations
    using interface Elastos.Core.IParcelable;

    namespace Elastos {                         // namespace
    namespace ChubbaMorris {

   class Cproperty {
       constructor();              // explicitly declare constructor that has no parameter

      interface ICH;

typedef struct {
    String propertyId
    String propertyAddressString
    String unitNumber
    String streetNumber
    String streetName
    String suburbTown
    Int32 postcode
 CHelper.ausState state
    String envelopeGreetings
    String correspondenceFolderDocRef
    String startDateLatestLease
    String endDateLatestLease
    Boolean occupied
    String localGovArea
    String zoning
    String lot
    String dP
    String sP
    String dCPNum
    String parish
    String description
    Double lon
    Double lat
    Double elevation
    Boolean liens
    Int32 numBedrooms
    Int32 numEnsuites
    Int32 numBathrooms
    Int32 numStoreys
    Boolean furnished
    String constructionTypeName
    String folioCertCopyDocRef 
    String copyOfDepositedPlanDocRef 
    ArrayOf<String> copiesOfLiensDocrefs 
    String copyOfBuildingCertDocRef 
    String copyOfInsuranceCertDocRef 
    String folderContainingWarrantiesDocRef 
    String copyOfPlanningCertSection149DEPADocRef 
    String copyOfSection88GCertDocRef 
    String folderContainingAdditionalAnnexuresDocRef 
    String folderContainingAdditionalDisclosuresDocRef 
    ArrayOf<String> copyOfSurveyReportsDocRefs
    ArrayOf<String> drainageDiagsSewerRefSheetsDocRefs
    ArrayOf<String> buildingInspectionDocRefs
    ArrayOf<String> pestInspectionDocRefs
    ArrayOf<String> problemsWithpropertyDocRefs
    ArrayOf<Double> propertyOwnerSharePercents
    Double capitalValue
    Double floorPrice
    Double latestBuyOfferPrice
    String latestBuyOfferDateTime
    Boolean latestBuyOfferPriceAccepted
    ArrayOf<String> latestBuyOfferNotes
    Double rentalValue
    Double landTotalSquareMetres
    Double landTotalHectares
    Double buildingTotalSquareMetres
    ArrayOf<String> amenities
 CHelper.propertyTradingBasis propertyTradingBasis
 CHelper.propertyType propertyType
 CHelper.leaseType leaseType
 CHelper.leaseArrangement leaseArrangement
 CHelper.leasingTerm leasingTerm
 CHelper.billingInterval rentalbillingInterval
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 CProperty.propertyConstructionType propertyConstructionTypeId
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} property;

typedef struct {
    String propertyConstructionTypeId
    String constructionTypeName
    String description
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
 ArrayOf<CAdministration.riskRegister> riskIds
 CRegister.businessChannelOwner businessChannelOwnerId
} propertyConstructionType;

typedef struct {
    String propertyOwnerId
    String linkedToThiscustomerId
    String linkedToThissupplierId
    String firstName
    String lastName
    String residentialAddress
    String postalAddress
    String email
    Int32 homePhone
    Int32 mobilePhone
    Int32 workPhone
    String bankName
    Int32 bankBSB
    Int32 bankAccountNumber
    ArrayOf<String> contactedWithDetails
    ArrayOf<Double> sharesPercents
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CProperty.property> propertyIds
 CCustomer.customer customerId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} propertyOwner;

typedef struct {
  String programId
  String programName
  String description
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} program;

typedef struct {
  String projectId
  String projectName
  String description
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} project;

typedef struct {
    String advertScheduleId
 CHelper.advertisingMedium advertisingMedium
    String previousSchedId
 CHelper.month month
    Double budgetedAmount
    ArrayOf<String> runDateTimes
 CProperty.property propertyId
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 ArrayOf<CAdministration.advertisingTemplatesPlans> advertDesignIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} advertisingBudgetSchedule;

typedef struct {
    String allocationId
    ArrayOf<String> applicationIds
    ArrayOf<String> docRefs
    ArrayOf<String> notes
    String dateOfEffect
 CProperty.property propertyId
 CCustomer.application successfulApplicationId
 CProperty.tenant successfulTenancyId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} allocation;

typedef struct {
    String tenancyId
    String aBN
    String businessName
    String firstName
    String lastName
    String residentialAddress
    String postalAddress
    String email
    Int32 homePhone
    Int32 mobilePhone
    Int32 workPhone
    ArrayOf<String> contactedWithDetails
 CProperty.allocation allocationId
 ArrayOf<CCustomer.applicant> applicantIds
 CCustomer.customer customerId
 CProperty.property propertyId
 CAdministration.branch branchId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} tenant;

typedef struct  {
    String propOwnerPropJoinId
    Double ownershipPercentage
 CProperty.property propertyId
 CProperty.propertyOwner propertyOwnerId
 CRegister.businessChannelOwner businessChannelOwnerId
} propertyOwnerpropertyJoin;

typedef struct {
    String custPropJoinId
 CHelper.relationship relationship
 CCustomer.customer customerId
 CProperty.property propertyId
 CRegister.businessChannelOwner businessChannelOwnerId
} customerpropertyJoin;

typedef struct {
    String custPropOwnerJoinId
 CCustomer.customer customerId
 CProperty.propertyOwner propertyOwnerId
 CRegister.businessChannelOwner businessChannelOwnerId
} customerpropertyOwnerJoin;

typedef struct {
   String propertyInspectionResId
   ArrayOf<String> inspectionDates
   String propertyAddressString
   String unitNumber
   ArrayOf<String> bathroom
   ArrayOf<String> bedroom
   ArrayOf<String> diningRoom
   ArrayOf<String> internalDoorways
   ArrayOf<String> driveways
   ArrayOf<String> ensuite
   ArrayOf<String> entrance
   ArrayOf<String> externalAreas
   ArrayOf<String> externalDoors
   ArrayOf<String> familyRoom
   ArrayOf<String> fences
   ArrayOf<String> garageCarport
   ArrayOf<String> gates
   ArrayOf<String> gutterings
   ArrayOf<String> hallway
   ArrayOf<String> hotWater
   ArrayOf<String> kitchen
   ArrayOf<String> laundry
   ArrayOf<String> letterBox
   ArrayOf<String> livingRoom
   ArrayOf<String> notes
   ArrayOf<String> otheritems
   ArrayOf<String> pests
   ArrayOf<String> petIssues
   ArrayOf<String> plumbing
   ArrayOf<String> pool
   ArrayOf<String> recreationRoom
   ArrayOf<String> roof
   ArrayOf<String> screenDoors
   ArrayOf<String> structuralIntegrity
   ArrayOf<String> tennisCourt
   ArrayOf<String> toilet
   ArrayOf<String> wiringElectrical
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CProperty.property propertyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.staff> employeeIds
} propertyInspectionResidential;

typedef struct {
String propertyInspectionCommercId
ArrayOf<String> inspectionDates
String propertyAddressString
String unitNumber
ArrayOf<String> airConditioning
ArrayOf<String> diningRoom
ArrayOf<String> internalDoorways
ArrayOf<String> driveways
ArrayOf<String> entrance
ArrayOf<String> externalAreas
ArrayOf<String> externalDoors
ArrayOf<String> factorySpace
ArrayOf<String> fences
ArrayOf<String> garageCarport
ArrayOf<String> gates
ArrayOf<String> gutterings
ArrayOf<String> hallway
ArrayOf<String> heating
ArrayOf<String> hotWater
ArrayOf<String> kitchen
ArrayOf<String> laundry
ArrayOf<String> notes
ArrayOf<String> officeSpace
ArrayOf<String> parkingSpaces
ArrayOf<String> otheritems
ArrayOf<String> pests
ArrayOf<String> otherIssues
ArrayOf<String> plumbing
ArrayOf<String> recreationRoom
ArrayOf<String> retailSpace
ArrayOf<String> roof
ArrayOf<String> screenDoors
ArrayOf<String> structuralIntegrity
ArrayOf<String> floors
ArrayOf<String> toilet
ArrayOf<String> ventilationIncludingFans
ArrayOf<String> warehouseSpace
ArrayOf<String> washroom
ArrayOf<String> wiringElectrical
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CProperty.property propertyId
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
} propertyInspectionCommercial;

typedef struct {
    String tenancyCaseMngmntId
    String supervisorstaffId
    ArrayOf<String> tenantActionsInChronologicalOrder
    ArrayOf<String> datesTimesOfEvents
    ArrayOf<String> ourResponsesInChronologicalOrder
    ArrayOf<String> datesTimesOfResponses
    Boolean resolved
 CRegister.businessChannelOwner businessChannelOwnerId
 CProperty.property propertyId
 CAdministration.branch branchId
 CProperty.tenant tenancyId
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} tenancyCaseManagement;




// Elastos defined macros can be used to simplify writing


   }

   class Ccustomer {

       constructor();              // explicitly declare constructor that has no parameter

      interface ICH;

typedef struct {
    String customerId
    String linkedToThisbusinessChannelOwnerId
 CHelper.relationship relationship
    ArrayOf<String> customerTypesIds
    String ourbranchId
    String firstName
    String lastName
    ArrayOf<String> residentialAddress
    ArrayOf<String> postalAddress
    ArrayOf<String> deliveryAddress
    ArrayOf<String> billingAddress
    String email
    Int32 homePhone
    Int32 mobilePhone
    Int32 workPhone
    ArrayOf<String> amenitiesRequired
    ArrayOf<String> streetsDesired
    ArrayOf<Int32> postcodesDesired
    Int32 bedroomsRequired
    Double maxPriceOffering
    Double minPriceOffering
    ArrayOf<Double> maxPriceAsking
    ArrayOf<Double> minPriceAsking
    String centrelinkCRN
    Int32 aTOTFN
    String aBN
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 ArrayOf<CProperty.customerpropertyJoin> custPropJoinIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CProperty.tenant tenancyId
 CCustomer.applicant applicantId
} customer;

typedef struct {
    String customerTypeId
    String description
    String custTypeName
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} customerType;

typedef struct {
    String custcustomerJoinId
 ArrayOf<CCustomer.customer> customerIds
    ArrayOf<Double> percentageShares
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.project> projectIds
 ArrayOf<CProperty.program> programIds
 CRegister.businessChannelOwner businessChannelOwnerId
} customercustomerJoin;

typedef struct {
    String applicantId
    ArrayOf<Int32> postcodesAppliedFor
    Int32 bedroomsSought
    ArrayOf<String> amenitiesRequested
    String firstName
    String lastName
    String residentialAddress
    String postalAddress
    String email
    Int32 homePhone
    Int32 mobilePhone
    Int32 workPhone
    ArrayOf<String> contactedWithDetails
 CCustomer.application applicationId
 CAdministration.branch branchId
 CCustomer.customer customerId
 ArrayOf<CProperty.property> propertyIds
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} applicant;

typedef struct {
    String applicationId
    Boolean socialHousingApplication
    Boolean nDIS
    Boolean affordableHousingApplication
    Boolean sharedEquityHousingApplication
    Boolean rentToBuyApplication
    Boolean marketRateHousingApplication
    String headapplicantFirstName
    String headapplicantLastName
    String headapplicantAddressLine1
    String headapplicantAddressLine2
    String headapplicantSuburb
    String headapplicantPostcode
    String headapplicantHomePhone
    String headapplicantWorkPhone
    String headapplicantMobilePhone
    String headapplicantEmail
    String headapplicantDOB
    ArrayOf<String> streetsSought
    ArrayOf<Int32> postcodesSought
    ArrayOf<Int32> bedroomRangeRequired
    ArrayOf<String> amenitiesRequested
    ArrayOf<Double> rangeForRent
 CHelper.billingInterval interval
    ArrayOf<String> secondaryapplicantFirstNames
    ArrayOf<String> secondaryapplicantLastNames
    ArrayOf<String> partnerIds
 ArrayOf<CCustomer.applicant> applicantIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
} application;

typedef struct  {
  String bookingId
  String propertyAddressString
  String unitNumber
  String preInspected
  String dateLeaseStarts
  ArrayOf<String> midTermInspections
  String dateLeaseEnds
  String postInspected
 CHelper.billingInterval paymentInterval
  Double rentalAmountAgreed
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CProperty.property propertyId
 CCustomer.application applicationId
 ArrayOf<CCustomer.applicant> applicantIds
 CProperty.allocation allocationId
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} studentAccommodationBookings;

typedef struct {
  String bookingId
  String propertyAddressString
  String unitNumber
  String preInspected
  String dateLeaseStarts
  ArrayOf<String> midTermInspections
  String dateLeaseEnds
  String postInspected
 CHelper.billingInterval paymentInterval
  Double rentalAmountAgreed
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CProperty.property propertyId
 CCustomer.application applicationId
 ArrayOf<CCustomer.applicant> applicantIds
 CProperty.allocation allocationId
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} temporaryAccommodationBookings;

typedef struct {
    String custTenantJoinId
 CCustomer.customer customerId
 CProperty.tenant tenancyId
 CRegister.businessChannelOwner businessChannelOwnerId
} customerTenantJoin;

typedef struct {
    String complaintId
    String participantNameComplainant
    String participantIdComplainant
    String description
    Boolean nontenantRelated
    Boolean againsttenant
    Boolean bytenant
    ArrayOf<String> detailsInChronologicalOrder
    ArrayOf<String> datesTimesOfEvents
    String repliedWhen
    ArrayOf<String> responsibilitiesparticpantsIds
    ArrayOf<String> responsibilitiesparticpantsNames
    ArrayOf<String> requiredActions
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 ArrayOf<CProperty.tenant> tenantIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CStakeholder.community> communityIds
 ArrayOf<CStakeholder.media> mediaIds
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CStakeholder.partner> partnerIds
 ArrayOf<CRegulator.nCAT> tribunalIds
 ArrayOf<CStakeholder.tICA> ticaIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CAdministration.service> serviceIdsInvolved
 ArrayOf<CAdministration.item> itemiIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} complaint;

typedef struct {
    String complimentId
    String participantNameComplimenting
    String participantIdComplimenting
    String description
    Boolean nontenantRelated
    Boolean protenant
    Boolean bytenant
    ArrayOf<String> detailsInChronologicalOrder
    ArrayOf<String> datesTimesOfEvents
    String corroReceived
    ArrayOf<String> responseDocRefs
    String repliedWhen
    ArrayOf<String> responsibilitiesparticpantsIds
    ArrayOf<String> responsibilitiesparticpantsNames
    ArrayOf<String> requiredActions
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 ArrayOf<CAdministration.service> serviceIdsInvolved
 ArrayOf<CAdministration.item> itemiIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CProperty.tenant> tenancyId
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CStakeholder.community> communityIds
 ArrayOf<CStakeholder.media> mediaIds
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CStakeholder.partner> partnerIds
 ArrayOf<CRegulator.nCAT> tribunalIds
 ArrayOf<CStakeholder.tICA> ticaIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
} compliment;



// Elastos defined macros can be used to simplify writing

}


   class CSolicitor {
       constructor();              // explicitly declare constructor that has no parameter

      interface ICH;

typedef struct {
    String solicitorId
    String aBN
    String companyName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    ArrayOf<String> officelAddresses
    ArrayOf<String> postalAddresses
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CProperty.property propertyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.businessDirector> businessDirectorIds
 CRegister.businessChannelOwner businessChannelOwnerId
} solicitor;




// Elastos defined macros can be used to simplify writing




}

   class Csupplier {

       constructor();              // explicitly declare constructor that has no parameter

      interface ICH;
     
typedef struct {
    String supplierId
    String aBN
    String supplierName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.jobType> jobTypeIds
 ArrayOf<CAdministration.service> serviceIds
 CSupplier.supplierType supplierTypeId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} supplier;

typedef struct {
    String supplierTypeId
    String description
    String suppTypeName
 ArrayOf<CAdministration.service> serviceIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} supplierType;

typedef struct {
    String superFundId
    String superFundName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    String aBN
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CSupplier.supplier supplierId
 CRegister.businessChannelOwner businessChannelOwnerId
} superannuationFund;

typedef struct {
    String insureFundId
    String insuranceCompanyName
    String linkedToThissupplierId
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    String aBN
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CSupplier.supplier supplierId
 CRegister.businessChannelOwner businessChannelOwnerId
} insuranceFund;

typedef struct {
    String distributorId
    String distributorName
    String aBN
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    String webAddress
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
} distributor;




// Elastos defined macros can be used to simplify writing




}


   class CAdministration {

       constructor();              // explicitly declare constructor that has no parameter

      interface ICH;

typedef struct {
    String serviceId
    String serviceName
    String description
    Double serviceUnitsSupplied
    String pricingUnits
    Double priceRatePerUnit
    ArrayOf<String> itemIdsSupplied
    ArrayOf<Double> itemQuantities
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CSupplier.supplier> supplierIds
 CAdministration.serviceType serviceTypeId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 CCustomer.customer customerId
 CRegister.businessChannelOwner businessChannelOwnerId
} service;

typedef struct {
    String serviceTypeId
    String serviceName
    String description
    String priceRateUnits
    Double priceRate
 ArrayOf<CAdministration.role> providerroleIdsWithinEnterprise
 ArrayOf<CAdministration.branch> branchIds
 ArrayOf<CAdministration.department> deptIds
 ArrayOf<CSupplier.supplier> externalProvidersIds
 ArrayOf<CSupplier.supplierType> supplierTypeIds
 ArrayOf<CAdministration.itemType> itemTypeIds
 ArrayOf<CAdministration.jobType> jobTypeIds
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.video> videoRefs
 CRegister.businessChannelOwner businessChannelOwnerId
} serviceType;

typedef struct {
    String sRQId
    ArrayOf<String> serviceSequenceDescription
    ArrayOf<String> requestsAccepted
    ArrayOf<Double> itemQuantities
    ArrayOf<String> itemUnits
    ArrayOf<String> dueDates
 ArrayOf<CAdministration.staff> requestBystaffIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.branch> branchIdsInvolved
 ArrayOf<CAdministration.department> deptIdsInvolved
 ArrayOf<CAdministration.role> responsibleroleIds
 ArrayOf<CAdministration.staff> responsiblestaffIds
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.serviceType> serviceTypeIds
 ArrayOf<CAdministration.itemType> itemTypeIdsRequired
 ArrayOf<CAdministration.jobType> jobTypeIdsRequired
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CFinance.masterAssetRegister> masterAssetIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CCustomer.customerType> customerTypesIds
 CRegister.businessChannelOwner businessChannelOwnerId
} serviceRequest;

typedef struct {
    String corroId
    String participantName
    String participantId
    String description
    String corroReceived
    ArrayOf<String> propertyIds
    ArrayOf<String> responseDocRefs
    String repliedWhen
    ArrayOf<String> responsibilitiesparticpantsIds
    ArrayOf<String> responsibilitiesparticpantsNames
    ArrayOf<String> requiredActions
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CStakeholder.partner> partnerIds
 ArrayOf<CStakeholder.media> mediaIds
 ArrayOf<CStakeholder.community> communityIds
 ArrayOf<CFinance.bank> bankIds
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 ArrayOf<CCustomer.applicant> applicantIds
 ArrayOf<CProperty.tenant> tenancyIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CSupplier.superannuationFund> superFundIds
 ArrayOf<CSolicitor.solicitor> solicitorIds
 ArrayOf<CStakeholder.agent> agentIds
 ArrayOf<CStakeholder.nonGovStakeholder> nonGovStakeholderIds
 ArrayOf<CStakeholder.govStakeholder> govStakeholderIds
 CFinance.centrelink centrelinkId
 CStakeholder.stateLAHAuthority stateLAHAuthorityId
 CStakeholder.statePublicHousingAuthority statePublicHousingAuthorityId
 CRegulator.communityHousingRegulator communityHousingRegulatorId
 CRegulator.aTO aTOId
 CRegulator.nationalRegulator natRegId
 CRegulator.nCAT tribunalId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} correspondenceLog;

typedef struct {
    String advertDesignId
    String advertDesignName
 CHelper.advertisingMedium advertisingMedium
    ArrayOf<String> accountsReceivableIds
    ArrayOf<String> accountsPayableIds
    Double budgetedAmount
    ArrayOf<String> docRefsAdvertisingTemplatesPlans
    ArrayOf<String> runDateTimes
 CProperty.property propertyId
 ArrayOf<CProperty.propertyOwner> propertyOwners
 CProperty.advertisingBudgetSchedule advertScheduleId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} advertisingTemplatesPlans;

typedef struct {
    String branchId
    String branchName
    String branchAddressLine1
    String branchAddressLine2
    String branchSuburb
    String branchPostcode
    String branchPhone
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.department> deptIds
 ArrayOf<CAdministration.subdepartment> subDeptIds
 ArrayOf<CAdministration.subdepartmentLevel2> subDeptLevel2Ids
 ArrayOf<CAdministration.subdepartmentLevel3> subDeptLevel3Ids
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} branch;

typedef struct {
    String deptMapId
    String description
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.department departmentId
 CAdministration.subdepartment subDeptId
 CAdministration.subdepartmentLevel2 subDeptLevel2Id
 CAdministration.subdepartmentLevel3 subDeptLevel3Id
 ArrayOf<CAdministration.staff> headsDeptsSubDeptsEmployeeIdsDescending
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.branch> branchIds
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} mapOfdepartments;

typedef struct {
    String deptId
    String deptName
    ArrayOf<String> deptAddressLine1
    ArrayOf<String> deptAddressLine2
    ArrayOf<String> branchSuburb
    ArrayOf<String> branchPostcode
    ArrayOf<String> branchPhone
 CAdministration.staff headDeptEmployeeId
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.branch> branchIds
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} department;

typedef struct {
    String subDeptId
    String subDeptName
    ArrayOf<String> subDeptAddressLine1
    ArrayOf<String> subDeptAddressLine2
    ArrayOf<String> branchSuburb
    ArrayOf<String> branchPostcode
    ArrayOf<String> branchPhone
 CAdministration.staff headSubDeptEmployeeId
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.branch> branchIds
 CAdministration.department supDeptId
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} subdepartment;

typedef struct {
    String subDeptLevel2Id
    String subDeptLevel2Name
    ArrayOf<String> subDeptLevel2AddressLine1
    ArrayOf<String> subDeptLevel2AddressLine2
    ArrayOf<String> branchSuburb
    ArrayOf<String> branchPostcode
    ArrayOf<String> branchPhone
 CAdministration.staff headLevel2SubDeptEmployeeId
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.branch> branchIds
 CAdministration.subdepartment supSubDeptId
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} subdepartmentLevel2;

typedef struct {
    String subDeptLevel3Id
    String subDeptLevel3Name
    ArrayOf<String> subDeptLevel3AddressLine1
    ArrayOf<String> subDeptLevel3AddressLine2
    ArrayOf<String> branchSuburb
    ArrayOf<String> branchPostcode
    ArrayOf<String> branchPhone
 CAdministration.staff headLevel2SubDeptEmployeeId
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.branch> branchIds
 CAdministration.subdepartmentLevel2 supSubDeptLevel2Id
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
} subdepartmentLevel3;

typedef struct {
  String docRefId
  String docHash
  String masLedgeFinTxId
  String genLedgeFinTxId
  Int32 masLedgeFinTxNum
  Int32 genLedgeFinTxNum
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CProperty.property propertyId
 ArrayOf<CProperty.propertyOwner> propOwners
 ArrayOf<CFinance.masterAssetRegister> masterLedgerAssetIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CProperty.tenant> tenancyIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CSolicitor.solicitor> solicitorIds
 ArrayOf<CStakeholder.agent> agentIds
 ArrayOf<CStakeholder.nonGovStakeholder> nonGovStakeholderIds
 ArrayOf<CStakeholder.govStakeholder> govStakeholderIds
 CStakeholder.stateLAHAuthority stateLAHCId
 CStakeholder.statePublicHousingAuthority statePublicHousingAuthorityId
 CRegulator.nCAT nCATId
 CRegulator.rentalBondAuthority rentalBondAuthorityId
 CRegulator.communityHousingRegulator communityHousingRegulatorId
 ArrayOf<CStakeholder.community> communityIds
 ArrayOf<CStakeholder.media> mediaIds
 ArrayOf<CStakeholder.partner> partnerIds
 CRegulator.nationalRegulator natRegId
 CRegulator.stateBasedRegulator stateBasedRegId
 CProperty.propertyInspectionResidential propertyInspectionResId
 CProperty.propertyInspectionCommercial propertyInspectionCommercId
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
} documents;

typedef struct {
  String imageRefId
  String imageHash
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CProperty.property propertyId
 ArrayOf<CProperty.propertyOwner> propOwners
 ArrayOf<CFinance.masterAssetRegister> masterLedgerAssetIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CProperty.tenant> tenancyIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CSolicitor.solicitor> solicitorIds
 ArrayOf<CStakeholder.agent> agentIds
 ArrayOf<CStakeholder.nonGovStakeholder> nonGovStakeholderIds
 ArrayOf<CStakeholder.govStakeholder> govStakeholderIds
 CStakeholder.stateLAHAuthority stateLAHCId
 CStakeholder.statePublicHousingAuthority statePublicHousingAuthorityId
 CRegulator.nCAT nCATId
 CRegulator.rentalBondAuthority rentalBondAuthorityId
 CRegulator.communityHousingRegulator communityHousingRegulatorId
 CStakeholder.community communityId
 CStakeholder.media mediaId
 CStakeholder.partner partnerId
 CRegulator.nationalRegulator natRegId
 CRegulator.stateBasedRegulator stateBasedRegId
 CProperty.propertyInspectionResidential propertyInspectionResId
 CProperty.propertyInspectionCommercial propertyInspectionCommercId
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
} images;

typedef struct {
  String audioRefId
  String audioHash
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.mapOfdepartments deptMapId
 ArrayOf<CFinance.masterAssetRegister> genAssetIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CSolicitor.solicitor> solicitorIds
 ArrayOf<CStakeholder.agent> agentIds
 ArrayOf<CStakeholder.nonGovStakeholder> nonGovStakeholderIds
 ArrayOf<CStakeholder.govStakeholder> govStakeholderIds
 CRegulator.nCAT nCATId
 CStakeholder.community communityId
 CStakeholder.media mediaId
 CStakeholder.partner partnerId
 CRegulator.nationalRegulator natRegId
 CRegulator.stateBasedRegulator stateBasedRegId
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
} audio;

typedef struct {
  String videoRefId
  String videoHash
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.propertyOwner> propOwners
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CProperty.tenant> tenancyIds
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CSolicitor.solicitor> solicitorIds
 ArrayOf<CStakeholder.agent> agentIds
 ArrayOf<CStakeholder.nonGovStakeholder> nonGovStakeholderIds
 ArrayOf<CStakeholder.govStakeholder> govStakeholderIds
 CStakeholder.stateLAHAuthority stateLAHCId
 CStakeholder.statePublicHousingAuthority statePublicHousingAuthorityId
 CRegulator.nCAT nCATId
 CRegulator.rentalBondAuthority rentalBondAuthorityId
 CRegulator.communityHousingRegulator communityHousingRegulatorId
 CStakeholder.community communityId
 CStakeholder.media mediaId
 CStakeholder.partner partnerId
 CRegulator.nationalRegulator natRegId
 CRegulator.stateBasedRegulator stateBasedRegId
 CProperty.propertyInspectionResidential propertyInspectionResId
 CProperty.propertyInspectionCommercial propertyInspectionCommercId
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefIds
} video;

typedef struct {
  String itemTypeId
  String itemTypeDescription
  String itemModelNumber
  String itemName
  Int32 numberInInventory
 CRegister.businessChannelOwner businessChannelOwnerId
 CFactory.productType ourproductTypeId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CSupplier.supplier> suppliers
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CSupplier.supplierType> supplierTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} itemType;

typedef struct {
  String itemId
  String itemName
  String itemDescription
  Boolean fragile
  Boolean toxic
  Boolean corrosive
  String itemModelNumber
  String itemSerialNumber
  Boolean itemQualityDimensionsCheckedPassed
  String pricePeritem
 CRegister.businessChannelOwner businessChannelOwnerId
 CFactory.product ourproductId
 CAdministration.branch branchId
 CAdministration.department deptId
 CSupplier.supplier supplierId
 CAdministration.itemType itemTypeId
 ArrayOf<CAdministration.jobType> jobTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} item;

typedef struct {
  String jobTypeId
  String jobDescription
  String jobCode
  String jobName
  ArrayOf<String> taskSequence
  ArrayOf<String> natRegId
  ArrayOf<String> stateBasedRegId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CSupplier.supplier> suppliers
 ArrayOf<CAdministration.itemType> itemTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} jobType;

typedef struct {
  String jobId
  String jobDescription
  ArrayOf<String> taskDescriptionSequence
  String jobCode
  String jobName
  Int32 jobNum
  Boolean responsiveMaintenance
  Boolean plannedMaintenance
  ArrayOf<Int32> immediatePrevjobNums
  ArrayOf<Boolean> immediatePrevjobsQCPass
  ArrayOf<String> dateTimeTaskStartSequence
  ArrayOf<String> dateTimeTaskEndSequence
  ArrayOf<String> actualTaskStartTime
  ArrayOf<String> actualTaskCompleteTime
  ArrayOf<Boolean> taskCompletionQCPasses
  Boolean jobCompletionQCPass
  String nextjobTypeId
  ArrayOf<Boolean> tenantDamages
  ArrayOf<Boolean> lesseecustomerDamage
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CProperty.property> propertyIds
 CFinance.masterAssetRegister masterLedgerAssetId
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CSupplier.supplier> supplierIds
 CAdministration.jobType jobTypeId
 ArrayOf<CAdministration.itemType> itemTypeIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.serviceType> serviceTypeIds
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.partType> partTypeIds
 ArrayOf<CFactory.part> partIds
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.minorsubassembly> minorsubassemblyIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.subassembly> subassemblyIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.majorsubassembly> majorsubassemblyIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.lesserassembly> lesserassemblyIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.assembly> assemblyIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.greaterassembly> greaterassemblyIds
 ArrayOf<CFactory.productType> productTypeIds
 ArrayOf<CFactory.product> productIds
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.purchaseOrder purchOrderId
 CRegulator.nationalRegulator natRegId
 CRegulator.stateBasedRegulator stateBasedRegId
} job;

typedef struct {
  String leaveId
  String leaveCode
  String leaveDescription
  String awardName
  String notes
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CAdministration.documents> docRefIds
} leaveTypes;

typedef struct {
  String quoteInId
  ArrayOf<String> jobDescription
  ArrayOf<String> jobTypeId
  ArrayOf<String> jobName
  ArrayOf<String> itemId
  ArrayOf<String> conditionsUponcustomer
  ArrayOf<Double> quoteAmountEachjob
  Double quoteTotalForOrder
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CSupplier.supplier supplierId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
 CFinance.purchaseOrder purchOrderId
} quoteIn;

typedef struct {
  String quoteOutId
  ArrayOf<String> jobDescription
  ArrayOf<String> jobTypeId
  ArrayOf<String> jobName
  ArrayOf<String> itemId
  ArrayOf<String> conditionsUponcustomer
  ArrayOf<Double> quoteAmountEachjobitem
  Double quoteTotalForOrder
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
 ArrayOf<CCustomer.customer> customers
 CFinance.masterSalesOrder masterSalesOrderId
} quoteOut;

typedef struct {
  String riskId
 CHelper.propertyType propertyType
  ArrayOf<String> riskDescriptionSequence
  ArrayOf<String> riskMitigationSequence
  ArrayOf<String> statementsOfRisksAssociated
 CHelper.riskLikelihoodOfOccurrenceRating riskLikelihoodRating
 CHelper.riskConsequence riskConsequenceRating
 CHelper.residualRiskLevel residualRiskLevel
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 CAdministration.role roleId
 CProperty.property propertyId
 CProperty.propertyConstructionType propertyConstructionTypeId
 CFinance.masterAssetType masterAssetTypeId
 CFinance.masterAssetRegister masterAssetId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.jobType jobTypeId
 CAdministration.job jobId
 CFinance.purchaseOrder purchaseOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CProperty.allocation allocationId
 CCustomer.complaint complaintId
 CAdministration.serviceType serviceTypeId
 CAdministration.itemType itemTypeId
 CAdministration.item itemId
 CFactory.materialType materialTypeId
 CFactory.material materialId
 CFactory.partType partTypeId
 CFactory.part partId
 CFactory.minorsubassemblyType minorsubassemblyTypeId
 CFactory.minorsubassembly minorsubassemblyId
 CFactory.subassemblyType subassemblyTypeId
 CFactory.subassembly subassemblyId
 CFactory.majorsubassemblyType majorsubassemblyTypeId
 CFactory.majorsubassembly majorsubassemblyId
 CFactory.lesserassemblyType lesserassemblyTypeId
 CFactory.lesserassembly lesserassemblyId
 CFactory.assemblyType assemblyTypeId
 CFactory.assembly assemblyId
 CFactory.greaterassemblyType greaterassemblyTypeId
 CFactory.greaterassembly greaterassemblyId
 CFactory.productType productTypeId
 CFactory.product productId
 CCustomer.customer customerId
 CCustomer.customerType customerTypeId
 CSupplier.supplier supplierId
 CSupplier.supplierType supplierTypeId
 CStakeholder.partner partnerId
 CStakeholder.media mediaId
 CStakeholder.community communityId
 CFinance.bank bankId
 CProperty.propertyOwner propertyOwnerId
 CCustomer.applicant applicantId
 CProperty.tenant tenancyId
 CAdministration.staff employeeId
 CSupplier.superannuationFund superFundId
 ArrayOf<CSolicitor.solicitor> solicitorIds
 ArrayOf<CStakeholder.agentType> agentTypeIds
 ArrayOf<CStakeholder.agent> agentIds
 ArrayOf<CStakeholder.nonGovStakeholder> nonGovStakeholderIds
 ArrayOf<CStakeholder.govStakeholder> govStakeholderIds
 CFinance.centrelink centrelinkId
 CStakeholder.stateLAHAuthority stateLAHAuthorityId
 CStakeholder.statePublicHousingAuthority statePublicHousingAuthorityId
 CRegulator.communityHousingRegulator communityHousingRegulatorId
 CRegulator.aTO aTOId
 CRegulator.nationalRegulator natRegId
 CRegulator.nCAT tribunalId
 CCustomer.application applicationId
 CRegulator.stateBasedRegulator stateBasedRegId
 CProperty.tenancyCaseManagement tenancyCaseMngmntId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} riskRegister;

typedef struct {
  String roleId
  String roleTitle
  String roleDescription
 ArrayOf<CAdministration.staff> employeeIds
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.branch> branchIds
 ArrayOf<CAdministration.department> deptIds
 ArrayOf<CAdministration.subdepartment> subDeptIds
 ArrayOf<CAdministration.subdepartmentLevel2> subDeptLevel2Ids
 ArrayOf<CAdministration.subdepartmentLevel3> subDeptLevel3Ids
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} role;

typedef struct {
  String staffroleJoinsId
 CAdministration.role roleId
 CAdministration.staff employeeId
} staffroleJoins;

typedef struct {
    String businessDirectorId
    String firstName
    String lastName
    String residentialAddress
    String postalAddress
    String email
    Int32 homePhone
    Int32 mobilePhone
    Int32 workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} businessDirector;

typedef struct {
    String employeeId
    String ourbranchId
    String firstName
    String lastName
    String residentialAddress
    String postalAddress
    String email
    Int32 homePhone
    Int32 mobilePhone
    Int32 workPhone
    Int32 aTOTFN
    Boolean taxFreeThreshold
    ArrayOf<String> docRefIds
    ArrayOf<String> contactedWithDetails
 CAdministration.role staffImmedSuperroleId
 ArrayOf<CAdministration.documents> performanceAgreementDocRefs
 ArrayOf<CAdministration.role> roleIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} staff;

typedef struct  {
  String servicePurchRequestId
  String mRQIdIfRentalproperty
  Boolean damageCausedBycustomertenantOthers
  Boolean ownerResponsible
  ArrayOf<String> summaryDescriptionOfProblemitemised
  ArrayOf<String> jobTypeSequence
  ArrayOf<String> quoteIdsIn
  ArrayOf<Double> mostAppropriateQuotesReceived
  String quotesFinalised
  ArrayOf<String> requestsToLandlordDocRefs
  ArrayOf<String> requestsSentDates
  ArrayOf<String> jobTypeSequenceApproved
  ArrayOf<String> tribunalIds
  ArrayOf<String> jobIds
  ArrayOf<String> purchaseOrderIdSequence
  ArrayOf<String> purchaseOrdersupplierIdSequence
  String expectedCompletionDate
  ArrayOf<Boolean> workCheckedPassed
  Double totalMaintPurchOrderAmount
  ArrayOf<Int32> masLedgeFinTxNumsReturned
 CRegister.businessChannelOwner businessChannelOwnerId
 CProperty.property propertyId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.itemType> itemTypeIds
 ArrayOf<CAdministration.jobType> jobTypeIds
 ArrayOf<CAdministration.serviceType> serviceTypeIds
 ArrayOf<CAdministration.staff> employeesRequestingIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.audio> audioRefIds
} servicePurchaseRequest;

typedef struct {
    String timesheetId
    ArrayOf<String> rosteredStarts
    ArrayOf<String> rosteredFinishes
    ArrayOf<String> actualStarts
    ArrayOf<String> actualFinishes
    String submitted
    String checked
    Boolean passed
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.staff> employeeIds
 ArrayOf<CAdministration.documents> docRefIds
 CAdministration.branch branchId
} timesheet;

typedef struct {
   String waitQueueId
   String queueName
   String queueCode
   String queueDescription
   String notes
 CHelper.ausState ausState
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefIds
} waitQueue;





// Elastos defined macros can be used to simplify writing




}

   Class(CFinance)

       constructor();          // explicitly declare constructor that has no parameter

      interface ICH;

typedef struct {
    String bankId
    String bankName
    Int32 ourbranchBSB
    String ourbranchName
    String linkedToThissupplierId
    String linkedToThiscustomerId
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} bank;

typedef struct {
    String centrelinkId
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    String details
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} centrelink;

typedef struct {
    String masterAssetId
    String assetTypeId
    String assetName
    String assetDescription
    Double OWDV
    Double capitalImprovements
    Double depreciation
    Double CWDV
    String lastInspectionservice
    String thisInspectionservice
    String Sequ
    String nextInspectionservice
    Int32 valueOfN
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department deptId
 CFinance.masterAssetType masterAssetTypeId
} masterAssetRegister;

typedef struct {
    String masterAssetTypeId
    String assetName
    String assetDescription
 CHelper.inspectionTerm inspectionTerm
    Int32 valueOfN
 ArrayOf<CAdministration.documents> docRefs
 ArrayOf<CAdministration.images> imageRefs
 ArrayOf<CAdministration.audio> audioRefIds
 ArrayOf<CAdministration.video> videoRefs
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} masterAssetType;

typedef struct {
    String chartOfAccountsId
 CHelper.ledgerTitle ledgerTitle
    String description
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level1Accounts level1AccountsId
 CFinance.level2Accounts level2AccountsId
 CFinance.level3Accounts level3AccountsId
 CFinance.level4Accounts level4AccountsId
 CFinance.level5Accounts level5AccountsId
 CFinance.level6Accounts level6AccountsId
} chartOfAccounts;

typedef struct {
    String level1AccountsId
    String description
    String level1AccountsName
    String level1AccountsNum
 CHelper.ledgerTitle assocLedger
 CRegister.businessChannelOwner businessChannelOwnerId
} level1Accounts;

typedef struct {
   String level2AccountsId
    String description
    String level2AccountsName
    String level2AccountsNum
 CHelper.ledgerTitle assocLedger
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level1Accounts level1AccountsId
} level2Accounts;

typedef struct {
    String level3AccountsId
    String description
    String level3AccountsName
    String level3AccountsNum
 CHelper.ledgerTitle assocLedger
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level2Accounts level2AccountsId
} level3Accounts;

typedef struct {
    String level4AccountsId
    String description
    String level4AccountsName
    String level4AccountsNum
 CHelper.ledgerTitle assocLedger
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level3Accounts level3AccountsId
} level4Accounts;

typedef struct {
    String level5AccountsId
    String description
    String level5AccountsName
    String level5AccountsNum
 CHelper.ledgerTitle assocLedger
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level4Accounts level4AccountsId
} level5Accounts;

typedef struct {
    String level6AccountsId
    String description
    String level6AccountsName
    String level6AccountsNum
 CHelper.ledgerTitle assocLedger
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level5Accounts level5AccountsId
} level6Accounts;

typedef struct {
    String chartOfClassesId
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level1Class level1ClassId
 CFinance.level2Class level2ClassId
 CFinance.level3Class level3ClassId
} chartOfClasses;

typedef struct {
    String level1ClassId
    String description
    String className
 CRegister.businessChannelOwner businessChannelOwnerId
}level1Class;

typedef struct {
    String level2ClassId
    String description
    String className
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level1Class level1ClassId
} level2Class;

typedef struct {
    String level3ClassId
    String description
    String className
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.level2Class level2ClassId
} level3Class;

typedef struct {
    String masLedgeFinTxJoinId
    ArrayOf<String> masLedgeFinTxIds
    Int32 masLedgeFinTxNum
    ArrayOf<String> creditedAccountIds
    ArrayOf<String> debitedAccountIds
    ArrayOf<String> creditedClassIds
    ArrayOf<String> debitedClassIds
    ArrayOf<Double> creditedAmounts
    ArrayOf<Double> debitedAmounts
 CRegister.businessChannelOwner businessChannelOwnerId
} masterLedgerFinTxJoin;

typedef struct {
    String masterLedgerAssetId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerAsset;

typedef struct {
    String masterLedgerLiabilityId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerLiability;

typedef struct {
    String masterLedgerEquityId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerEquity;

typedef struct {
    String masterLedgerSuspenseId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerSuspense;

typedef struct {
    String masterLedgerIncomeId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerIncome;

typedef struct {
    String masterLedgerReturnsInId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerReturnsIn;

typedef struct {
    String masterLedgerExpenseId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerExpense;

typedef struct {
    String masterLedgerReturnsOutId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerReturnsOut;

typedef struct {
    String masterLedgerOtherIncomeId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerOtherIncome;

typedef struct {
    String masterLedgerOtherExpenseId
    String bankBSB
    String bankAccountNumber
    String nameOnbankAccount
    String description
    ArrayOf<String> docRefs
    String feeId
    Int32 masLedgeFinTxNum
    String level1AccountName
    String level1AccountNum
    String level2AccountName
    String level2AccountNum
    String level3AccountName
    String level3AccountNum
    String level4AccountName
    String level4AccountNum
    String level5AccountName
    String level5AccountNum
    String level6AccountName
    String level6AccountNum
    String level1ClassName
    String level2ClassName
    String level3ClassName
    String transactionEffective
    String masLedgeFinTxId
    Double cr
    Double dr
    Double bal
 CRegister.businessChannelOwner businessChannelOwnerId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CFinance.chartOfAccounts chartOfAccountsId
 CFinance.chartOfClasses chartOfClassesId
 CAdministration.branch branchId
 CAdministration.department departmentId
 CFinance.bank bankId
 CProperty.program programId
 CProperty.project projectId
 CAdministration.item itemId
 CAdministration.job jobId
 CAdministration.service serviceId
 CCustomer.customer customerId
 CSupplier.supplier supplierId
 CFinance.purchaseOrder purchOrderId
 CFinance.masterSalesOrder masterSalesOrderId
 CFinance.invoice invoiceId
 CFinance.bill billId
} masterLedgerOtherExpense;

typedef struct {
    String level1BudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThislevel1BudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.level2Budget linkedTolevel2BudgetId
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} level1Budget;

typedef struct {
    String level2BudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThislevel2BudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.level3Budget linkedTolevel3BudgetId
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} level2Budget;

typedef struct {
    String level3BudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThislevel3BudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.level4Budget linkedTolevel4BudgetId
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} level3Budget;

typedef struct {
    String level4BudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThislevel4BudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.level5Budget linkedTolevel5BudgetId
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} level4Budget;

typedef struct {
    String level5BudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThislevel5BudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.level6Budget linkedTolevel6BudgetId
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} level5Budget;

typedef struct {
    String level6BudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThislevel6BudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.hyperBudget linkedTohyperBudgetId
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} level6Budget;

typedef struct {
    String hyperBudgetId
    String budgetName
    Int32 endYearmonthyyyymm
 ArrayOf<CHelper.month> twelvemonthSequence
    ArrayOf<String> incomeitemTypeIds
    ArrayOf<Double> janRevenues
    ArrayOf<Double> febRevenues
    ArrayOf<Double> marRevenues
    ArrayOf<Double> aprRevenues
    ArrayOf<Double> mayRevenues
    ArrayOf<Double> junRevenues
    ArrayOf<Double> julRevenues
    ArrayOf<Double> augRevenues
    ArrayOf<Double> sepRevenues
    ArrayOf<Double> octRevenues
    ArrayOf<Double> novRevenues
    ArrayOf<Double> decRevenues
    ArrayOf<String> janitemTypeIds
    ArrayOf<String> febitemTypeIds
    ArrayOf<String> maritemTypeIds
    ArrayOf<String> apritemTypeIds
    ArrayOf<String> mayitemTypeIds
    ArrayOf<String> junitemTypeIds
    ArrayOf<String> julitemTypeIds
    ArrayOf<String> augitemTypeIds
    ArrayOf<String> sepitemTypeIds
    ArrayOf<String> octitemTypeIds
    ArrayOf<String> novitemTypeIds
    ArrayOf<String> decitemTypeIds
    ArrayOf<Double> janCostsitems
    ArrayOf<Double> febCostsitems
    ArrayOf<Double> marCostsitems
    ArrayOf<Double> aprCostsitems
    ArrayOf<Double> mayCostsitems
    ArrayOf<Double> junCostsitems
    ArrayOf<Double> julCostsitems
    ArrayOf<Double> augCostsitems
    ArrayOf<Double> sepCostsitems
    ArrayOf<Double> octCostsitems
    ArrayOf<Double> novCostsitems
    ArrayOf<Double> decCostsitems
    ArrayOf<String> janjobTypeIds
    ArrayOf<String> febjobTypeIds
    ArrayOf<String> marjobTypeIds
    ArrayOf<String> aprjobTypeIds
    ArrayOf<String> mayjobTypeIds
    ArrayOf<String> junjobTypeIds
    ArrayOf<String> juljobTypeIds
    ArrayOf<String> augjobTypeIds
    ArrayOf<String> sepjobTypeIds
    ArrayOf<String> octjobTypeIds
    ArrayOf<String> novjobTypeIds
    ArrayOf<String> decjobTypeIds
    ArrayOf<Double> janCostsjobs
    ArrayOf<Double> febCostsjobs
    ArrayOf<Double> marCostsjobs
    ArrayOf<Double> aprCostsjobs
    ArrayOf<Double> mayCostsjobs
    ArrayOf<Double> junCostsjobs
    ArrayOf<Double> julCostsjobs
    ArrayOf<Double> augCostsjobs
    ArrayOf<Double> sepCostsjobs
    ArrayOf<Double> octCostsjobs
    ArrayOf<Double> novCostsjobs
    ArrayOf<Double> decCostsjobs
    ArrayOf<String> janserviceTypeIds
    ArrayOf<String> febserviceTypeIds
    ArrayOf<String> marserviceTypeIds
    ArrayOf<String> aprserviceTypeIds
    ArrayOf<String> mayserviceTypeIds
    ArrayOf<String> junserviceTypeIds
    ArrayOf<String> julserviceTypeIds
    ArrayOf<String> augserviceTypeIds
    ArrayOf<String> sepserviceTypeIds
    ArrayOf<String> octserviceTypeIds
    ArrayOf<String> novserviceTypeIds
    ArrayOf<String> decserviceTypeIds
    ArrayOf<Double> janCostsservices
    ArrayOf<Double> febCostsservices
    ArrayOf<Double> marCostsservices
    ArrayOf<Double> aprCostsservices
    ArrayOf<Double> mayCostsservices
    ArrayOf<Double> junCostsservices
    ArrayOf<Double> julCostsservices
    ArrayOf<Double> augCostsservices
    ArrayOf<Double> sepCostsservices
    ArrayOf<Double> octCostsservices
    ArrayOf<Double> novCostsservices
    ArrayOf<Double> decCostsservices
    ArrayOf<Double> twelveTotalmonthlyCosts
    Double yearCostThisBudgetId
    Double netProfitLossThishyperBudgetId
    Int32 linkingInternalBudgetNum
 ArrayOf<CCustomer.customer> customerIds
 ArrayOf<CProperty.property> propertyIds
 ArrayOf<CProperty.program> programIds
 ArrayOf<CProperty.project> projectIds
 CFinance.masterAssetRegister masterAssetId
 CRegister.businessChannelOwner businessChannelOwnerId
} hyperBudget;

typedef struct {
    String invoiceId
    String invoiceDate
    Double invoiceAmount
    ArrayOf<String> docRefs
    String paidDate
    ArrayOf<String> genLedgeFinTxIds
    ArrayOf<String> masLedgeFinTxIds
    Int32 genLedgeFinTxNum
    Int32 masLedgeFinTxNum
    ArrayOf<String> feesAndChargesIds
    ArrayOf<String> chargeDates
 ArrayOf<CCustomer.customer> customers
 ArrayOf<CProperty.propertyOwner> propertyOwnerIds
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CFinance.masterSalesOrder> masterSalesOrderIds
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} invoice;

typedef struct {
    String billId
    String billCodeScanned
    String billDate
    Double billAmount
    ArrayOf<String> docRefs
    String paidDate
    ArrayOf<String> genLedgeFinTxIds
    ArrayOf<String> masLedgeFinTxIds
    Int32 genLedgeFinTxNum
    Int32 masLedgeFinTxNum
    Boolean passed
 CSupplier.supplier supplierId
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CFinance.purchaseOrder> purchOrderIds
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
} bill;

typedef struct  {
    String feeCharge
    String feeChargeName
    String feeChargeCode
    String feeChargeDescription
    Double feeChargeRate
    String feeChargeRateUnits
 CHelper.billingInterval paymentInterval
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.itemType> itemTypeIds
} feesAndCharges;

typedef struct {
  String purchOrderId
  String mRQIdIfRentalproperty
  Boolean damageCausedBycustomertenantOthers
  Boolean ourResponsibility
  ArrayOf<String> summaryDescriptionOfProblemitemised
  Double quotedEstimateCost
  String expectedCompletionDate
  ArrayOf<Boolean> workCheckedPassed
  Double totalMaintPurchOrderAmount
  Int32 masLedgeFinTxNumReturned
 CRegister.businessChannelOwner businessChannelOwnerId
 CProperty.property propertyId
 CAdministration.branch branchId
 CAdministration.department deptId
 CSupplier.supplier supplierId
 ArrayOf<CAdministration.itemType> itemTypeIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.serviceType> serviceTypeIds
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.jobType> jobTypeIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CFinance.masterLedgerExpense> masterLedgerExpenseIds
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} purchaseOrder;

typedef struct {
  String masterSalesOrderId
  ArrayOf<Double> itemQuantities
  ArrayOf<Double> itemWeights
  ArrayOf<Double> itemPrices
  Double itemTotalPrice
  Double itemTotalWeight
  ArrayOf<Double> productQuantities
  ArrayOf<Double> productWeights
  ArrayOf<Double> productsPrices
  Double productsTotalPrice
  Double productsTotalWeight
  ArrayOf<Double> servicePriceRates
  Double serviceEstimatedTotalPrice
  ArrayOf<Double> jobPriceRates
  Double jobsEstimatedTotalPrice
  Double totalOrderPrice
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CCustomer.customer> customers
 ArrayOf<CAdministration.itemType> itemTypeIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.serviceType> serviceTypeIds
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CAdministration.jobType> jobTypeIds
 ArrayOf<CAdministration.job> jobIds
 ArrayOf<CFinance.masterLedgerIncome> masterLedgerIncomeId
 CFinance.masterLedgerFinTxJoin masLedgeFinTxJoinId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} masterSalesOrder;

typedef struct {
    String taxReferenceId
 ArrayOf<CHelper.ausState> ausStates
    String description
    ArrayOf<String> notes
    Double taxRatePerCent
 CHelper.taxCode taxCode
 ArrayOf<CAdministration.documents> docRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} taxReferenceTable;




// Elastos defined macros can be used to simplify writing




}

   Class(CFactory)

       constructor();          // explicitly declare constructor that has no parameter

      interface ICH;
      
typedef struct {
    String materialId
    Boolean hazardous
    String materialName
    String materialDescription
    Boolean qCCheckedPassed
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.item itemId
 CSupplier.supplier supplierId
 CFactory.materialType materialTypeId
 CFactory.part partId
 CFactory.minorsubassembly minorsubassemblyId
 CFactory.subassembly subassemblyId
 CFactory.majorsubassembly majorsubassemblyId
 CFactory.lesserassembly lesserassemblyId
 CFactory.assembly assemblyId
 CFactory.greaterassembly greaterassemblyId
 CFactory.product productId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} material;

typedef struct {
    String materialTypeId
    String materialDescription
    ArrayOf<String> materialSafetyDataRefs
    String materialCode
    String UnitsOfMeasurement
    Double remainingAmount
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Double remainingNum
    Double rawMaterialStockReorderSetPoint
    String rawMaterialStockReorderCode
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CFactory.partType> partTypeIds
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} materialType;

typedef struct {
    String partId
    Boolean hazardous
    String partName
    String partDescription
    Boolean qCCheckedPassed
 CRegister.businessChannelOwner businessChannelOwnerId
 ArrayOf<CFactory.material> materialIds
 CFactory.partType partTypeId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 CFactory.minorsubassembly minorsubassemblyId
 CFactory.subassembly subassemblyId
 CFactory.majorsubassembly majorsubassemblyId
 CFactory.lesserassembly lesserassemblyId
 CFactory.assembly assemblyId
 CFactory.greaterassembly greaterassemblyId
 CFactory.product productId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} part;

typedef struct {
    String partTypeId
    String partDescription
    String partCode
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 partReorderSetPoint
    String partReorderCode
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} partType;

typedef struct {
    String minorSubAssyId
    Boolean hazardous
    String minorsubassemblyName
    String minorsubassemblyDescription
    Boolean qCCheckedPassed
 CRegister.businessChannelOwner businessChannelOwnerId
 CFactory.minorsubassembly minorsubassemblyTypeId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.part> partIds
 CFactory.subassembly subassemblyId
 CFactory.majorsubassembly majorsubassemblyId
 CFactory.lesserassembly lesserassemblyId
 CFactory.assembly assemblyId
 CFactory.greaterassembly greaterassemblyId
 CFactory.product productId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} minorsubassembly;

typedef struct {
    String minorsubassemblyTypeId
    String minorsubassemblyDescription
    String minorsubassemblyCode
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 minorsubassemblyReorderSetPoint
    String minorsubassemblyReorderCode
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.partType> partTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} minorsubassemblyType;

typedef struct {
    String subAssyId
    Boolean hazardous
    String subassemblyName
    String subassemblyDescription
    Boolean qCCheckedPassed
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.part> partIds
 ArrayOf<CFactory.minorsubassembly> minorsubassemblyIds
 CFactory.majorsubassembly majorsubassemblyId
 CFactory.lesserassembly lesserassemblyId
 CFactory.assembly assemblyId
 CFactory.greaterassembly greaterassemblyId
 CFactory.product productId
 CRegister.businessChannelOwner businessChannelOwnerId
 CFactory.subassemblyType subassemblyTypeId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} subassembly;

typedef struct {
    String subassemblyTypeId
    String subassemblyCode
    String subassemblyDescription
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 subassemblyReorderSetPoint
    String subassemblyReorderCode
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.partType> partTypeId
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} subassemblyType;

typedef struct {
    String majorSubAssyId
    Boolean hazardous
    String majorsubassemblyName
    String majorsubassemblyDescription
    Boolean qCCheckedPassed
    String majorsubassemblyCode
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.part> partIds
 ArrayOf<CFactory.minorsubassembly> minorsubassemblyIds
 ArrayOf<CFactory.subassembly> subassemblyIds
 CFactory.lesserassembly lesserassemblyId
 CFactory.assembly assemblyId
 CFactory.greaterassembly greaterassembly
 CFactory.product productIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CFactory.majorsubassemblyType majorsubassemblyTypeId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} majorsubassembly;

typedef struct {
    String majorsubassemblyTypeId
    String majorsubassemblyDescription
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 majorsubassemblyReorderSetPoint
    String majorsubassemblyReorderCode
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.partType> partTypeId
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} majorsubassemblyType;

typedef struct {
    String lesserAssyId
    Boolean hazardous
    String lesserassemblyName
    String lesserassemblyDescription
    Boolean qCCheckedPassed
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.part> partIds
 ArrayOf<CFactory.minorsubassembly> minorsubassemblyIds
 ArrayOf<CFactory.subassembly> subassemblyIds
 ArrayOf<CFactory.majorsubassembly> majorsubassemblyIds
 CFactory.assembly assemblyId
 CFactory.greaterassembly greaterassemblyId
 CFactory.lesserassemblyType lesserassemblyTypeId
 CFactory.product productId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} lesserassembly;

typedef struct {
    String lesserassemblyTypeId
    String lesseassemblyDescription
    String lesserassemblyCode
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 lesserassemblyReorderSetPoint
    String lesserassemblyReorderCode
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.partType> partTypeId
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} lesserassemblyType;

typedef struct {
    String assyId
    Boolean hazardous
    String assemblyName
    String assemblyDescription
    Boolean qCCheckedPassed
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.part> partIds
 ArrayOf<CFactory.minorsubassembly> minorsubassemblyIds
 ArrayOf<CFactory.subassembly> subassemblyIds
 ArrayOf<CFactory.majorsubassembly> majorsubassemblyIds
 ArrayOf<CFactory.lesserassembly> lesserassemblyIds
 CFactory.assemblyType assemblyTypeId
 CFactory.greaterassembly greaterassemblyId
 CFactory.product productId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} assembly;

typedef struct {
    String assemblyTypeId
    String assemblyDescription
    String assemblyCode
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 assemblyReorderSetPoint
    String assemblyReorderCode
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.partType> partTypeId
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.greaterassemblyType> greaterassemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} assemblyType;

typedef struct {
    String greaterAssyId
    Boolean hazardous
    String greaterassemblyName
    String greaterassemblyDescription
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Boolean qCCheckedPassed
    String greaterassemblyCode
    String greaterassemblyReorderCode
    Int32 greaterassemblyReorderSetPoint
 ArrayOf<CFactory.material> materialIds
 ArrayOf<CFactory.part> partIds
 ArrayOf<CFactory.minorsubassembly> minorsubassemblyIds
 ArrayOf<CFactory.subassembly> subassemblyIds
 ArrayOf<CFactory.majorsubassembly> majorsubassemblyIds
 ArrayOf<CFactory.lesserassembly> lesserassemblyIds
 ArrayOf<CFactory.assembly> assemblyIds
 CFactory.greaterassemblyType greaterassemblyTypeId
 CFactory.product productId
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.item itemId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} greaterassembly;

typedef struct {
    String greaterassemblyTypeId
    String greaterassemblyDescription
    String greaterassemblyCode
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 greaterassemblyReorderSetPoint
    String greaterassemblyReorderCode
 ArrayOf<CFactory.materialType> materialTypeIds
 ArrayOf<CFactory.partType> partTypeId
 ArrayOf<CFactory.minorsubassemblyType> minorsubassemblyTypeIds
 ArrayOf<CFactory.subassemblyType> subassemblyTypeIds
 ArrayOf<CFactory.majorsubassemblyType> majorsubassemblyTypeIds
 ArrayOf<CFactory.lesserassemblyType> lesserassemblyTypeIds
 ArrayOf<CFactory.assemblyType> assemblyTypeIds
 ArrayOf<CFactory.productType> productTypeIds
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CSupplier.supplier> supplierIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} greaterassemblyType;

typedef struct {
    String productId
    Boolean hazardous
    ArrayOf<String> masLedgeFinTxIds
    ArrayOf<Int32> masLedgeFinTxNums
    ArrayOf<String> genLedgeFinTxIds
    ArrayOf<Int32> genLedgeFinTxNums
    String productName
    String modelNumber
    String serialNumber
    Boolean qCCheckedPassed
    String BestBeforeDate
 CRegister.businessChannelOwner businessChannelOwnerId
 CFactory.productType productTypeId
 CAdministration.item itemId
 CCustomer.customer customerId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} product;

typedef struct {
    String productTypeId
    String productDescription
 CHelper.corrosiveness corrosiveness
 CHelper.toxicity toxicity
 CHelper.fragility fragility
 CHelper.physicalStateWhenIdle physicalStateWhenIdle
    Int32 remainingNum
    Int32 lesserassemblyReorderSetPoint
    String lesserassemblyReorderCode
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.itemType itemTypeId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} productType;

typedef struct {
    String shipmentId
    String distributorId
    ArrayOf<String> salesOrderIds
    ArrayOf<String> purchaseOrderIds
    ArrayOf<String> receiverDeliveryAddress
    ArrayOf<String> senderSourceAddress
    String receivedAtSourceTerminal
    String trackingNumber
    String trackingURL
    String eTA
    ArrayOf<String> journeyPoints
    ArrayOf<String> journeyPointNames
    Double deliveredGPSLat
    Double deliveredGPSLong
    String deliveryAddress
    Boolean addressesMatch
 CRegister.businessChannelOwner businessChannelOwnerId
 CSupplier.supplier supplierId
 CSupplier.supplierType supplierTypeId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> deliveryImageIds
 ArrayOf<CAdministration.item> itemIds
 ArrayOf<CAdministration.itemType> itemTypeIds
 CCustomer.customer customerId
 CSupplier.distributor nextdistributorId
 CFactory.shipment continuationshipmentId
} shipment;




// Elastos defined macros can be used to simplify writing




}

   class CStakeholder {

       constructor();              // explicitly declare constructor that has no parameter
 
      interface ICH;

typedef struct {
    String govStakeholderId
    String departmentName
 CHelper.govLevel govLevel
    String stakeholderName
    String stakeholderDetails
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.businessDirector> businessDirectorIds
 CRegister.businessChannelOwner businessChannelOwnerId
} govStakeholder;

typedef struct  {
    String nonGovStakeholderId
    String aBN
    String stakeholderName
    String stakeholderDetails
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.businessDirector> businessDirectorIds
 CRegister.businessChannelOwner businessChannelOwnerId
} nonGovStakeholder;

typedef struct {
    String partnerId
    String aBN
    String partnerName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} partner;

typedef struct {
    String communityId
    String groupName
    String firstName
    String lastName
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> homePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} community;

typedef struct  {
    String mediaId
    String aBN
    String companyName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} media;

typedef struct {
    String ticaId
    String ticaUserName
    String tICAPassword
    String tenantFirstName
    String tenantMiddleInitialOrName
    String tenantLastName
    String tenantDateOfBirth
    String applicantFirstName
    String applicantMiddleInitialOrName
    String applicantLastName
    String applicantDateOfBirth
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CCustomer.applicant applicantId
 CProperty.tenant tenancyId
} tICA;

typedef struct {
    String agentId
    String aBN
    String agencyName
    String agentType
    String descriptionOfAgency
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String residentialAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CStakeholder.agentType agentTypeId
 ArrayOf<CAdministration.businessDirector> businessDirectorIds
 CRegister.businessChannelOwner businessChannelOwnerId
} agent;

typedef struct {
  String agentTypeId
  String agentType
  String agentTypeDescription
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 CAdministration.department deptId
 ArrayOf<CAdministration.service> serviceIds
 ArrayOf<CSupplier.supplierType> supplierTypeIds
 CRegulator.stateBasedRegulator stateBasedRegId
 CRegulator.nationalRegulator natRegId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 ArrayOf<CAdministration.video> videoRefIds
} agentType;

typedef struct {
    String stateLAHAuthorityId
    String authorityName
 CHelper.ausState ausState
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CProperty.propertyOwner propertyOwnerId
} stateLAHAuthority;

typedef struct {
    String statePublicHousingAuthorityId
    String authorityName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CHelper.ausState ausState
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CProperty.propertyOwner propertyOwnerId
 CRegister.businessChannelOwner businessChannelOwnerId
} statePublicHousingAuthority;




// Elastos defined macros can be used to simplify writing




}

   class CRegulator {
       constructor();              // explicitly declare constructor that has no parameter

      interface ICH;

typedef struct  {
    String auditorFinancialId
    String name
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} auditorFinancial;

typedef struct {
    String securityAuditorId
    String name
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} securityAuditor;

typedef struct {
    String communityHousingRegulatorId
    String authorityName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CHelper.ausState> ausStates
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} communityHousingRegulator;

typedef struct {
    String rentalBondAuthorityId
    String authorityName
 CHelper.ausState ausState
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CProperty.property propertyId
 CProperty.tenant tenancyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} rentalBondAuthority;

typedef struct {
    String aTOId
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} aTO;

typedef struct {
    String aSICId
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} aSIC;

typedef struct {
    String aCNCId
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} aCNC;

typedef struct {
    String natRegId
    String natRegName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} nationalRegulator;

typedef struct {
    String stateBasedRegId
    String stateBasedRegName
 CHelper.ausState ausState
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddresses
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> workPhone
    ArrayOf<String> contactedWithDetails
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
 CRegister.businessChannelOwner businessChannelOwnerId
} stateBasedRegulator;

typedef struct {
    String landTitleRegistryId
    String authorityName
 CHelper.ausState ausState
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    String email
    Int32 mobilePhone
    Int32 workPhone
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CProperty.property propertyId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} stateLandTitleRegistry;

typedef struct {
    String tribunalId
    String authorityName
 CHelper.ausState ausState
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    String email
    Int32 mobilePhone
    Int32 workPhone
    ArrayOf<String> caseDetailsActsResponsesAllegationsRebuttals
    ArrayOf<String> dateTimeDetailsInChronologicalOrder
    ArrayOf<String> adjournedOn
    ArrayOf<String> adjournedUntil
    ArrayOf<String> contactedWithDetails
 CRegister.businessChannelOwner businessChannelOwnerId
 CProperty.property propertyId
 CProperty.tenant tenancyId
 CAdministration.branch branchId
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} nCAT;




// Elastos defined macros can be used to simplify writing




}

   Class(CRegister)

       constructor();          // explicitly declare constructor that has no parameter

      interface ICH;

   typedef struct {
    String sideChainOperatorId
    String equivalentbusinessChannelOwnerId
    String bankName
    String bankBSB
    String bankAccNum
    String businessName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddressList
    ArrayOf<Int32> workPhone
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> homePhone
    String aTOTFN
    String aBN
    String aCN
    String startTaxYear
    Int32 nextFinTxNum
    Int32 nextjobNumPerformed
    Int32 nextLinkingInternalBudgetNum
 ArrayOf<CFinance.chartOfAccounts> chartOfAccountsIds
 ArrayOf<CFinance.chartOfClasses> chartOfClassesIds
 ArrayOf<CAdministration.businessDirector> businessDirectorIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} sideChainOperator;

typedef struct {
    String businessChannelOwnerId
    String linkedToThisSideChainOperatorId
    String linkedToThissupplierId
    String linkedToThiscustomerId
    String bankName
    String bankBSB
    String bankAccNum
    ArrayOf<String> allbranchIds
    String businessName
    ArrayOf<String> contactFirstNameList
    ArrayOf<String> contactLastNameList
    String streetAddress
    String postalAddress
    ArrayOf<String> emailAddressList
    ArrayOf<Int32> workPhone
    ArrayOf<Int32> mobilePhone
    ArrayOf<Int32> homePhone
    String aTOTFN
    String aBN
    String aCN
    String startTaxYear
    Int32 nextFinTxNum
    Int32 nextjobNumPerformed
    Int32 nextLinkingInternalBudgetNum
    ArrayOf<String> contactedWithDetails
    Boolean active
 ArrayOf<CFinance.chartOfAccounts> chartOfAccountsIds
 ArrayOf<CFinance.chartOfClasses> chartOfClassesIds
 ArrayOf<CAdministration.businessDirector> businessDirectorIds
 ArrayOf<CAdministration.documents> docRefIds
 ArrayOf<CAdministration.images> imageRefIds
} businessChannelOwner;




// Elastos defined macros can be used to simplify writing



}


   Class(CHelper)

       constructor();          // explicitly declare constructor that has no parameter

      interface ICH;

typedef enum {
ACT
NSW
NT
QLD
SA
TAS
VIC
WA
}ausState;

typedef enum {
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
} dayOfWeek;

typedef enum {
Monday
Tuesday
ednesday
Thursday
Friday
} weekDay;

typedef enum {
Jan
Feb
Mar
Apr
May
Jun
Jul
Aug
Sept
Oct
Nov
Dec
} month;

typedef enum {
Jan
Mar
May
Jul
Aug
Oct
Dec
} thirtyOneDaymonth;

typedef enum {
Apr
Jun
Sept
Nov
} thirtyDaymonth;

typedef enum {
Feb
} twentyEightDaymonth;

typedef enum {
Feb
} leapmonth;

typedef enum {
Rare
Unlikely
Possible
Likely
AlmostCertain
} riskLikelihoodOfOccurrenceRating;

typedef enum {
Insignificant
Minor
Moderate
Major
Extreme
} riskConsequence;

typedef enum {
Insignificant1
Minor2
Moderate3
Major4
Extreme5
} residualRiskLevel;

typedef enum {
  Federal
  ACT
  NSW
  NT
  QLD
  SA
  TAS
  VIC
  WA
  Local
} govLevel;

typedef enum {
  VesselContainingAPureGas
  VesselContainingAGasMixture
  VesselContainingAerosol
  VesselContainingMixedPhasesSolLiq
  VesselContainingMixedPhasesSolGas
  VesselContainingMixedPhasesLiqGas
  VesselContainingMixedPhasesSolLiqGas
  VesselContainingAPureLiquidOrSolutionOrColloidOrEmulsion
  VesselContainingALiquidMixture
  VesselContainingPerishables
  VesselContainingSolidPowderFine
  VesselContainingSolidPowderMedium
  VesselContainingSolidPowderCoarse
  SolidAggregateFine
  SolidAggregateMedium
  SolidAggregateCoarse
  StationaryRigidBodyOrBodies
  MotiveAndStationaryRigidBodyOrBodies
  StationaryRigidBodiesAndBodiesIncludingFluidVessels
  MotiveAndStationaryRigidBodiesAndBodiesIncludingFluidVesselsAndChannels
  MoreComplexBodies
} physicalStateWhenIdle;

typedef enum {
WarningFragile
WarningHighlyFragile
WarningExtremelyFragile
} fragility;

typedef enum {
NonToxic
DoNotInhaleFumes
DoNotIngest
AvoidEyeContact
LowLevelRadiationHandleWithCare
ModerateLevelRadioactivityHandleWithExtremeCaution
ToxicHandleWithCare
HighlyToxicHandleWithExtremeCaution
} toxicity;

typedef enum {
NonCorrosive
DoNotInhaleFumes
DoNotIngest
AvoidEyeContact
ModeratelyCorrosiveDoNotTouch
HighlyCorrosiveUseExtremeCaution
} corrosiveness;

typedef enum {
  MasterLedgerAsset
  MasterLedgerLiability
  MasterLedgerEquity
  MasterLedgerSuspense
  MasterLedgerIncome
  MasterLedgerReturnsIn
  MasterLedgerExpense
  MasterLedgerReturnsOut
  MasterLedgerOtherIncome
  MasterLedgerOtherExpense
} ledgerTitle;

typedef enum {
Cash
Cheque
MoneyOrder
EFTPOS
DebitCard
CreditCard
DirectDebit
Centrepay
ForeignCheque
InternationalMoneyTransfer
}  paymentMethod;

typedef enum {
  FBT
  GST
  PAYG
  PayRollTax
  StampDuty
} taxCode;

typedef enum {
Contact
Lead 
Buyer
Seller
Lessor
applicant
Lessee
Resident
Agent
Other
} relationship;

typedef enum {
Sale
Lease
SaleorLease
NeitherSaleNorLease
} propertyTradingBasis;

typedef enum {
Signage
Print
Electronic
Radio
Events
Television
Cinema
} advertisingMedium;

typedef enum {
Closetransportschoolsshops
Views
Secluded
Quiet
Leafy
SecurityBuilding
GatedEstate
CloseBeach
CloseBush
CloseSnow
CloseVineyards
CloseRiversLakes
InnerCityLiving
SuburbanCharm
RenovatorsDream
CountryLiving
MountainLiving
CoastalLife
CommercialSpace
LandZonedIndustrial
IndustrialLandAndBuilding
AgriculturalProperty
} amenities;

typedef enum {
Apartment
StrataTitleApartment
DetachedFlat
IncorporatedFlat
SemiDetachedHouse
House
Duplex
Villa
Hospice
BoardingHouse
Dormitory
Factory
Warehouse
Shops
Offices
ShopswithOffices
ShopswithFlatsOffices
Farm
VacantLand
Docks
} propertyType;

typedef enum {
Hourly
Halfdaily
Daily
Weekly
Fortnightly
Fourweekly
Calendarmonthly
Quarterly
Sixmonthly
Yearly
} billingInterval;

typedef enum {
PassedInspection
FailedInspection
NotInspected
} inspectionStatus;

typedef enum {
Hourly
Daily
Holiday
Student
Temporary
Residential
Commercial
Industrial
Agricultural
} leaseType;

typedef enum {
Unitary
Capital
HeadLease
Joint
Common
} leaseArrangement;

typedef enum {
Hourly
HalfDaily
Daily
Weekly
Fortnightly
Fourweekly
Calendarmonthly
Quarterly
Sixmonthly
Yearly
Ongoing
} leasingTerm;

typedef enum {
NHourly
PerNKilometres
Hourly
HalfDaily
Daily
Weekly
Fortnightly
Fourweekly
Calendarmonthly
Quarterly
Sixmonthly
Yearly
Ongoing
} inspectionTerm;

}




} // ChubbaMorris
    } // Elastos

}
